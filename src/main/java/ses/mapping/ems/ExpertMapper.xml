<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.ems.ExpertMapper">
    <resultMap id="BaseResultMap" type="ses.model.ems.Expert">
        <id column="ID" jdbcType="VARCHAR" property="id" />
        <result column="IS_SUBMIT" jdbcType="VARCHAR" property="isSubmit" />
        <result column="IS_DO" jdbcType="VARCHAR" property="isDo" />
        <result column="IS_DELETE" jdbcType="DECIMAL" property="isDelete" />
        <result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="SUBMIT_AT" jdbcType="TIMESTAMP" property="submitAt" />
        <result column="GENDER" jdbcType="CHAR" property="gender" />
        <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
        <result column="ID_CARD_NUMBER" jdbcType="VARCHAR" property="idCardNumber" />
        <result column="COVER_NOTE" jdbcType="VARCHAR" property="coverNote" />
        <result column="PRODUCT_CATEGORIES" jdbcType="VARCHAR"
                property="productCategories" />
        <result column="ACADEMIC_ACHIEVEMENT" jdbcType="VARCHAR"
                property="academicAchievement" />
        <result column="REVIEW_SITUATION" jdbcType="VARCHAR" property="reviewSituation" />
        <result column="AVOIDANCE_SITUATION" jdbcType="VARCHAR"
                property="avoidanceSituation" />
        <result column="BIRTHDAY" jdbcType="TIMESTAMP" property="birthday" />
        <result column="ID_NUMBER" jdbcType="VARCHAR" property="idNumber" />
        <result column="EMAIL" jdbcType="VARCHAR" property="email" />
        <result column="JOB_EXPERIENCES" jdbcType="VARCHAR" property="jobExperiences" />
        <result column="ID_TYPE" jdbcType="VARCHAR" property="idType" />
        <result column="EXPERTS_FROM" jdbcType="VARCHAR" property="expertsFrom" />
        <result column="POLITICS_STATUS" jdbcType="VARCHAR" property="politicsStatus" />
        <result column="NATION" jdbcType="VARCHAR" property="nation" />
        <result column="GRADUATE_SCHOOL" jdbcType="VARCHAR" property="graduateSchool" />
        <result column="LAST_EDUCATION" jdbcType="VARCHAR" property="hightEducation" />
        <result column="MAJOR" jdbcType="VARCHAR" property="major" />
        <result column="WORK_UNIT" jdbcType="VARCHAR" property="workUnit" />
        <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
        <result column="FAX" jdbcType="VARCHAR" property="fax" />
        <result column="MAKE_TECH_DATE" jdbcType="TIMESTAMP" property="makeTechDate" />
        <result column="HEALTH_STATE" jdbcType="VARCHAR" property="healthState" />
        <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
        <result column="PROFESS_TECH_TITLES" jdbcType="VARCHAR"
                property="professTechTitles" />
        <result column="TIME_TO_WORK" jdbcType="TIMESTAMP" property="timeToWork" />
        <result column="TIME_START_WORK" jdbcType="TIMESTAMP" property="timeStartWork" />
        <result column="UNIT_ADDRESS" jdbcType="VARCHAR" property="unitAddress" />
        <result column="POST_CODE" jdbcType="VARCHAR" property="postCode" />
        <result column="DEGREE" jdbcType="VARCHAR" property="degree" />
        <result column="AT_DUTY" jdbcType="VARCHAR" property="atDuty" />
        <result column="EXPERTS_TYPE_ID" jdbcType="VARCHAR" property="expertsTypeId" />
        <result column="PURCHASE_DEP_ID" jdbcType="VARCHAR" property="purchaseDepId" />
        <result column="STATUS" property="status" />
        <result column="IS_BLACK" jdbcType="CHAR" property="isBlack" />
        <result column="HONESTY_SCORE" jdbcType="DECIMAL" property="honestyScore" />
        <result column="REAL_NAME" jdbcType="VARCHAR" property="relName" />
        <result column="IS_PASS" jdbcType="DECIMAL" property="isPass" />
        <result column="IS_PROVISIONAL" jdbcType="DECIMAL" property="isProvisional" />
        <result column="REMARKS" jdbcType="VARCHAR" property="remarks" />
        <result column="STEP_NUMBER" jdbcType="VARCHAR" property="stepNumber" />
        <result column="AUDIT_AT" jdbcType="TIMESTAMP" property="auditAt" />
        <result column="IS_REFERENCE_LETTER" jdbcType="CHAR" property="isReferenceLftter" />
        <result column="PROFESSIONAL" jdbcType="VARCHAR"  property="professional" />
        <result column="TIME_PROFESSIONAL" jdbcType="TIMESTAMP" property="timeProfessional" />
        <result column="IS_PUBLISH" jdbcType="DECIMAL" property="isPublish" />
        <result column="IS_ADD_EXPERT" jdbcType="DECIMAL" property="isAddExpert" />
 	    <result column="IS_TITLE" property="isTitle" />
		<result column="TEACH_TITLE" property="teachTitle" />
		<result column="NET_TYPE" property="netType" />
		<result column="EXTRACT_ORGID" property="extractOrgid" />
		<result column="ORGNAME" property="orgName" />
		<result column="AUDITOR" property="auditor" />
		<result column="AUDIT_TEMPORARY" property="auditTemporary" />
		<result column="AUDIT_OPINION_ATTACH" property="auditOpinionAttach" />
		<result column="IS_REVIEW_END" property="isReviewEnd" />
		<result column="REVIEW_PEOPLE" property="reviewPeople" />
		<result column="REVIEW_UNQUALIFIED_CONFIRM" property="reviewUnqualifiedConfirm" />
		<result column="STORAGE_AT" property="storageAt" />
		<result column="REVIEW_STATUS" property="reviewStatus" />
    </resultMap>

    <resultMap id="BaseResultMapVO" type="ses.model.ems.ExpertVO" extends="BaseResultMap">
        <result column="BATCH_DETAILS_NUMBER" jdbcType="VARCHAR" property="batchDetailsNumber" />
    </resultMap>
    
    <!-- 统计Analyze关系映射 -->
		<resultMap type="ses.model.bms.AnalyzeBigDecimal" id="baseAnalyze">
			<result column="COL_NAME" property="name"/>
			<result column="COL_VALUE" property="value"/>
			<result column="COL_ID" property="id"/>
		</resultMap>
    
    <!-- 专家公示 -->
	  <resultMap id="expertOfPublicityMap" type="ses.model.ems.Expert">
		  <id column="ID" jdbcType="VARCHAR" property="id" />
		  <result column="AUDIT_AT" jdbcType="TIMESTAMP" property="auditAt" />
	  </resultMap>
    
    
    <!-- 专家公示列表查询 -->
    <resultMap id="expertOfPublicityMapList" type="ses.model.ems.ExpertPublicity" extends="BaseResultMap">
    </resultMap>
    
    <sql id="Base_Column_List">
        ID, IS_SUBMIT, IS_DO, IS_DELETE, CREATED_AT,SUBMIT_AT,
        GENDER,
        UPDATED_AT, MOBILE,
        BIRTHDAY,
        ID_NUMBER, ID_TYPE, EXPERTS_FROM,
        POLITICS_STATUS, NATION, GRADUATE_SCHOOL,
        LAST_EDUCATION,
        MAJOR,
        WORK_UNIT, TELEPHONE, FAX, MAKE_TECH_DATE, HEALTH_STATE, ADDRESS,
        PROFESS_TECH_TITLES,
        TIME_TO_WORK, TIME_START_WORK, UNIT_ADDRESS,
        POST_CODE, DEGREE, AT_DUTY,
        EXPERTS_TYPE_ID,
        PURCHASE_DEP_ID, STATUS,
        IS_BLACK, HONESTY_SCORE, REAL_NAME, IS_PASS, IS_PROVISIONAL,
        REMARKS,
        STEP_NUMBER, EMAIL, JOB_EXPERIENCES, ID_CARD_NUMBER,
        COVER_NOTE,
        PRODUCT_CATEGORIES, ACADEMIC_ACHIEVEMENT,
        REVIEW_SITUATION,
        AVOIDANCE_SITUATION,
        AUDIT_AT,
        IS_REFERENCE_LETTER,
        PROFESSIONAL,
        TIME_PROFESSIONAL,
        IS_PUBLISH,IS_ADD_EXPERT,IS_TITLE,TEACH_TITLE, EXTRACT_ORGID, AUDITOR,
        AUDIT_OPINION_ATTACH,
        IS_REVIEW_END,REVIEW_PEOPLE,REVIEW_UNQUALIFIED_CONFIRM,STORAGE_AT,REVIEW_STATUS
    </sql>
    <sql id="Column_List">
        e.ID, e.IS_SUBMIT, e.IS_DO, e.IS_DELETE, e.CREATED_AT,
        e.GENDER,
        e.UPDATED_AT, e.MOBILE,
        e.BIRTHDAY,
        e.ID_NUMBER, e.ID_TYPE,
        e.EXPERTS_FROM,
        e.POLITICS_STATUS, e.NATION, e.GRADUATE_SCHOOL,
        e.LAST_EDUCATION,
        e.MAJOR,
        e.WORK_UNIT, e.TELEPHONE, e.FAX,
        e.MAKE_TECH_DATE, e.HEALTH_STATE, e.ADDRESS,
        e.PROFESS_TECH_TITLES,
        e.TIME_TO_WORK, e.TIME_START_WORK, e.UNIT_ADDRESS,
        e.POST_CODE,
        e.DEGREE, e.AT_DUTY,
        e.EXPERTS_TYPE_ID,
        e.PURCHASE_DEP_ID, e.STATUS,
        e.IS_BLACK, e.HONESTY_SCORE, e.REAL_NAME, e.IS_PASS, e.IS_PROVISIONAL,
        e.REMARKS,
        e.STEP_NUMBER, e.EMAIL, e.JOB_EXPERIENCES, e.ID_CARD_NUMBER,
        e.COVER_NOTE,
        e.PRODUCT_CATEGORIES, e.ACADEMIC_ACHIEVEMENT,
        e.REVIEW_SITUATION,
        e.AVOIDANCE_SITUATION,
        e.AUDIT_AT,
        e.IS_REFERENCE_LETTER,
        e.PROFESSIONAL,
        e.TIME_PROFESSIONAL,e.IS_PUBLISH,e.IS_ADD_EXPERT,e.IS_TITLE,e.TEACH_TITLE
    </sql>
    <!-- 获取所有专家,仅用作定时删除无效专家 -->
    <select id="getAllExpert" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from T_SES_EMS_EXPERT
        where IS_DELETE = 0
    </select>
    <!-- 查询用户名是否存在 -->
    <!-- <select id="selectisSubmitList" parameterType="java.lang.String" resultMap="BaseResultMap"
        > select IS_SUBMIT from T_SES_EMS_EXPERT where IS_SUBMIT = #{isSubmit} </select> -->
    <!-- 查询所有专家 可条件查询 -->
    <select id="selectAllExpert" resultMap="BaseResultMap">
      select
        T1.ID,
        T1.REAL_NAME,
        T1.ID_CARD_NUMBER,
        T1.GENDER,
        T1.EXPERTS_TYPE_ID,
        T1.GRADUATE_SCHOOL,
        T1.STATUS,
        T1.IS_PROVISIONAL,
        T1.EXPERTS_FROM,
        T1.MOBILE,
        T1.IS_SUBMIT,
        T1.CREATED_AT,
        T1.SUBMIT_AT,
        T1.AUDIT_AT,
        T1.COVER_NOTE,
        T1.WORK_UNIT,
        T1.AUDIT_TEMPORARY,
        T1.TELEPHONE,
        T1.STORAGE_AT,
        T1.AT_DUTY,
        T1.PROFESS_TECH_TITLES,
        T2.LOGIN_NAME AS loginName,
        org.SHORT_NAME AS orgName,
        AREA.NAME AS ADDRESS
      from
        T_SES_EMS_EXPERT t1
        LEFT JOIN T_SES_BMS_USER t2 ON T1.ID = T2.TYPE_ID
        LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON T1.PURCHASE_DEP_ID = dep.ID
        LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
        LEFT JOIN T_SES_BMS_AREA A ON t1.address = A.ID
        LEFT JOIN T_SES_BMS_AREA AREA ON A.PARENT_ID = AREA.ID
        <if test="expertCategoryId != null and expertCategoryId != ''">
          RIGHT JOIN (
            select DISTINCT expert_id as expertId from T_SES_EMS_EXPERT_CATEGORY where category_id in 
            (<foreach collection="expertCategoryId" item="categoryId" index="index"  open="" separator="," close="">
              #{categoryId}
            </foreach>) 
          ) t5  on t1.ID = t5.expertId
        </if>
        where 1=1 and IS_DELETE = 0
        <if test="relName != null and relName !=''">
            AND T1.REAL_NAME like CONCAT(CONCAT('%', #{relName}), '%')
        </if>
        <if test="mobile != null and mobile !=''">
             AND T1.MOBILE like CONCAT(CONCAT('%', #{mobile}), '%')
        </if>
        <if test="expertsFrom != null and expertsFrom !=''">
            AND T1.EXPERTS_FROM = #{expertsFrom}
        </if>
        <if test="status != null and status !=''">
          <if test="status != 'temporary' and status != 'endOfTrial'">
	          <if test="status == 4">
	            AND IS_PROVISIONAL = '0'
	          </if>
	            AND T1.STATUS = #{status}
	        </if>
            
            <!-- 临时专家 -->
          <if test="status == 'temporary'">
            AND IS_PROVISIONAL = '1'
            AND T1.STATUS = '4'
          </if>
          
            <!-- 预初审结束 -->
          <if test="status == 'endOfTrial'">
            AND (T1.STATUS = '15' or T1.STATUS = '16')
          </if>
        </if>
        <if test="expertsTypeId != null and expertsTypeId !=''">
          AND instr(T1.EXPERTS_TYPE_ID, #{expertsTypeId} )>0
        </if>
        <if test="isPublish != null and isPublish !=''">
          AND T1.IS_PUBLISH = #{isPublish}
        </if>
        <if test="idCardNumber !=null and idCardNumber !=''">
          and ID_CARD_NUMBER like CONCAT(CONCAT('%', #{idCardNumber}), '%')
        </if>
        <if test="graduateSchool !=null and graduateSchool !=''">
          and GRADUATE_SCHOOL like CONCAT(CONCAT('%', #{graduateSchool}), '%')
        </if>
        <if test="orgName !=null and orgName !=''">
          and org.SHORT_NAME =#{orgName}
        </if>
        <if test="auditTemporary !=null">
          and T1.AUDIT_TEMPORARY = #{auditTemporary}
        </if>
        <if test="address != null and address !=''">
		      AND A.PARENT_ID = #{address}
		    </if>
        ORDER BY T1.SUBMIT_AT DESC NULLS LAST
    </select>

    <select id="selectSecondAuditExpert" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from T_SES_EMS_EXPERT
        where 1=1 and IS_SUBMIT != '0' and IS_DELETE != 1
        and (STATUS = '1' or STATUS = '4' or STATUS = '5')
        <if test="relName != null and relName !=''">
            AND REAL_NAME like CONCAT(CONCAT('%', #{relName}), '%')
        </if>
        <if test="expertsFrom != null and expertsFrom !=''">
            AND EXPERTS_FROM = '${expertsFrom}'
        </if>
        <if test="expertsTypeId != null and expertsTypeId !=''">
            AND EXPERTS_TYPE_ID = #{expertsTypeId}
        </if>
        ORDER BY CREATED_AT DESC
    </select>
    <!-- 查找待办数量 -->
    <select id="getCount" parameterType="ses.model.ems.Expert"
            resultType="java.lang.Integer">
        <!-- @mbggenerated -->
        select
        count(*)
        from T_SES_EMS_EXPERT
        where 1=1 and IS_SUBMIT != '0' and
        IS_DELETE != 1
        <if test="relName!=null">
            and REAL_NAME= #{relName,jdbcType=VARCHAR}
        </if>
        <if test="expertsTypeId!=null">
            and EXPERTS_TYPE_ID= #{expertsTypeId,jdbcType=VARCHAR}
        </if>
        <if test="status!=null">
            and STATUS = #{status}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap" flushCache="true" useCache="false">
        select
        t1.*,t3.SHORT_NAME AS orgName,
        t2.EXPER_CONTACT AS contactName,
        t2.EXPER_PHONE AS contactMobile
        from T_SES_EMS_EXPERT t1
        LEFT JOIN T_SES_OMS_PURCHASE_DEP t2 ON t1.PURCHASE_DEP_ID = t2.ID
    	LEFT JOIN T_SES_OMS_ORG t3 ON t3.ID = t2.ORG_ID
        where t1.ID = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from
        T_SES_EMS_EXPERT
        where ID = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="ses.model.ems.Expert">
        insert into T_SES_EMS_EXPERT
        (ID, IS_SUBMIT, IS_DO,
        IS_DELETE, CREATED_AT, GENDER,
        UPDATED_AT,
        MOBILE, BIRTHDAY,
        ID_NUMBER, ID_TYPE, EXPERTS_FROM,
        POLITICS_STATUS,
        NATION, GRADUATE_SCHOOL,
        LAST_EDUCATION, MAJOR, WORK_UNIT,
        TELEPHONE,
        FAX, MAKE_TECH_DATE,
        HEALTH_STATE, ADDRESS, PROFESS_TECH_TITLES,
        TIME_TO_WORK, TIME_START_WORK, UNIT_ADDRESS,
        POST_CODE, DEGREE,
        AT_DUTY,
        EXPERTS_TYPE_ID, PURCHASE_DEP_ID, STATUS,
        IS_BLACK,
        HONESTY_SCORE, REAL_NAME, IS_PASS, IS_PROVISIONAL, REMARKS, AUDIT_AT, IS_REFERENCE_LETTER,
        PROFESSIONAL,
        TIME_PROFESSIONAL
        )
        values
        (#{id,jdbcType=VARCHAR},
        #{isSubmit,jdbcType=VARCHAR},
        #{isDo,jdbcType=VARCHAR},
        #{isDelete,jdbcType=DECIMAL},
        #{createdAt,jdbcType=TIMESTAMP},
        #{gender,jdbcType=CHAR},
        #{updatedAt,jdbcType=TIMESTAMP},
        #{mobile,jdbcType=VARCHAR},
        #{birthday,jdbcType=TIMESTAMP},
        #{idNumber,jdbcType=VARCHAR},
        #{idType,jdbcType=VARCHAR},
        #{expertsFrom,jdbcType=VARCHAR},
        #{politicsStatus,jdbcType=VARCHAR},
        #{NATION,jdbcType=VARCHAR},
        #{graduateSchool,jdbcType=VARCHAR},
        #{hightEducation,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR},
        #{workUnit,jdbcType=VARCHAR},
        #{telephone,jdbcType=VARCHAR},
        #{fax,jdbcType=VARCHAR}, #{makeTechDate,jdbcType=TIMESTAMP},
        #{healthState,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
        #{professTechTitles,jdbcType=VARCHAR},
        #{timeToWork,jdbcType=TIMESTAMP},
        #{timeStartWork,jdbcType=TIMESTAMP},
        #{unitAddress,jdbcType=VARCHAR},
        #{postCode,jdbcType=VARCHAR},
        #{degree,jdbcType=VARCHAR},
        #{atDuty,jdbcType=VARCHAR},
        #{expertsTypeId,jdbcType=VARCHAR},
        #{purchaseDepId,jdbcType=VARCHAR},
        #{status},
        #{isBlack,jdbcType=CHAR},
        #{honestyScore,jdbcType=DECIMAL},
        #{relName,jdbcType=VARCHAR},
        #{isPass,jdbcType=DECIMAL},
        #{isProvisional,jdbcType=DECIMAL},#{remarks,jdbcType=VARCHAR},
        #{auditAt,jdbcType=TIMESTAMP},
        #{professional,jdbcType=VARCHAR},
        #{timeProfessional,jdbcType=TIMESTAMP}

        )
    </insert>
    <insert id="insertSelective" parameterType="ses.model.ems.Expert">
        insert into T_SES_EMS_EXPERT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="jobExperiences != null">
                JOB_EXPERIENCES,
            </if>
            <if test="isSubmit != null">
                IS_SUBMIT,
            </if>
            <if test="submitAt != null">
                SUBMIT_AT,
            </if>
            <if test="productCategories != null">
                PRODUCT_CATEGORIES,
            </if>
            <if test="academicAchievement != null">
                ACADEMIC_ACHIEVEMENT,
            </if>
            <if test="reviewSituation != null">
                REVIEW_SITUATION,
            </if>
            <if test="avoidanceSituation != null">
                AVOIDANCE_SITUATION,
            </if>
            <if test="coverNote != null">
                COVER_NOTE,
            </if>
            <if test="idCardNumber != null">
                ID_CARD_NUMBER,
            </if>
            <if test="email != null">
                EMAIL,
            </if>

            <if test="isDo != null">
                IS_DO,
            </if>
            <if test="isDelete != null">
                IS_DELETE,
            </if>
            <if test="isPass != null">
                IS_PASS,
            </if>
            <if test="isProvisional != null">
                IS_PROVISIONAL,
            </if>
            <if test="createdAt != null">
                CREATED_AT,
            </if>
            <if test="gender != null">
                GENDER,
            </if>
            <if test="updatedAt != null">
                UPDATED_AT,
            </if>
            <if test="mobile != null">
                MOBILE,
            </if>
            <if test="birthday != null">
                BIRTHDAY,
            </if>
            <if test="idNumber != null">
                ID_NUMBER,
            </if>
            <if test="idType != null">
                ID_TYPE,
            </if>
            <if test="expertsFrom != null">
                EXPERTS_FROM,
            </if>
            <if test="politicsStatus != null">
                POLITICS_STATUS,
            </if>
            <if test="nation != null">
                NATION,
            </if>
            <if test="graduateSchool != null">
                GRADUATE_SCHOOL,
            </if>
            <if test="hightEducation != null">
                LAST_EDUCATION,
            </if>
            <if test="major != null">
                MAJOR,
            </if>
            <if test="workUnit != null">
                WORK_UNIT,
            </if>
            <if test="telephone != null">
                TELEPHONE,
            </if>
            <if test="fax != null">
                FAX,
            </if>
            <if test="makeTechDate != null">
                MAKE_TECH_DATE,
            </if>
            <if test="healthState != null">
                HEALTH_STATE,
            </if>
            <if test="address != null">
                ADDRESS,
            </if>
            <if test="professTechTitles != null">
                PROFESS_TECH_TITLES,
            </if>
            <if test="timeToWork != null">
                TIME_TO_WORK,
            </if>
            <if test="timeStartWork != null">
                TIME_START_WORK,
            </if>
            <if test="unitAddress != null">
                UNIT_ADDRESS,
            </if>
            <if test="postCode != null">
                POST_CODE,
            </if>
            <if test="degree != null">
                DEGREE,
            </if>
            <if test="atDuty != null">
                AT_DUTY,
            </if>
            <if test="expertsTypeId != null">
                EXPERTS_TYPE_ID,
            </if>
            <if test="purchaseDepId != null">
                PURCHASE_DEP_ID,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="isBlack != null">
                IS_BLACK,
            </if>
            <if test="honestyScore != null">
                HONESTY_SCORE,
            </if>
            <if test="relName != null">
                REAL_NAME,
            </if>
            <if test="remarks != null">
                REMARKS,
            </if>
            <if test="stepNumber != null">
                STEP_NUMBER,
            </if>
            <if test="auditAt != null">
                AUDIT_AT,
            </if>
            <if test="isReferenceLftter != null">
                IS_REFERENCE_LETTER,
            </if>
            <if test="professional != null">
                PROFESSIONAL,
            </if>
            <if test="timeProfessional != null">
                TIME_PROFESSIONAL,
            </if>
            
			<if test="isTitle != null">
                IS_TITLE,
            </if>
            <if test="teachTitle != null">
                TEACH_TITLE,
            </if>
            <if test="netType != null">
                NET_TYPE,
            </if>
            
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="jobExperiences != null">
                #{jobExperiences,jdbcType=VARCHAR},
            </if>
            <if test="isSubmit != null">
                #{isSubmit,jdbcType=VARCHAR},
            </if>
            <if test="submitAt != null">
                #{submitAt,jdbcType=TIMESTAMP},
            </if>
            <if test="productCategories != null">
                #{productCategories,jdbcType=VARCHAR},
            </if>
            <if test="academicAchievement != null">
                #{academicAchievement,jdbcType=VARCHAR},
            </if>
            <if test="reviewSituation != null">
                #{reviewSituation,jdbcType=VARCHAR},
            </if>
            <if test="avoidanceSituation != null">
                #{avoidanceSituation,jdbcType=VARCHAR},
            </if>
            <if test="coverNote != null">
                #{coverNote,jdbcType=VARCHAR},
            </if>
            <if test="idCardNumber != null">
                #{idCardNumber,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="isDo != null">
                #{isDo,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=DECIMAL},
            </if>
            <if test="isPass != null">
                #{isPass,jdbcType=DECIMAL},
            </if>
            <if test="isProvisional != null">
                #{isProvisional,jdbcType=DECIMAL},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="idNumber != null">
                #{idNumber,jdbcType=VARCHAR},
            </if>
            <if test="idType != null">
                #{idType,jdbcType=VARCHAR},
            </if>
            <if test="expertsFrom != null">
                #{expertsFrom,jdbcType=VARCHAR},
            </if>
            <if test="politicsStatus != null">
                #{politicsStatus,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="graduateSchool != null">
                #{graduateSchool,jdbcType=VARCHAR},
            </if>
            <if test="hightEducation != null">
                #{hightEducation,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                #{major,jdbcType=VARCHAR},
            </if>
            <if test="workUnit != null">
                #{workUnit,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="fax != null">
                #{fax,jdbcType=VARCHAR},
            </if>
            <if test="makeTechDate != null">
                #{makeTechDate,jdbcType=TIMESTAMP},
            </if>
            <if test="healthState != null">
                #{healthState,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="professTechTitles != null">
                #{professTechTitles,jdbcType=VARCHAR},
            </if>
            <if test="timeToWork != null">
                #{timeToWork,jdbcType=TIMESTAMP},
            </if>
            <if test="timeStartWork != null">
                #{timeStartWork,jdbcType=TIMESTAMP},
            </if>
            <if test="unitAddress != null">
                #{unitAddress,jdbcType=VARCHAR},
            </if>
            <if test="postCode != null">
                #{postCode,jdbcType=VARCHAR},
            </if>
            <if test="degree != null">
                #{degree,jdbcType=VARCHAR},
            </if>
            <if test="atDuty != null">
                #{atDuty,jdbcType=VARCHAR},
            </if>
            <if test="expertsTypeId != null">
                #{expertsTypeId,jdbcType=VARCHAR},
            </if>
            <if test="purchaseDepId != null">
                #{purchaseDepId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="isBlack != null">
                #{isBlack,jdbcType=CHAR},
            </if>
            <if test="honestyScore != null">
                #{honestyScore,jdbcType=DECIMAL},
            </if>
            <if test="relName != null">
                #{relName,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="stepNumber != null">
                #{stepNumber,jdbcType=VARCHAR},
            </if>
            <if test="auditAt != null">
                #{auditAt,jdbcType=TIMESTAMP},
            </if>
            <if test="isReferenceLftter != null">
                #{isReferenceLftter,jdbcType=CHAR},
            </if>
            <if test="professional != null">
                #{professional,jdbcType=VARCHAR},
            </if>
            <if test="timeProfessional != null">
                #{timeProfessional,jdbcType=TIMESTAMP},
            </if>
			<if test="isTitle != null">
                #{isTitle},
            </if>
             <if test="teachTitle != null">
                #{teachTitle},
            </if>
            <if test="netType != null">
                #{netType},
            </if>
            
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="ses.model.ems.Expert">
        update T_SES_EMS_EXPERT
        <set>
            <if test="isSubmit != null">
                IS_SUBMIT = #{isSubmit,jdbcType=VARCHAR},
            </if>
            <if test="jobExperiences != null">
                JOB_EXPERIENCES = #{jobExperiences,jdbcType=VARCHAR},
            </if>
            <if test="submitAt != null">
                SUBMIT_AT = #{submitAt,jdbcType=TIMESTAMP},
            </if>
            <if test="productCategories != null">
                PRODUCT_CATEGORIES =
                #{productCategories,jdbcType=VARCHAR},
            </if>
            <if test="academicAchievement != null">
                ACADEMIC_ACHIEVEMENT =
                #{academicAchievement,jdbcType=VARCHAR},
            </if>
            <if test="reviewSituation != null">
                REVIEW_SITUATION = #{reviewSituation,jdbcType=VARCHAR},
            </if>
            <if test="avoidanceSituation != null">
                AVOIDANCE_SITUATION =
                #{avoidanceSituation,jdbcType=VARCHAR},
            </if>
            <if test="idCardNumber != null">
                ID_CARD_NUMBER = #{idCardNumber,jdbcType=VARCHAR},
            </if>
            <if test="coverNote != null">
                COVER_NOTE = #{coverNote,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                EMAIL = #{email,jdbcType=VARCHAR},
            </if>
            <if test="isDo != null">
                IS_DO = #{isDo,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                IS_DELETE = #{isDelete,jdbcType=DECIMAL},
            </if>
            <if test="isPass != null">
                IS_PASS = #{isPass,jdbcType=DECIMAL},
            </if>
            <if test="isProvisional != null">
                IS_PROVISIONAL = #{isProvisional,jdbcType=DECIMAL},
            </if>
            <if test="createdAt != null">
                CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="gender != null">
                GENDER = #{gender,jdbcType=CHAR},
            </if>
            <if test="updatedAt != null">
                UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="mobile != null">
                MOBILE = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="idNumber != null">
                ID_NUMBER = #{idNumber,jdbcType=VARCHAR},
            </if>
            <if test="idType != null">
                ID_TYPE = #{idType,jdbcType=VARCHAR},
            </if>
            <if test="expertsFrom != null">
                EXPERTS_FROM = #{expertsFrom,jdbcType=VARCHAR},
            </if>
            <if test="politicsStatus != null">
                POLITICS_STATUS = #{politicsStatus,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                NATION = #{nation,jdbcType=VARCHAR},
            </if>
            <if test="graduateSchool != null">
                GRADUATE_SCHOOL = #{graduateSchool,jdbcType=VARCHAR},
            </if>
            <if test="hightEducation != null">
                LAST_EDUCATION = #{hightEducation,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                MAJOR = #{major,jdbcType=VARCHAR},
            </if>
            <if test="workUnit != null">
                WORK_UNIT = #{workUnit,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                TELEPHONE = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="fax != null">
                FAX = #{fax,jdbcType=VARCHAR},
            </if>
            <if test="makeTechDate != null">
                MAKE_TECH_DATE = #{makeTechDate,jdbcType=TIMESTAMP},
            </if>
            <if test="healthState != null">
                HEALTH_STATE = #{healthState,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                ADDRESS = #{address,jdbcType=VARCHAR},
            </if>
            <if test="professTechTitles != null">
                PROFESS_TECH_TITLES =
                #{professTechTitles,jdbcType=VARCHAR},
            </if>
            <if test="timeToWork != null">
                TIME_TO_WORK = #{timeToWork,jdbcType=TIMESTAMP},
            </if>
            <if test="timeStartWork != null">
                TIME_START_WORK = #{timeStartWork,jdbcType=TIMESTAMP},
            </if>
            <if test="unitAddress != null">
                UNIT_ADDRESS = #{unitAddress,jdbcType=VARCHAR},
            </if>
            <if test="postCode != null">
                POST_CODE = #{postCode,jdbcType=VARCHAR},
            </if>
            <if test="degree != null">
                DEGREE = #{degree,jdbcType=VARCHAR},
            </if>
            <if test="atDuty != null">
                AT_DUTY = #{atDuty,jdbcType=VARCHAR},
            </if>
            <if test="expertsTypeId != null">
                EXPERTS_TYPE_ID = #{expertsTypeId,jdbcType=VARCHAR},
            </if>
            <if test="purchaseDepId != null">
                PURCHASE_DEP_ID = #{purchaseDepId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS = #{status},
            </if>
            <if test="isBlack != null">
                IS_BLACK = #{isBlack,jdbcType=CHAR},
            </if>
            <if test="honestyScore != null">
                HONESTY_SCORE = #{honestyScore,jdbcType=DECIMAL},
            </if>
            <if test="relName != null">
                REAL_NAME = #{relName,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                REMARKS = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="auditAt != null">
                AUDIT_AT = #{auditAt,jdbcType=TIMESTAMP},
            </if>
            <if test="isReferenceLftter != null">
                IS_REFERENCE_LETTER = #{isReferenceLftter,jdbcType=CHAR},
            </if>
            <if test="professional != null">
                PROFESSIONAL = #{professional,jdbcType=VARCHAR},
            </if>
            <if test="timeProfessional != null">
                TIME_PROFESSIONAL = #{timeProfessional,jdbcType=TIMESTAMP},
            </if>
            <if test="isPublish != null">
                IS_PUBLISH = #{isPublish},
            </if>
             <if test="isAddExpert != null">
                IS_ADD_EXPERT = #{isAddExpert},
            </if>
             <if test="isTitle != null">
                IS_TITLE = #{isTitle},
            </if>
             <if test="teachTitle != null">
                TEACH_TITLE = #{teachTitle},
            </if>
             <if test="netType != null">
                NET_TYPE = #{netType},
            </if>
            <if test="auditor != null">
                AUDITOR = #{auditor},
            </if>
            <if test="auditTemporary != null">
                AUDIT_TEMPORARY = #{auditTemporary},
            </if>
            <if test="auditOpinionAttach != null">
                AUDIT_OPINION_ATTACH = #{auditOpinionAttach},
            </if>
            <if test="isReviewEnd != null">
                <if test="isReviewEnd != 0">
                  IS_REVIEW_END = #{isReviewEnd},
                </if>
                <if test="isReviewEnd == 0">
                  IS_REVIEW_END = null,
                </if>
            </if>
            <if test="reviewPeople != null and reviewPeople != ''">
                REVIEW_PEOPLE = #{reviewPeople},
            </if>
            <if test="storageAt != null">
                STORAGE_AT = #{storageAt},
            </if>
            <if test="reviewUnqualifiedConfirm != null and reviewUnqualifiedConfirm !=''">
                REVIEW_UNQUALIFIED_CONFIRM = #{reviewUnqualifiedConfirm},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="ses.model.ems.Expert">
        update
        T_SES_EMS_EXPERT
        <set>
            <if test="isSubmit != null and isSubmit != '0'">
                IS_SUBMIT = #{isSubmit,jdbcType=VARCHAR},
            </if>
            <if test="jobExperiences != null and jobExperiences != ''">
                JOB_EXPERIENCES = #{jobExperiences,jdbcType=VARCHAR},
            </if>
            <if test="submitAt != null and submitAt != ''">
                SUBMIT_AT = #{submitAt,jdbcType=TIMESTAMP},
            </if>
            <if test="productCategories != null and productCategories != ''">
                PRODUCT_CATEGORIES =
                #{productCategories,jdbcType=VARCHAR},
            </if>
            <if test="(academicAchievement != null and academicAchievement != '') || step != null "> 
                ACADEMIC_ACHIEVEMENT =
                #{academicAchievement,jdbcType=VARCHAR},
             </if> 
            <if test="(reviewSituation != null and reviewSituation != '') || step != null ">
                REVIEW_SITUATION = #{reviewSituation,jdbcType=VARCHAR},
             </if> 
            <if test="(avoidanceSituation != null and avoidanceSituation != '') || step != null "> 
                AVOIDANCE_SITUATION =
                #{avoidanceSituation,jdbcType=VARCHAR},
             </if> 
            <if test="idCardNumber != null and idCardNumber != ''">
                ID_CARD_NUMBER = #{idCardNumber,jdbcType=VARCHAR},
            </if>
            <if test="coverNote != null and coverNote != ''">
                COVER_NOTE = #{coverNote,jdbcType=VARCHAR},
            </if>
            <if test="email != null and email != ''">
                EMAIL = #{email,jdbcType=VARCHAR},
            </if>
            <if test="isDo != null and isDo != '0'">
                IS_DO = #{isDo,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null and isDelete != '0'">
                IS_DELETE = #{isDelete,jdbcType=DECIMAL},
            </if>
            <if test="isPass != null and isPass != ''">
                IS_PASS = #{isPass,jdbcType=DECIMAL},
            </if>
            <if test="isProvisional != null and isProvisional != ''">
                IS_PROVISIONAL = #{isProvisional,jdbcType=DECIMAL},
            </if>
            <if test="createdAt != null and createdAt != ''">
                CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="gender != null and gender != ''">
                GENDER = #{gender,jdbcType=CHAR},
            </if>
            <if test="updatedAt != null and updatedAt != ''">
                UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="mobile != null and mobile != ''">
                MOBILE = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null and birthday != ''">
                BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="idNumber != null and idNumber != ''">
                ID_NUMBER = #{idNumber,jdbcType=VARCHAR},
            </if>
            <if test="idType != null and idType != ''">
                ID_TYPE = #{idType,jdbcType=VARCHAR},
            </if>
            <if test="expertsFrom != null and expertsFrom != ''">
                EXPERTS_FROM = #{expertsFrom,jdbcType=VARCHAR},
            </if>
            <if test="politicsStatus != null and politicsStatus != ''">
                POLITICS_STATUS = #{politicsStatus,jdbcType=VARCHAR},
            </if>
            <if test="nation != null and nation != ''">
                NATION = #{nation,jdbcType=VARCHAR},
            </if>
            <if test="(graduateSchool != null and graduateSchool != '') || step != null ">
                GRADUATE_SCHOOL = #{graduateSchool,jdbcType=VARCHAR},
            </if>
            <if test="hightEducation != null and hightEducation != ''">
                LAST_EDUCATION = #{hightEducation,jdbcType=VARCHAR},
            </if>
            <if test="major != null and major != ''">
                MAJOR = #{major,jdbcType=VARCHAR},
            </if>
            <if test="workUnit != null and workUnit != ''">
                WORK_UNIT = #{workUnit,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null and telephone != ''">
                TELEPHONE = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="(fax != null and fax != '') || step != null "> 
                FAX = #{fax,jdbcType=VARCHAR},
             </if> 
            <if test="makeTechDate != null and makeTechDate != ''">
                MAKE_TECH_DATE = #{makeTechDate,jdbcType=TIMESTAMP},
            </if>
            <if test="healthState != null and healthState != ''">
                HEALTH_STATE = #{healthState,jdbcType=VARCHAR},
            </if>
            <if test="address != null and address != ''">
                ADDRESS = #{address,jdbcType=VARCHAR},
            </if>
            <if test="professTechTitles != null and professTechTitles != ''">
                PROFESS_TECH_TITLES =
                #{professTechTitles,jdbcType=VARCHAR},
            </if>
            <if test="(timeToWork != null and timeToWork != '') || step != null "> 
                TIME_TO_WORK = #{timeToWork,jdbcType=TIMESTAMP},
            </if> 
            <if test="timeStartWork != null and timeStartWork != ''">
                TIME_START_WORK = #{timeStartWork,jdbcType=TIMESTAMP},
            </if>
            <if test="unitAddress != null and unitAddress != ''">
                UNIT_ADDRESS = #{unitAddress,jdbcType=VARCHAR},
            </if>
            <if test="postCode != null and postCode != ''">
                POST_CODE = #{postCode,jdbcType=VARCHAR},
            </if>
            <if test="(degree != null and degree != '') || step != null "> 
                DEGREE = #{degree,jdbcType=VARCHAR},
            </if> 
             <if test="(atDuty != null and atDuty != '') || step != null "> 
                AT_DUTY = #{atDuty,jdbcType=VARCHAR},
             </if> 
            <if test="expertsTypeId != null and expertsTypeId != ''">
                EXPERTS_TYPE_ID = #{expertsTypeId,jdbcType=VARCHAR},
            </if>
            <if test="purchaseDepId != null and purchaseDepId != ''">
                PURCHASE_DEP_ID = #{purchaseDepId,jdbcType=VARCHAR},
            </if>
            <if test="status != null and status != '0'">
                STATUS = #{status},
            </if>
            <if test="isBlack != null and isBlack != '0'">
                IS_BLACK = #{isBlack,jdbcType=CHAR},
            </if>
            <if test="honestyScore != null and honestyScore != ''">
                HONESTY_SCORE = #{honestyScore,jdbcType=DECIMAL},
            </if>
            <if test="relName != null and relName != ''">
                REAL_NAME = #{relName,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null and remarks != ''">
                REMARKS = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="auditAt != null and createdAt != ''">
                AUDIT_AT = #{auditAt,jdbcType=TIMESTAMP},
            </if>
             <if test="isReferenceLftter != null and isReferenceLftter != ''"> 
                IS_REFERENCE_LETTER = #{isReferenceLftter,jdbcType=CHAR},
             </if> 
            <if test="professional != null and professional != ''">
                PROFESSIONAL = #{professional,jdbcType=VARCHAR},
            </if>
            <if test="timeProfessional != null and timeProfessional != ''">
                TIME_PROFESSIONAL = #{timeProfessional,jdbcType=TIMESTAMP},
            </if>
           <if test="isPublish != null">
                IS_PUBLISH = #{isPublish},
            </if>
             <if test="isAddExpert != null">
                IS_ADD_EXPERT = #{isAddExpert},
            </if>
             <if test="isTitle != null">
                IS_TITLE = #{isTitle},
            </if>
             <if test="teachTitle != null">
                TEACH_TITLE = #{teachTitle},
            </if>
             <if test="netType != null">
                NET_TYPE = #{netType},
            </if>
            <if test="isReviewEnd!=null">
            	IS_REVIEW_END=#{isReviewEnd}
            </if>
        </set>
        where
        ID = #{id,jdbcType=VARCHAR}

    </update>

    <select id="findExpertList" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        select * from T_SES_EMS_EXPERT
    </select>
    
	<!-- 查看该用户选中的产品类别 -->
    <select id="querySelect" resultMap="BaseResultMap">
        SELECT 
        <include refid="Column_List" /> 
		FROM T_SES_BMS_USER t, T_SES_EMS_EXPERT e 
		WHERE t.TYPE_ID = e.ID 
		AND t.TYPE_ID = #{typeId,jdbcType=VARCHAR}
    </select>

    
    <select id="findExpertAll" resultMap="BaseResultMap"
            parameterType="ses.model.ems.Expert">
        select
        *
        from
        T_SES_EMS_EXPERT
        where 1=1
        <if test="relName != null and relName !=''">
            AND REAL_NAME like CONCAT(CONCAT('%', #{relName}), '%')
        </if>
        <if test="ids != null">
            <foreach collection="ids" item="id" open="and ID not in ("
                     close=")" separator=",">
                #{id}
            </foreach>
        </if>
        ORDER BY CREATED_AT DESC
    </select>


    <!-- 专家抽取集合 -->

    <select id="listExtractionExpert" parameterType="ses.model.ems.ExpExtCondition"
            resultMap="BaseResultMap">
        SELECT * FROM T_SES_EMS_EXPERT t1 WHERE T1.id IN (
        SELECT
        EE."ID"
        FROM
        T_SES_EMS_EXPERT ee
        LEFT JOIN T_SES_EMS_EXPERT_CATEGORY ec
        ON ee."ID" =
        EC.EXPERT_ID
        WHERE 1=1 AND
        ee.IS_DELETE = 0
        AND (ee.STATUS = 4 OR
        ee.STATUS = 7)
        AND
        ee.IS_BLACK = 0
        AND ee.IS_SUBMIT = '1'
        AND NVL(IS_PROVISIONAL,0) = 0

        <if test="expertsFromSplit != null and expertsFromSplit != ''">
            AND
            <foreach collection="expertsFromSplit" item="fromsplit"
                     close=")" open="(" separator="OR">
                EE.EXPERTS_FROM = #{fromsplit}
            </foreach>
        </if>
        <if test="addressId != null and addressId != '' ">
            AND ee.ADDRESS = #{addressId}
        </if>
        <if
                test="address == null and  address != '' and addressSplit != null and addressSplit != '' ">
            AND
            <foreach collection="addressSplit" item="split" open="("
                     close=")" separator="OR">
                ee.ADDRESS = #{split}
            </foreach>
        </if>
        <if
                test="ageMax != null and  ageMax != '' and ageMin != null and ageMin != '' ">
            AND (
            (
            TO_CHAR (EE.BIRTHDAY, 'yyyy') &gt;= #{ageMin}
            AND TO_CHAR
            (EE.BIRTHDAY, 'yyyy') &lt;= #{ageMax}
            )
            OR (
            TO_CHAR (EE.BIRTHDAY,
            'yyyy') &lt;= #{ageMin}
            AND TO_CHAR (EE.BIRTHDAY, 'yyyy') &gt;=
            #{ageMax}
            )
            )
        </if>
        <foreach item="item" collection="conTypes">
            <if test="item.expertsTypeSplit != null and item.expertsTypeSplit != ''">
                AND (
                <foreach collection="item.expertsTypeSplit" item="typeId"
                         open="(" close=")" separator="OR">
                    "INSTR"(EE.EXPERTS_TYPE_ID,#{typeId})>0
                </foreach>
            </if>
            <if
                    test="item.expertsQualification != null and  item.expertsQualification != '' ">
                AND PROFESS_TECH_TITLES = #{item.expertsQualification}
            </if>
            <if
                    test="item.isMulticondition != null and item.isMulticondition != 0 and item.categorySplit != null">
                <if test="item.isMulticondition==2">
                    AND
                    <foreach item="ids" collection="item.categorySplit"
                             separator="AND" open="(" close=")">
                        EC.CATEGORY_ID = #{ids}
                    </foreach>
                </if>
                <if test="item.isMulticondition==1">
                    AND
                    <foreach item="ids" collection="item.categorySplit" open="("
                             close=")" separator="OR">
                        EC.CATEGORY_ID=#{ids}
                    </foreach>
                </if>
            </if>
            <if test="item.expertsTypeSplit != null and item.expertsTypeSplit != ''">
                )
            </if>
        </foreach>

        GROUP BY EE."ID"
        )
    </select>


    <!-- 查询所有专家 可条件查询 -->
    <select id="findAllExpert" parameterType="java.util.Map"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from T_SES_EMS_EXPERT
        where 1=1 and IS_SUBMIT != '0' and IS_DELETE != 1
        <if test="relName != null and relName !=''">
            AND REAL_NAME LIKE CONCAT(CONCAT('%', #{relName}), '%')
        </if>
        <if test="expertsFrom != null and expertsFrom !=''">
            AND EXPERTS_FROM = #{expertsFrom}
        </if>
        <if test="status != null and status !=''">
            AND STATUS = #{status}
        </if>
        <if test="expertsTypeId != null and expertsTypeId !=''">
            AND EXPERTS_TYPE_ID = #{expertsTypeId}
        </if>
        <if test="idNumber != null and idNumber !=''">
            AND ID_NUMBER LIKE CONCAT(CONCAT('%', #{idNumber}), '%')
        </if>
        <if test="id != null and id !=''">
            AND ID = #{id}
        </if>
        <if test="ids != null and ids !=''">
            <foreach collection="ids" item="id" open="and ID in ("
                     close=")" separator=",">
                #{ids}
            </foreach>
        </if>
        ORDER BY CREATED_AT DESC
    </select>


    <!-- 关联 -->
    <select id="getByExpertProjectId" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        SELECT ee.* FROM T_SES_EMS_PROJECT_EXTRACT pe INNER JOIN
        T_SES_EMS_EXPERT ee
        ON PE.EXPERT_ID =ee."ID" WHERE PE.STATUS_COUNT=0
        AND PE.OPERATING_TYPE=1 AND PE.IS_PROVISIONAL=0 AND PE.PROJECT_ID
        =#{projectId}
    </select>

    <select id="getByAllExpertProjectId" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        SELECT ee.* FROM T_SES_EMS_PROJECT_EXTRACT pe INNER JOIN
        T_SES_EMS_EXPERT ee
        ON PE.EXPERT_ID =ee."ID" WHERE PE.STATUS_COUNT=0
        AND
        PE.OPERATING_TYPE=1 AND PE.PROJECT_ID =#{projectId}
    </select>


    <!-- 手机号唯一性验证 -->
    <select id="validatePhone" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        SELECT ID FROM T_SES_EMS_EXPERT
        WHERE IS_DELETE = 0 AND MOBILE = #{_parameter}
    </select>
    <!-- 身份证号唯一性验证 -->
    <select id="validateIdCardNumber" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        SELECT ID FROM T_SES_EMS_EXPERT
        WHERE IS_DELETE = 0 AND IS_PROVISIONAL=0 AND ID_CARD_NUMBER = #{param1}
        <if test="param2 != null and param2 != '' ">
            AND ID != #{param2}
        </if>
    </select>
    <!-- 手机号校验：专家库+供应商库（除去临时供应商和临时专家还有本身之前存的那一条数据） -->
	<select id="countByMobile" resultType="int" parameterType="java.util.Map">
		<!-- SELECT COUNT(1) FROM T_SES_SMS_SUPPLIER SUPP,
		T_SES_EMS_EXPERT EXPE
		WHERE SUPP.MOBILE = #{mobile}
		AND EXPE.MOBILE = #{mobile}
		AND SUPP.IS_PROVISIONAL != 1 AND SUPP.IS_DELETED = 0
		AND EXPE.IS_DELETE = 0 -->
		
		SELECT (T1.COUNT_SUPP + T2.COUNT_EXPE) FROM
		(SELECT COUNT(1) AS COUNT_SUPP FROM T_SES_SMS_SUPPLIER WHERE MOBILE = #{mobile} AND IS_PROVISIONAL != 1 AND IS_DELETED = 0) T1
		,
		(SELECT COUNT(1) AS COUNT_EXPE FROM T_SES_EMS_EXPERT WHERE MOBILE = #{mobile} AND IS_PROVISIONAL != 1 AND IS_DELETE = 0 AND ID !=#{id}) T2
	</select>
    <!-- 证件号码唯一性验证 -->
    <select id="validateIdNumber" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        SELECT ID FROM T_SES_EMS_EXPERT
        WHERE IS_DELETE = 0 AND ID_NUMBER = #{param1}
        <if test="param2 != null and param2 != '' ">
            AND ID != #{param2}
        </if>
    </select>
    <!-- 注册时点击下一步,将表中的STRP_NUMBER进行同步 -->
    <update id="updateStepNumber">
        update T_SES_EMS_EXPERT
        set STEP_NUMBER = #{param2}
        where id = #{param1}
    </update>

    <!-- 专家审核列表 可条件查询 -->
    <select id="findExpertAuditList" resultMap="BaseResultMap" parameterType="ses.model.ems.Expert">
        SELECT t1.*,
        t2.NAME as sex,
        org.SHORT_NAME AS orgName
        from
        T_SES_EMS_EXPERT t1
        LEFT JOIN
        T_SES_BMS_DICTIONARY_DATA t2
        ON t1.GENDER = t2.ID
        LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON t1.PURCHASE_DEP_ID = dep.ID
    		LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
        WHERE (
        <choose>
        	<when test="sign == 1">
        		(IS_SUBMIT = '1'
	        	AND (t1.STATUS = '0' OR t1.STATUS = '1' OR t1.STATUS = '2' OR t1.STATUS = '9' OR t1.STATUS = '10' OR t1.STATUS = '15' OR t1.STATUS = '16' OR t1.STATUS = '5'))
	        	OR (t1.IS_SUBMIT = '0' AND t1.status = '3')
        	</when>
        	<when test="sign == 2">
        		<if test="isOrg !=null and isOrg == 1">
	            (t1.IS_SUBMIT = '1'
	            AND (t1.STATUS = '6' OR t1.STATUS = '4' OR t1.STATUS = '5' OR t1.STATUS = '-2' OR t1.STATUS = '-3' OR t1.STATUS = '10'))
	          </if>
	          <if test="isOrg !=null and isOrg == 0">
	            t1.PURCHASE_DEP_ID = #{purchaseDepId}
	          </if>
        	</when>
        	<when test="sign == 3">
        		(t1.IS_SUBMIT = '1'
            AND (t1.STATUS = '6' OR t1.STATUS = '7' OR t1.STATUS = '8'))
        	</when>
        	<otherwise>
        		1 = 1
        	</otherwise>
        </choose>
        )
        <!-- (<if test="sign == 1">
	        (IS_SUBMIT = '1'
	        AND (STATUS = '0' OR STATUS = '1' OR STATUS = '2'))
	        OR (IS_SUBMIT = '0' AND status = '3')
   		  </if>
        <if test="sign == 2">
        	<if test="isOrg !=null and isOrg == 1">
            (IS_SUBMIT = '1'
            AND (STATUS = '1' OR STATUS = '4' OR STATUS = '5'))
          </if>
          <if test="isOrg !=null and isOrg == 0">
            PURCHASE_DEP_ID = #{purchaseDepId}
          </if>
        </if>
        <if test="sign == 3">
            (IS_SUBMIT = '1'
            AND (STATUS = '6' OR STATUS = '7' OR STATUS = '8'))
        </if>
        ) -->
        AND t1.IS_PROVISIONAL = '0'
        AND t1.IS_DELETE = '0'
        <if test="sign == 1">
        	<if test="purchaseDepId !=null">
		          AND t1.PURCHASE_DEP_ID = #{purchaseDepId}
		       </if>
        </if>
        <if test="sign == 3">
        	<if test="extractOrgid !=null">
            AND t1.EXTRACT_ORGID = #{extractOrgid}
        	</if>
        </if>
        <if test="relName != null and relName !=''">
            AND t1.REAL_NAME LIKE CONCAT(CONCAT('%', #{relName}), '%')
        </if>
        <if test="orgName != null and orgName !=''">
            AND org.SHORT_NAME LIKE CONCAT(CONCAT('%', #{orgName}), '%')
        </if>
        <if test="expertsFrom != null and expertsFrom !=''">
        	 AND t1.EXPERTS_FROM = #{expertsFrom}
        </if>
        <if test="expertsTypeId != null and expertsTypeId !=''">
        	 AND t1.EXPERTS_TYPE_ID LIKE CONCAT(CONCAT('%', #{expertsTypeId}), '%')
        </if>
        <if test="status != null and status !=''">
        	<if test="status == 'trialEnd'">
        	 AND t1.STATUS in ('15','16')
        	</if>
        	<if test="status != 'trialEnd'">
            AND t1.STATUS = #{status}
            </if>
        </if>
        <if test="updatedAt !=null and updatedAt != ''">
        	AND TO_CHAR(t1.UPDATED_AT,'YY-MM-DD') = TO_CHAR(#{updatedAt},'YY-MM-DD')
        </if> 
        <if test="auditTemporary != null">
            AND t1.AUDIT_TEMPORARY = #{auditTemporary}
        </if>
        <if test="auditAt !=null and auditAt!=''">
        	AND TO_CHAR(t1.AUDIT_AT,'YY-MM-DD') = TO_CHAR(#{auditAt},'YY-MM-DD')
        </if>
       <if test="startTime !=null and startTime!=''">
        	AND TO_CHAR(t1.AUDIT_AT,'YY-MM-DD') &gt;= TO_CHAR(#{startTime},'YY-MM-DD')
        </if>
        <if test="endTime != null and endTime != ''">
        	AND TO_CHAR(t1.AUDIT_AT,'YY-MM-DD') &lt;= TO_CHAR(#{endTime},'YY-MM-DD')
        </if>
       <if test="ids != null">
            <foreach collection="ids" item="id" open="and t1.ID in ("
                     close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="sort != null">
        	 ORDER BY t1.UPDATED_AT ASC NULLS LAST
        </if>
        <if test="sort == null">
        ORDER BY t1.SUBMIT_AT ASC NULLS LAST
        </if>
    </select>

		<!-- 插入历史记录 -->
    <insert id="insertExpertHistory" parameterType="ses.model.ems.ExpertHistory">
        insert into T_SES_EMS_EXPERT_HISTORY
        <trim prefix="(" suffix=")" suffixOverrides=",">
        	<if test="id != null">
        		ID,
        	</if>
        	<if test="gender != null">
        		GENDER,
        	</if>
        	<if test="mobile != null">
        		MOBILE,
        	</if>
        	<if test="birthday != null">
        		BIRTHDAY,
        	</if>
        	<if test="idNumber != null">
        		ID_NUMBER,
        	</if>
        	<if test="idType != null">
        		ID_TYPE,
        	</if>
        	<if test="expertsFrom != null">
        		EXPERTS_FROM,
        	</if>
        	<if test="politicsStatus != null">
        		POLITICS_STATUS,
        	</if>
        	<if test="nation != null">
        		NATION,
        	</if>
        	<if test="graduateSchool != null">
        		GRADUATE_SCHOOL,
        	</if>
        	<if test="hightEducation != null">
        		LAST_EDUCATION,
        	</if>
        	<if test="major != null">
        		MAJOR,
        	</if>
        	<if test="workUnit != null">
        		WORK_UNIT,
        	</if>
        	<if test="telephone != null">
        		TELEPHONE,
        	</if>
        	<if test="fax != null">
        		FAX,
        	</if>
        	<if test="makeTechDate != null">
        		MAKE_TECH_DATE,
        	</if>
        	<if test="healthState != null">
        		HEALTH_STATE,
        	</if>
        	<if test="address != null">
        		ADDRESS,
        	</if>
        	<if test="professTechTitles != null">
        		PROFESS_TECH_TITLES,
        	</if>
        	<if test="timeToWork != null">
        		TIME_TO_WORK,
        	</if>
        	<if test="timeStartWork != null">
        		TIME_START_WORK,
        	</if>
        	<if test="unitAddress != null">
        		UNIT_ADDRESS,
        	</if>
        	<if test="postCode != null">
        		POST_CODE,
        	</if>
        	<if test="degree != null">
        		DEGREE,
        	</if>
        	<if test="atDuty != null">
        		AT_DUTY,
        	</if>
        	<if test="expertsTypeId != null">
        		EXPERTS_TYPE_ID,
        	</if>
					<if test="purchaseDepId != null">
        		PURCHASE_DEP_ID,
        	</if>
        	<if test="relName != null">
        		REAL_NAME,
        	</if>
					<if test="isProvisional != null">
        		IS_PROVISIONAL,
        	</if>
        	<if test="email != null">
        		EMAIL,
        	</if>
					<if test="jobExperiences != null">
        		JOB_EXPERIENCES,
        	</if>
        	<if test="idCardNumber != null">
        		ID_CARD_NUMBER,
        	</if>
        	<if test="coverNote != null">
        		COVER_NOTE,
        	</if>
        	<if test="productCategories != null">
        		PRODUCT_CATEGORIES,
        	</if>
        	<if test="academicAchievement != null">
        		ACADEMIC_ACHIEVEMENT,
        	</if>
        	<if test="reviewSituation != null">
        		REVIEW_SITUATION,
        	</if>
        	<if test="avoidanceSituation != null">
        		AVOIDANCE_SITUATION,
        	</if>
        	<if test="isReferenceLftter != null">
        		IS_REFERENCE_LETTER,
        	</if>
        	<if test="professional != null">
        		PROFESSIONAL,
        	</if>
        	<if test="timeProfessional != null">
        		TIME_PROFESSIONAL,
        	</if>
        	<if test="expertId != null">
        		EXPERT_ID,
        	</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
         	<if test="id != null">
		        #{id},
		      </if>
		      <if test="gender != null">
		         #{gender},
		      </if>
		      <if test="mobile != null">
		        #{mobile},
		      </if>
		      <if test="birthday != null">
		      	#{birthday},
		      </if>
		      <if test="idNumber != null">
		      	#{idNumber},
		      </if>
		      <if test="idType != null">
		      	#{idType},
		      </if>
		      <if test="expertsFrom != null">
		      	#{expertsFrom},
		      </if>
		      <if test="politicsStatus != null">
		      	#{politicsStatus},
		      </if>
		      <if test="nation != null">
		      	#{nation},
		      </if>
		      <if test="graduateSchool != null">
		      	#{graduateSchool},
		      </if>
		      <if test="hightEducation != null">
		      	#{hightEducation},
		      </if>
		      <if test="major != null">
		      	#{major},
		      </if>
		      <if test="workUnit != null">
		      	#{workUnit},
		      </if>
		      <if test="telephone != null">
		      	 #{telephone},
		      </if>
		      <if test="fax != null">
		      	 #{fax},
		      </if>
		      <if test="makeTechDate != null">
		      	 #{makeTechDate},
		      </if>
		      <if test="healthState != null">
		      	 #{healthState},
		      </if>
		      <if test="address != null">
		      	  #{address},
		      </if>
		      <if test="professTechTitles != null">
		      	  #{professTechTitles},
		      </if>
 					<if test="timeToWork != null">
		      	 #{timeToWork},
		      </if>
		      <if test="timeStartWork != null">
		      	 #{timeStartWork},
		      </if>
		      <if test="unitAddress != null">
		      	 #{unitAddress},
		      </if>
		      <if test="postCode != null">
		      	 #{postCode},
		      </if>
		      <if test="degree != null">
		      	#{degree},
		      </if>
					<if test="atDuty != null">
		      	#{atDuty},
		      </if>
		      <if test="expertsTypeId != null">
		      	#{expertsTypeId},
		      </if>
		      <if test="purchaseDepId != null">
		      	#{purchaseDepId},
		      </if>
		      <if test="relName != null">
		      	#{relName},
		      </if>
		      <if test="isProvisional != null">
		      	#{isProvisional},
		      </if>
		      <if test="email != null">
		      	#{email},
		      </if>
		      <if test="jobExperiences != null">
		      	 #{jobExperiences},
		      </if>
		      <if test="idCardNumber != null">
		      	 #{idCardNumber},
		      </if>
		      <if test="coverNote != null">
		      	 #{coverNote},
		      </if>
		      <if test="productCategories != null">
		      	 #{productCategories},
		      </if>
		      <if test="academicAchievement != null">
		      	 #{academicAchievement},
		      </if>
		      <if test="reviewSituation != null">
		      	 #{reviewSituation},
		      </if>
		      <if test="avoidanceSituation != null">
		      	  #{avoidanceSituation},
		      </if>
		      <if test="isReferenceLftter != null">
		      	  #{isReferenceLftter},
		      </if>
		      <if test="professional != null">
		      	  #{professional},
		      </if>
		      <if test="timeProfessional != null">
		      	  #{timeProfessional},
		      </if>
		      <if test="expertId != null">
		      	  #{expertId}
		      </if>
        </trim>
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
					select sys_guid() from dual
				</selectKey>
    </insert>

    <delete id="deleteExpertHistory">
        delete from T_SES_EMS_EXPERT_HISTORY
        where ID =
        #{_parameter}
    </delete>

    <select id="selectOldExpertById" resultType="ses.model.ems.ExpertHistory">
		select
		ID id, GENDER
		gender,
		MOBILE mobile, BIRTHDAY birthday,
		ID_NUMBER
		idNumber, ID_TYPE
		idType, EXPERTS_FROM expertsFrom,
		POLITICS_STATUS
		politicsStatus,
		NATION
		nation, GRADUATE_SCHOOL graduateSchool,
		LAST_EDUCATION hightEducation,
		MAJOR major, WORK_UNIT workUnit,
		TELEPHONE telephone,
		FAX fax,
		MAKE_TECH_DATE makeTechDate,
		HEALTH_STATE
		healthState, ADDRESS address,
		PROFESS_TECH_TITLES professTechTitles,
		TIME_TO_WORK timeToWork,
		TIME_START_WORK timeStartWork, UNIT_ADDRESS
		unitAddress,
		POST_CODE
		postCode, DEGREE degree,
		AT_DUTY atDuty,
		EXPERTS_TYPE_ID expertsTypeId,
		PURCHASE_DEP_ID purchaseDepId,
		REAL_NAME relName, IS_PROVISIONAL
		isProvisional, EMAIL email,
		JOB_EXPERIENCES jobExperiences,
		ID_CARD_NUMBER idCardNumber,
		COVER_NOTE coverNote, PRODUCT_CATEGORIES
		productCategories,
		ACADEMIC_ACHIEVEMENT academicAchievement,
		REVIEW_SITUATION
		reviewSituation,
		AVOIDANCE_SITUATION avoidanceSituation,
    IS_REFERENCE_LETTER isReferenceLftter,
    PROFESSIONAL professional,
    TIME_PROFESSIONAL timeProfessional,
    RANGE range,
    EXPERT_ID expertId
		from T_SES_EMS_EXPERT_HISTORY
		where EXPERT_ID = #{expertId}
		and IS_DELETED = 0
	</select>

    <!-- 根据创建时间获取已提交的专家 -->
    <select id="getCommitExpertByDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM T_SES_EMS_EXPERT
        WHERE 
        SUBMIT_AT &gt;=
		to_date(#{startDate,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
		AND
		SUBMIT_AT &lt;= to_date(#{endDate,jdbcType=TIMESTAMP},'yyyy-MM-dd
		hh24:mi:ss')
        
      <!--   TO_CHAR(SUBMIT_AT,'yyyy-mm-dd') =
        #{_parameter} -->
        AND IS_SUBMIT = '1'
        AND STATUS in ('0','9')
    </select>

    <!-- 根据修改时间获取修改了的专家信息 -->
    <select id="getModifyExpertByDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Column_List" />
        FROM T_SES_EMS_EXPERT e
        INNER JOIN T_SES_EMS_EXPERT_HISTORY eh
        ON e.ID =
        eh.ID
        WHERE TO_CHAR(e.SUBMIT_AT,'yyyy-mm-dd') = #{_parameter}
        AND
        e.IS_SUBMIT = '1'
        AND e.STATUS = '0'
    </select>
    <!--插入专家数据返回id-->
    <insert id="insertBackId" parameterType="ses.model.ems.Expert">
        <selectKey keyProperty="id" resultType="java.lang.String" order="BEFORE">
            select sys_guid() as id from dual
        </selectKey>
        insert into T_SES_EMS_EXPERT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="jobExperiences != null">
                JOB_EXPERIENCES,
            </if>
            <if test="isSubmit != null">
                IS_SUBMIT,
            </if>
            <if test="submitAt != null">
                SUBMIT_AT,
            </if>
            <if test="productCategories != null">
                PRODUCT_CATEGORIES,
            </if>
            <if test="academicAchievement != null">
                ACADEMIC_ACHIEVEMENT,
            </if>
            <if test="reviewSituation != null">
                REVIEW_SITUATION,
            </if>
            <if test="avoidanceSituation != null">
                AVOIDANCE_SITUATION,
            </if>
            <if test="coverNote != null">
                COVER_NOTE,
            </if>
            <if test="idCardNumber != null">
                ID_CARD_NUMBER,
            </if>
            <if test="email != null">
                EMAIL,
            </if>

            <if test="isDo != null">
                IS_DO,
            </if>
            <if test="isDelete != null">
                IS_DELETE,
            </if>
            <if test="isPass != null">
                IS_PASS,
            </if>
            <if test="isProvisional != null">
                IS_PROVISIONAL,
            </if>
            <if test="createdAt != null">
                CREATED_AT,
            </if>
            <if test="gender != null">
                GENDER,
            </if>
            <if test="updatedAt != null">
                UPDATED_AT,
            </if>
            <if test="mobile != null">
                MOBILE,
            </if>
            <if test="birthday != null">
                BIRTHDAY,
            </if>
            <if test="idNumber != null">
                ID_NUMBER,
            </if>
            <if test="idType != null">
                ID_TYPE,
            </if>
            <if test="expertsFrom != null">
                EXPERTS_FROM,
            </if>
            <if test="politicsStatus != null">
                POLITICS_STATUS,
            </if>
            <if test="nation != null">
                NATION,
            </if>
            <if test="graduateSchool != null">
                GRADUATE_SCHOOL,
            </if>
            <if test="hightEducation != null">
                LAST_EDUCATION,
            </if>
            <if test="major != null">
                MAJOR,
            </if>
            <if test="workUnit != null">
                WORK_UNIT,
            </if>
            <if test="telephone != null">
                TELEPHONE,
            </if>
            <if test="fax != null">
                FAX,
            </if>
            <if test="makeTechDate != null">
                MAKE_TECH_DATE,
            </if>
            <if test="healthState != null">
                HEALTH_STATE,
            </if>
            <if test="address != null">
                ADDRESS,
            </if>
            <if test="professTechTitles != null">
                PROFESS_TECH_TITLES,
            </if>
            <if test="timeToWork != null">
                TIME_TO_WORK,
            </if>
            <if test="timeStartWork != null">
                TIME_START_WORK,
            </if>
            <if test="unitAddress != null">
                UNIT_ADDRESS,
            </if>
            <if test="postCode != null">
                POST_CODE,
            </if>
            <if test="degree != null">
                DEGREE,
            </if>
            <if test="atDuty != null">
                AT_DUTY,
            </if>
            <if test="expertsTypeId != null">
                EXPERTS_TYPE_ID,
            </if>
            <if test="purchaseDepId != null">
                PURCHASE_DEP_ID,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="isBlack != null">
                IS_BLACK,
            </if>
            <if test="honestyScore != null">
                HONESTY_SCORE,
            </if>
            <if test="relName != null">
                REAL_NAME,
            </if>
            <if test="remarks != null">
                REMARKS,
            </if>
            <if test="stepNumber != null">
                STEP_NUMBER,
            </if>
            <if test="auditAt != null">
                AUDIT_AT,
            </if>
            <if test="isReferenceLftter != null">
                IS_REFERENCE_LETTER,
            </if>
            <if test="professional != null">
                PROFESSIONAL,
            </if>
            <if test="timeProfessional != null">
                TIME_PROFESSIONAL,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="isSubmit != null">
                #{isSubmit,jdbcType=VARCHAR},
            </if>
            <if test="jobExperiences != null">
                #{jobExperiences,jdbcType=VARCHAR},
            </if>
            <if test="submitAt != null">
                #{submitAt,jdbcType=TIMESTAMP},
            </if>
            <if test="productCategories != null">
                #{productCategories,jdbcType=VARCHAR},
            </if>
            <if test="academicAchievement != null">
                #{academicAchievement,jdbcType=VARCHAR},
            </if>
            <if test="reviewSituation != null">
                #{reviewSituation,jdbcType=VARCHAR},
            </if>
            <if test="avoidanceSituation != null">
                #{avoidanceSituation,jdbcType=VARCHAR},
            </if>
            <if test="idCardNumber != null">
                #{idCardNumber,jdbcType=VARCHAR},
            </if>
            <if test="jobExperiences != null">
                #{jobExperiences,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="isDo != null">
                #{isDo,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=DECIMAL},
            </if>
            <if test="isPass != null">
                #{isPass,jdbcType=DECIMAL},
            </if>
            <if test="isProvisional != null">
                #{isProvisional,jdbcType=DECIMAL},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="idNumber != null">
                #{idNumber,jdbcType=VARCHAR},
            </if>
            <if test="idType != null">
                #{idType,jdbcType=VARCHAR},
            </if>
            <if test="expertsFrom != null">
                #{expertsFrom,jdbcType=VARCHAR},
            </if>
            <if test="politicsStatus != null">
                #{politicsStatus,jdbcType=VARCHAR},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="graduateSchool != null">
                #{graduateSchool,jdbcType=VARCHAR},
            </if>
            <if test="hightEducation != null">
                #{hightEducation,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                #{major,jdbcType=VARCHAR},
            </if>
            <if test="workUnit != null">
                #{workUnit,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="fax != null">
                #{fax,jdbcType=VARCHAR},
            </if>
            <if test="makeTechDate != null">
                #{makeTechDate,jdbcType=TIMESTAMP},
            </if>
            <if test="healthState != null">
                #{healthState,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="professTechTitles != null">
                #{professTechTitles,jdbcType=VARCHAR},
            </if>
            <if test="timeToWork != null">
                #{timeToWork,jdbcType=TIMESTAMP},
            </if>
            <if test="timeStartWork != null">
                #{timeStartWork,jdbcType=TIMESTAMP},
            </if>
            <if test="unitAddress != null">
                #{unitAddress,jdbcType=VARCHAR},
            </if>
            <if test="postCode != null">
                #{postCode,jdbcType=VARCHAR},
            </if>
            <if test="degree != null">
                #{degree,jdbcType=VARCHAR},
            </if>
            <if test="atDuty != null">
                #{atDuty,jdbcType=VARCHAR},
            </if>
            <if test="expertsTypeId != null">
                #{expertsTypeId,jdbcType=VARCHAR},
            </if>
            <if test="purchaseDepId != null">
                #{purchaseDepId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="isBlack != null">
                #{isBlack,jdbcType=CHAR},
            </if>
            <if test="honestyScore != null">
                #{honestyScore,jdbcType=DECIMAL},
            </if>
            <if test="relName != null">
                #{relName,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="stepNumber != null">
                #{stepNumber,jdbcType=VARCHAR},
            </if>
            <if test="auditAt != null">
                #{auditAt,jdbcType=TIMESTAMP},
            </if>
            <if test="isReferenceLftter != null">
                #{isReferenceLftter,jdbcType=CHAR},
            </if>
            <if test="professional != null">
                #{PROFESSIONAL,jdbcType=VARCHAR},
            </if>
            <if test="timeProfessional != null">
                #{TIME_PROFESSIONAL,jdbcType=TIMESTAMP},
            </if>

        </trim>
    </insert>
    <!--根据条件查询专家列表-->
    <select id="findExpertByCondition" resultMap="BaseResultMap" >
        SELECT *
        FROM T_SES_EMS_EXPERT
        where 1=1
        <if test="list != null">
            and ID not in
            <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="expert.isProvisional != null">
            and IS_PROVISIONAL = #{expert.isProvisional,jdbcType=DECIMAL}
        </if>
        <if test="expert.status != null">
            and STATUS = #{expert.status}
        </if>
        <if test="expert.isDelete != null">
            and IS_DELETE = #{expert.isDelete}
        </if>
        <if test="expert.relName != null">
            and REAL_NAME LIKE CONCAT(CONCAT('%', #{expert.relName,jdbcType=VARCHAR}), '%')
        </if>
        <if test="expert.mobile != null">
            and MOBILE LIKE CONCAT(CONCAT('%', #{expert.mobile,jdbcType=VARCHAR}), '%')
        </if>
        ORDER BY CREATED_AT DESC
    </select>
    <!-- 根据id列表查询专家信息 -->
    <select id="findExpertByInList" resultMap="BaseResultMap"
            parameterType="ses.model.ems.Expert">
        select
        *
        from
        T_SES_EMS_EXPERT t1
        LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON t1.PURCHASE_DEP_ID = dep.ID
    	LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
        where 1=1
        <if test="ids != null">
            <foreach collection="ids" item="id" open="and t1.ID in ("
                     close=")" separator=",">
                #{id}
            </foreach>
        </if>
        ORDER BY org.POSITION ASC,t1.AUDIT_AT ASC
    </select>
    
    
    <!-- 注销列表 -->
	<select id="findLogoutList" resultMap="BaseResultMap">
		SELECT
			t1.*,
			t2.LOGIN_NAME AS loginName,
			t2.ERROR_NUM AS errorNum,
			t3.NAME AS sex,
			t4.NAME AS fromType
		FROM
			T_SES_EMS_EXPERT t1
		LEFT JOIN T_SES_BMS_USER t2 ON t2.TYPE_ID = t1.ID
		LEFT JOIN T_SES_BMS_DICTIONARY_DATA t3 ON t1.GENDER = t3.ID
		LEFT JOIN T_SES_BMS_DICTIONARY_DATA t4 ON t1.EXPERTS_FROM = t4.ID
		WHERE
			<!-- ((t1.IS_SUBMIT = '1' AND t1.STATUS = '0')
		OR (
			t1.IS_SUBMIT = '0'
			AND (t1.STATUS = '-1' OR t1.STATUS = '3')
		)) -->
			t1.IS_DELETE = 0
		<if test="mobile != null and mobile !=''">
        AND t1.MOBILE LIKE CONCAT(CONCAT('%', #{mobile}), '%')
        </if>
    <if test="relName != null and relName !=''">
        AND t1.REAL_NAME LIKE CONCAT(CONCAT('%', #{relName}), '%')
    </if>
    <if test="loginName != null and loginName !=''">
        AND t2.LOGIN_NAME LIKE CONCAT(CONCAT('%', #{loginName}), '%')
    </if>
    <if test="expertsFrom != null and expertsFrom !=''">
        AND t1.EXPERTS_FROM = #{expertsFrom}
    </if>
    <if test="status != null and status !=''">
        AND t1.STATUS = #{status}
    </if>
    <if test="idCardNumber != null and idCardNumber !=''">
        AND t1.ID_CARD_NUMBER LIKE CONCAT(CONCAT('%', #{idCardNumber}), '%')
    </if>
    ORDER BY t1.CREATED_AT DESC
	</select>
	
	
	<!-- 记录抽取的机构id -->
	<update id="updateExtractOrgidById" parameterType="ses.model.ems.Expert">
		update
			T_SES_EMS_EXPERT
		SET
			EXTRACT_ORGID =#{extractOrgid}
		WHERE
			ID = #{id}
	</update>
	
	
	 <!-- 软删除历史记录 -->
  <update id="updateIsDeleteById" parameterType="java.lang.String">
  	update
  		T_SES_EMS_EXPERT_HISTORY
  	set
  		IS_DELETED = 1
  	where 
  		EXPERT_ID = #{expertId}
  </update>
  
  <!-- 入库专家查询 -->
  <select id="selectRuKuExpert" resultMap="BaseResultMap">
    select
      T1.ID,
      T1.REAL_NAME,
      T1.ID_CARD_NUMBER,
      T1.WORK_UNIT,
      T1.GENDER,
      T1.EXPERTS_TYPE_ID,
      T1.GRADUATE_SCHOOL,
      T1.STATUS,
      T1.IS_PROVISIONAL,
      T1.EXPERTS_FROM,
      T1.MOBILE,
      T1.CREATED_AT,
      T1.IS_SUBMIT,
      T1.SUBMIT_AT,
      T1.AUDIT_AT,
      T1.AUDIT_TEMPORARY,
      T1.AT_DUTY,
      T1.STORAGE_AT,
      T1.PROFESS_TECH_TITLES,
      T2.LOGIN_NAME AS loginName,
      org.SHORT_NAME AS orgName,
      AREA.NAME AS ADDRESS,
      batch.BATCH_DETAILS_NUMBER AS batchDetailsNumber
    from
      T_SES_EMS_EXPERT t1
    LEFT JOIN
      T_SES_BMS_USER t2
    ON
      T1.ID = T2.TYPE_ID
    LEFT JOIN T_SES_BMS_AREA A ON t1.address = A.ID
		LEFT JOIN T_SES_BMS_AREA AREA ON A.PARENT_ID = AREA.ID
    LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON T1.PURCHASE_DEP_ID = dep.ID
    LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
    LEFT JOIN T_SYS_EMS_EXPERT_BATCH_DETAILS batch ON batch.EXPERT_ID = T1.ID
    <if test="expertCategoryId != null and expertCategoryId != ''">
      RIGHT JOIN (
        select DISTINCT expert_id as expertId from T_SES_EMS_EXPERT_CATEGORY where category_id in 
        (<foreach collection="expertCategoryId" item="categoryId" index="index"  open="" separator="," close="">
          #{categoryId}
        </foreach>) 
      ) t5  on t1.ID = t5.expertId
    </if>
    where (T1.STATUS = 6 or T1.STATUS = 7 or T1.STATUS = 13 or T1.STATUS = 17 or T1.STATUS = 19)
    AND T1.IS_PROVISIONAL = '0'
    AND T1.IS_DELETE = 0
    <if test="relName != null and relName !=''">
      AND T1.REAL_NAME like CONCAT(CONCAT('%', #{relName}), '%')
    </if>
    <if test="mobile != null and mobile !=''">
      AND T1.MOBILE like CONCAT(CONCAT('%', #{mobile}), '%')
    </if>
    <if test="expertsFrom != null and expertsFrom !=''">
      AND T1.EXPERTS_FROM = #{expertsFrom}
    </if>
     <if test="idCardNumber !=null and idCardNumber !=''">
      and ID_CARD_NUMBER like CONCAT(CONCAT('%', #{idCardNumber}), '%')
    </if>
    <if test="status != null and status !=''">
      <if test="status != 'reviewLook'">
        AND T1.STATUS = #{status}
        
        <!-- 只查 入库(待复查)状态 -->
        <if test="status == 6">
          AND T1.AUDIT_TEMPORARY = '0'
        </if>
      </if>
      
      <!-- 复查中 -->
      <if test="status == 'reviewLook'">
        AND T1.STATUS = '6'
        AND T1.AUDIT_TEMPORARY = '3'
      </if>
    </if>
    <if test="expertsFrom != null and expertsFrom !=''">
      AND T1.EXPERTS_FROM = #{expertsFrom}
    </if>
    <if test="expertsTypeId != null and expertsTypeId !=''">
      AND instr(T1.EXPERTS_TYPE_ID, #{expertsTypeId})>0
    </if>
    <if test="orgName !=null and orgName !=''">
      AND org.SHORT_NAME like CONCAT(CONCAT('%', #{orgName}), '%')
    </if>
    <!-- 根据采购机构id查询 -->
    <if test="orgId !=null and orgId !=''">
      AND org.ID = #{orgId}
    </if>
    <if test="address != null and address !=''">
        AND A.PARENT_ID = #{address}
    </if>
    <if test="addressName != null and addressName !=''">
      and AREA.NAME like CONCAT(CONCAT('%', #{addressName}), '%')
    </if>
    ORDER BY DECODE (T1.STATUS,'6','1'),T1.STORAGE_AT DESC NULLS LAST
  </select>

	<!-- 统计注册专家数 -->
	<select id="getRegisterExpertCountByEmp" resultType="java.lang.Long" parameterType="Map">
        SELECT COUNT(ID)
        	FROM T_SES_EMS_EXPERT E
       	WHERE E.IS_DELETE = 0
   		AND TO_CHAR(E.CREATED_AT, 'yyyy-MM-dd') = #{createdAt}
	</select>

    <!--历史数据-->
    <select id="selectOldExpertByPrimaryKey" resultType="ses.model.ems.ExpertHistory">
        select
        ID id, GENDER
        gender,
        MOBILE mobile, BIRTHDAY birthday,
        ID_NUMBER
        idNumber, ID_TYPE
        idType, EXPERTS_FROM expertsFrom,
        POLITICS_STATUS
        politicsStatus,
        NATION
        nation, GRADUATE_SCHOOL graduateSchool,
        LAST_EDUCATION hightEducation,
        MAJOR major, WORK_UNIT workUnit,
        TELEPHONE telephone,
        FAX fax,
        MAKE_TECH_DATE makeTechDate,
        HEALTH_STATE
        healthState, ADDRESS address,
        PROFESS_TECH_TITLES professTechTitles,
        TIME_TO_WORK timeToWork,
        TIME_START_WORK timeStartWork, UNIT_ADDRESS
        unitAddress,
        POST_CODE
        postCode, DEGREE degree,
        AT_DUTY atDuty,
        EXPERTS_TYPE_ID expertsTypeId,
        PURCHASE_DEP_ID purchaseDepId,
        REAL_NAME relName, IS_PROVISIONAL
        isProvisional, EMAIL email,
        JOB_EXPERIENCES jobExperiences,
        ID_CARD_NUMBER idCardNumber,
        COVER_NOTE coverNote, PRODUCT_CATEGORIES
        productCategories,
        ACADEMIC_ACHIEVEMENT academicAchievement,
        REVIEW_SITUATION
        reviewSituation,
        AVOIDANCE_SITUATION avoidanceSituation,
        IS_REFERENCE_LETTER isReferenceLftter,
        PROFESSIONAL professional,
        TIME_PROFESSIONAL timeProfessional,
        RANGE range,
        EXPERT_ID expertId
        from T_SES_EMS_EXPERT_HISTORY
        where ID = #{id}
        and IS_DELETED = 0
    </select>
    <insert id="insertExpertHistoryById" parameterType="ses.model.ems.ExpertHistory">
        insert into
        T_SES_EMS_EXPERT_History
        (ID, GENDER,
        MOBILE, BIRTHDAY,
        ID_NUMBER,
        ID_TYPE, EXPERTS_FROM,
        POLITICS_STATUS,
        NATION, GRADUATE_SCHOOL,
        LAST_EDUCATION, MAJOR, WORK_UNIT,
        TELEPHONE,
        FAX, MAKE_TECH_DATE,
        HEALTH_STATE, ADDRESS, PROFESS_TECH_TITLES,
        TIME_TO_WORK,
        TIME_START_WORK, UNIT_ADDRESS,
        POST_CODE, DEGREE,
        AT_DUTY,
        EXPERTS_TYPE_ID, PURCHASE_DEP_ID,
        REAL_NAME, IS_PROVISIONAL, EMAIL,
        JOB_EXPERIENCES, ID_CARD_NUMBER,
        COVER_NOTE, PRODUCT_CATEGORIES,
        ACADEMIC_ACHIEVEMENT, REVIEW_SITUATION,
        AVOIDANCE_SITUATION,
        IS_REFERENCE_LETTER,
        PROFESSIONAL,
        TIME_PROFESSIONAL, EXPERT_ID
        )
        values
        (#{id,jdbcType=VARCHAR},
        #{gender,jdbcType=CHAR},
        #{mobile,jdbcType=VARCHAR},
        #{birthday,jdbcType=TIMESTAMP},
        #{idNumber,jdbcType=VARCHAR},
        #{idType,jdbcType=VARCHAR},
        #{expertsFrom,jdbcType=VARCHAR},
        #{politicsStatus,jdbcType=VARCHAR},
        #{nation,jdbcType=VARCHAR},
        #{graduateSchool,jdbcType=VARCHAR},
        #{hightEducation,jdbcType=VARCHAR},
        #{major,jdbcType=VARCHAR},
        #{workUnit,jdbcType=VARCHAR},
        #{telephone,jdbcType=VARCHAR},
        #{fax,jdbcType=VARCHAR},
        #{makeTechDate,jdbcType=TIMESTAMP},
        #{healthState,jdbcType=VARCHAR},
        #{address,jdbcType=VARCHAR},
        #{professTechTitles,jdbcType=VARCHAR},
        #{timeToWork,jdbcType=TIMESTAMP},
        #{timeStartWork,jdbcType=TIMESTAMP},
        #{unitAddress,jdbcType=VARCHAR},
        #{postCode,jdbcType=VARCHAR},
        #{degree,jdbcType=VARCHAR},
        #{atDuty,jdbcType=VARCHAR},
        #{expertsTypeId,jdbcType=VARCHAR},
        #{purchaseDepId,jdbcType=VARCHAR},
        #{relName,jdbcType=VARCHAR},
        #{isProvisional,jdbcType=DECIMAL},
        #{email,jdbcType=VARCHAR},
        #{jobExperiences,jdbcType=VARCHAR},
        #{idCardNumber,jdbcType=VARCHAR},
        #{coverNote,jdbcType=VARCHAR},
        #{productCategories,jdbcType=VARCHAR},
        #{academicAchievement,jdbcType=VARCHAR},
        #{reviewSituation,jdbcType=VARCHAR},
        #{avoidanceSituation,jdbcType=VARCHAR},
        #{isReferenceLftter,jdbcType=CHAR},
        #{professional,jdbcType=VARCHAR},
        #{timeProfessional,jdbcType=TIMESTAMP},
        #{expertId}
        )
    </insert>
    <!-- 根据审核时间获取退回修改专家 -->
    <select id="getAuditExpertByDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM T_SES_EMS_EXPERT
        WHERE  EXPERTS_FROM=#{netType} AND
        AUDIT_AT &gt;=
        to_date(#{startDate,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
        AND
        AUDIT_AT &lt;= to_date(#{endDate,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
    </select>
    
    
    	<!-- 假删除专家-->
	<update id="updateById" parameterType="ses.model.ems.Expert">
		update
			T_SES_EMS_EXPERT
		<set>
		  IS_DELETE = 1,
		  <if test="relName !=null">
		    REAL_NAME =#{relName},
		  </if>
		  <if test="idCardNumber !=null">
		    ID_CARD_NUMBER =#{idCardNumber},
		  </if>
		  <if test="mobile !=null">
        MOBILE =#{mobile},
      </if>
		  <if test="idNumber !=null">
		    ID_NUMBER =#{idNumber},
		  </if>
		</set>
		WHERE ID = #{id}
	</update>
	
	<!-- 查询入库专家数量 -->
	<select id="selectStoreExpertCount" resultType="java.lang.Long">
		SELECT COUNT(T.ID)
	    FROM T_SES_EMS_EXPERT T
	  		WHERE (T.STATUS = 4 OR T.STATUS = 5 OR T.STATUS = 6 OR T.STATUS = 7 OR
	         T.STATUS = 8)
	     	AND T.IS_PROVISIONAL = '0'
	     	AND T.IS_DELETE = 0
	</select>
	
	<!-- 查询地区下所对应的专家 -->
	<select id="selectExpertsByArea" resultMap="baseAnalyze">
		SELECT REPLACE(SUBSTR(P.NAME, 0, 3), '省', '') AS COL_NAME,
		       COUNT(T.ID) AS COL_VALUE,
		       P.AREAID AS COL_ID
		  FROM (SELECT A.ID, AREA.NAME, AREA.ID AS AREAID
		          FROM T_SES_BMS_AREA AREA
		          LEFT JOIN T_SES_BMS_AREA A
		            ON AREA.ID = A.PARENT_ID
		         WHERE AREA.PARENT_ID = '0') P
		  LEFT JOIN (SELECT T.ADDRESS, T.ID
		               FROM T_SES_EMS_EXPERT T
		              WHERE (T.STATUS = 6 or T.STATUS = 7 or
		                T.STATUS = 13 or T.STATUS = 17 or T.STATUS = 19)
		                AND T.IS_PROVISIONAL = '0'
		                AND T.IS_DELETE = 0) T
		    ON P.ID = T.ADDRESS
		 GROUP BY P.NAME, P.AREAID
	</select>
	
	<!-- 查询军地专家数量  分为：军队、地方 -->
	<select id="selectExpertsCountByArmyType" resultType="java.math.BigDecimal" parameterType="java.lang.String">
			SELECT COUNT(DISTINCT(ID))
  			FROM T_SES_EMS_EXPERT T
 				WHERE T.EXPERTS_FROM = #{expertsFrom}
 				AND (T.STATUS = 4 OR T.STATUS = 5 OR T.STATUS = 6 OR
             T.STATUS = 7 OR T.STATUS = 8)
             AND T.IS_PROVISIONAL = '0'
             AND T.IS_DELETE = 0
	</select>
	 <!-- 首页查询所有专家-->
    <select id="selectIndexExpert" resultMap="BaseResultMap">
      select
        T1.ID,
        T1.REAL_NAME,
        T1.ID_CARD_NUMBER,
        T1.GENDER,
        T1.EXPERTS_TYPE_ID,
        T1.GRADUATE_SCHOOL,
        T1.STATUS,
        T1.IS_PROVISIONAL,
        T1.EXPERTS_FROM,
        T1.MOBILE,
        T1.IS_SUBMIT,
        T2.LOGIN_NAME AS loginName,
        org.SHORT_NAME AS orgName
      from
        T_SES_EMS_EXPERT t1
        LEFT JOIN T_SES_BMS_USER t2 ON T1.ID = T2.TYPE_ID
        LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON T1.PURCHASE_DEP_ID = dep.ID
        LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
        where 1=1 and IS_DELETE = 0
        <if test="relName != null and relName !=''">
            AND T1.REAL_NAME like CONCAT(CONCAT('%', #{relName}), '%')
        </if>
        <if test="mobile != null and mobile !=''">
             AND T1.MOBILE like CONCAT(CONCAT('%', #{mobile}), '%')
        </if>
        <if test="expertsFrom != null and expertsFrom !=''">
            AND T1.EXPERTS_FROM = #{expertsFrom}
        </if>
        <if test="status == 4">
            AND IS_PROVISIONAL = '0'
        </if>
        <if test="flag != null">
            AND IS_PROVISIONAL = '0'
        </if>
        <if test="size > 0">
			AND T1.STATUS in 
			<foreach item="item" index="index" collection="statusArray" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
        <if test="expertsTypeId != null and expertsTypeId !=''">
          AND instr(T1.EXPERTS_TYPE_ID, #{expertsTypeId} )>0
        </if>
        <if test="isPublish != null and isPublish !=''">
          AND T1.IS_PUBLISH = #{isPublish}
        </if>
        <if test="idCardNumber !=null and idCardNumber !=''">
          and ID_CARD_NUMBER like CONCAT(CONCAT('%', #{idCardNumber}), '%')
        </if>
        <if test="graduateSchool !=null and graduateSchool !=''">
          and GRADUATE_SCHOOL like CONCAT(CONCAT('%', #{graduateSchool}), '%')
        </if>
        <if test="orgName !=null and orgName !=''">
          and org.SHORT_NAME like CONCAT(CONCAT('%',#{orgName}),'%')
        </if>
        ORDER BY T1.CREATED_AT DESC
    </select>

    <!-- 首页查询所有专家-->
    <select id="selectInStorageExpert" resultMap="BaseResultMapVO">
        SELECT
        T.ID,
        T.REAL_NAME,
        ENT.BATCH_DETAILS_NUMBER,
        T.STATUS
        FROM
        T_SES_EMS_EXPERT T
         LEFT JOIN (SELECT T.EXPERT_ID, T.BATCH_DETAILS_NUMBER,T.COUNT
        FROM T_SYS_EMS_EXPERT_BATCH_DETAILS T
        WHERE NOT EXISTS (SELECT 1
        FROM T_SYS_EMS_EXPERT_BATCH_DETAILS TC
        WHERE T.EXPERT_ID = TC.EXPERT_ID
        AND TC.CREATED_AT > T.CREATED_AT)) ENT
        ON T.ID = ENT.EXPERT_ID
        WHERE T.IS_DELETE = 0 AND T.IS_PROVISIONAL = 0
        <if test="relName != null and relName != ''">
            AND INSTR(T.REAL_NAME, #{relName}) > 0
        </if>
        <if test="size > 0">
            AND T.STATUS IN
            <foreach item="item" index="index" collection="statusArray" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="batchDetailsNumber != null and batchDetailsNumber != ''">
            AND INSTR(ENT.BATCH_DETAILS_NUMBER, #{batchDetailsNumber}) > 0
        </if>
        <!--ORDER BY T.AUDIT_AT DESC-->
        ORDER BY ENT.BATCH_DETAILS_NUMBER
    </select>
    
    <!-- 页面异步验证唯一 -->
     <select id="yzCardNumber" resultMap="BaseResultMap">
        SELECT ID FROM T_SES_EMS_EXPERT
        WHERE IS_DELETE = 0 AND IS_PROVISIONAL = 1
        <if test="idCardNumber != null and idCardNumber != '' ">
            AND ID_CARD_NUMBER = #{idCardNumber}
        </if>
        <if test="mobile != null and mobile !=''">
            AND MOBILE = #{mobile}
        </if>
        <if test="id != null and id !=''">
            AND ID &lt;&gt; #{id}
        </if>
    </select>
    
    <update id="updateExpert">
    	update
  		T_SES_EMS_EXPERT
  	set
  		status=#{status},is_submit=#{isSubmit},audit_at=#{auditDate}
  	where 
  		ID = #{id}
    
    </update>
    
  <!-- 查询公示的专家 -->
	<select id="selectExpByPublicty" resultMap="expertOfPublicityMap">
		  SELECT T.ID, T.AUDIT_AT
       FROM T_SES_EMS_EXPERT T
       WHERE T.STATUS = '-3'
       AND T.IS_PROVISIONAL = '0'
       AND T.IS_DELETE = '0'
       ORDER BY T.AUDIT_AT DESC NULLS LAST
	</select>
	
	<!-- 查询公示专家列表 -->
	<select id="selectExpByPublictyList" resultMap="expertOfPublicityMapList" parameterType="ses.model.ems.ExpertPublicity">
        SELECT T.ID,
            T.EXPERTS_TYPE_ID,
            T.REAL_NAME,
            D.NAME            AS GENDER,
            T.AUDIT_AT,
            ORG.SHORT_NAME    AS ORGNAME,
            ENT.BATCH_DETAILS_NUMBER
            <!--TO_CHAR(T.AUDIT_AT,'yyyy-MM-dd') AS DATASTRING-->
        FROM T_SES_EMS_EXPERT T
        LEFT JOIN (SELECT T.EXPERT_ID, T.BATCH_DETAILS_NUMBER,T.COUNT
        FROM T_SYS_EMS_EXPERT_BATCH_DETAILS T
        WHERE NOT EXISTS (SELECT 1
        FROM T_SYS_EMS_EXPERT_BATCH_DETAILS TC
        WHERE T.EXPERT_ID = TC.EXPERT_ID
        AND TC.CREATED_AT > T.CREATED_AT)) ENT
        ON T.ID = ENT.EXPERT_ID
        LEFT JOIN T_SES_BMS_DICTIONARY_DATA D
        ON T.GENDER = D.ID
        LEFT JOIN T_SES_OMS_PURCHASE_DEP DEP
        ON T.PURCHASE_DEP_ID = DEP.ID
        LEFT JOIN T_SES_OMS_ORG ORG
        ON ORG.ID = DEP.ORG_ID
        WHERE T.STATUS = '-3'
        AND T.IS_PROVISIONAL = '0'
        AND T.IS_DELETE = '0'
           <!--专家名称-->
		   <if test="relName != null and relName != ''">
		     AND INSTR(T.REAL_NAME,#{relName}) >0
		   </if>
           <!--专家类型-->
           <if test="expertsTypeId != null and expertsTypeId !=''">
             AND INSTR(T.EXPERTS_TYPE_ID, #{expertsTypeId})>0
           </if>
           <!--采购机构ID-->
           <if test="orgId != null and orgId !=''">
             AND DEP.ID = #{orgId}
           </if>
		 <!--ORDER BY DATASTRING DESC, ENT.BATCH_DETAILS_NUMBER -->
        ORDER BY ENT.BATCH_DETAILS_NUMBER
	</select>

    <!-- 查询公示专家导出外网 -->
    <select id="selectExpByPublictyOfExport" resultMap="BaseResultMap" parameterType="Map">
        SELECT
        T.ID, T.EXPERTS_TYPE_ID, T.PURCHASE_DEP_ID, T.REAL_NAME, T.GENDER, T.EXPERTS_FROM,
        T.STATUS, T.IS_PROVISIONAL, T.AUDIT_AT
        FROM T_SES_EMS_EXPERT T
        WHERE T.STATUS = #{status}
        AND T.AUDIT_AT &gt;=
        to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
        AND
        T.AUDIT_AT &lt;= to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
    </select>
    
        <select id="findExpertByBlacklist" resultMap="BaseResultMap" parameterType="ses.model.ems.Expert">
        SELECT
        *
        FROM
        T_SES_EMS_EXPERT
        WHERE STATUS IN (-3,6,7,13)
        <if test="relName != null and relName !=''">
            AND REAL_NAME like CONCAT(CONCAT('%', #{relName}), '%')
        </if>
        <if test="ids != null">
            <foreach collection="ids" item="id" open="and ID not in (" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        ORDER BY CREATED_AT DESC
    </select>
<!-- 专家复审待分配列表 可条件查询 -->
    <select id="findExpertAgainAuditList" resultMap="BaseResultMap" parameterType="ses.model.ems.Expert">
        SELECT 
		t1.ID,
        t1.REAL_NAME,
        t1.EXPERTS_FROM,
        t1.EXPERTS_TYPE_ID,
        t1.AUDIT_AT,
        t1.WORK_UNIT,
        t1.PROFESS_TECH_TITLES,
        t1.REVIEW_STATUS as reviewStatus,
        t2.NAME as sex,
        org.SHORT_NAME AS orgName
        from
        T_SES_EMS_EXPERT t1
        LEFT JOIN
        T_SES_BMS_DICTIONARY_DATA t2
        ON t1.GENDER = t2.ID
        LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON t1.PURCHASE_DEP_ID = dep.ID
    		LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
        WHERE (
        <choose>
        	<when test="sign == 1">
        		(IS_SUBMIT = '1'
	        	AND (t1.STATUS = '0' OR t1.STATUS = '1' OR t1.STATUS = '2' OR t1.STATUS = '9' OR t1.STATUS = '10' OR t1.STATUS = '15' OR t1.STATUS = '16' OR t1.STATUS = '5'))
	        	OR (t1.IS_SUBMIT = '0' AND t1.status = '3')
        	</when>
        	<when test="sign == 2">
        		<if test="isOrg !=null and isOrg == 1">
	            (t1.IS_SUBMIT = '1'
	            AND (t1.STATUS = '6' OR t1.STATUS = '4' OR t1.STATUS = '5' OR t1.STATUS = '-2' OR t1.STATUS = '-3' OR t1.STATUS = '10'))
	          </if>
	          <if test="isOrg !=null and isOrg == 0">
	            t1.PURCHASE_DEP_ID = #{purchaseDepId}
	          </if>
        	</when>
        	<when test="sign == 3">
        		(t1.IS_SUBMIT = '1'
            AND (t1.STATUS = '6' OR t1.STATUS = '7' OR t1.STATUS = '8'))
        	</when>
        	<otherwise>
        		1 = 1
        	</otherwise>
        </choose>
        ) 
        <if test="notIn != null">
        AND t1.ID NOT IN (select BATCH_EXPERT_ID from T_SES_EMS_BATCH_TEMPORARY)
        </if>
        AND t1.IS_PROVISIONAL = '0'
        AND t1.IS_DELETE = '0'
        <if test="sign == 1">
        	<if test="purchaseDepId !=null">
		          AND t1.PURCHASE_DEP_ID = #{purchaseDepId}
		       </if>
        </if>
        <if test="sign == 3">
        	<if test="extractOrgid !=null">
            AND t1.EXTRACT_ORGID = #{extractOrgid}
        	</if>
        </if>
        <if test="relName != null and relName !=''">
            AND t1.REAL_NAME LIKE CONCAT(CONCAT('%', #{relName}), '%')
        </if>
        <if test="orgName != null and orgName !=''">
            AND org.SHORT_NAME LIKE CONCAT(CONCAT('%', #{orgName}), '%')
        </if>
        <if test="expertsFrom != null and expertsFrom !=''">
        	 AND t1.EXPERTS_FROM = #{expertsFrom}
        </if>
        <!-- <if test="expertsTypeId != null and expertsTypeId !=''">
        	 AND t1.EXPERTS_TYPE_ID LIKE CONCAT(CONCAT('%', #{expertsTypeId}), '%')
        </if> -->
        <if test="expertTypeId != null and expertTypeId != ''">
	        <foreach item="typeId" index="index" collection="expertTypeId" open="and(" separator="or" close=")">
	          t1.EXPERTS_TYPE_ID LIKE CONCAT(CONCAT('%', #{typeId}), '%')
	        </foreach>
	      </if>
        <if test="status != null and status !=''">
        	<if test="status == 'trialEnd'">
        	 AND t1.STATUS in ('15','16')
        	</if>
        	<if test="status != 'trialEnd'">
            AND t1.STATUS = #{status}
            </if>
        </if>
        <if test="updatedAt !=null and updatedAt != ''">
        	AND TO_CHAR(t1.UPDATED_AT,'YY-MM-DD') = TO_CHAR(#{updatedAt},'YY-MM-DD')
        </if> 
        <if test="auditTemporary != null">
            AND t1.AUDIT_TEMPORARY = #{auditTemporary}
        </if>
        <if test="auditAt !=null and auditAt!=''">
        	AND TO_CHAR(t1.AUDIT_AT,'YY-MM-DD') = TO_CHAR(#{auditAt},'YY-MM-DD')
        </if>
       <if test="startTime !=null and startTime!=''">
        	AND TO_CHAR(t1.AUDIT_AT,'YY-MM-DD') &gt;= TO_CHAR(#{startTime},'YY-MM-DD')
        </if>
        <if test="endTime != null and endTime != ''">
        	AND TO_CHAR(t1.AUDIT_AT,'YY-MM-DD') &lt;= TO_CHAR(#{endTime},'YY-MM-DD')
        </if>
       <if test="ids != null">
            <foreach collection="ids" item="id" open="and t1.ID in ("
                     close=")" separator=",">
                #{id}
            </foreach>
        </if>
		ORDER BY org.POSITION ASC,t1.AUDIT_AT ASC
    </select>

	<!-- 专家抽取根据条件查询专家 -->
  <select id="findExpertByExtract" parameterType="Map" resultMap="BaseResultMap">
    SELECT 
      <include refid="Base_Column_List" />
        FROM 
          T_SES_EMS_EXPERT
        WHERE 
          IS_DELETE = 0 AND STATUS in (6,7) AND IS_PROVISIONAL &lt;&gt; 1
        <!-- 查询品目包含的专家 -->
        <if test="size > 0">
          AND ID IN 
            <foreach item="item" index="index" collection="expertIds" open="(" separator="," close=")">  
              #{item}  
            </foreach>
        </if>
        <!-- 工程特有 -->
        <!-- 工程执业资格 -->
        <if test="qualificationListSize > 0">
          AND ID IN 
            <foreach item="item" index="index" collection="qualificationList" open="(" separator="," close=")">  
              #{item}  
            </foreach>
        </if>
        <!-- 工程专业信息 -->
        <if test="gcListSize > 0">
          AND ID IN 
            <foreach item="item" index="index" collection="gcList" open="(" separator="," close=")">  
              #{item}  
            </foreach>
        </if>
        <!-- 去掉已经抽取过的专家 -->
        <if test="notSize != null and notSize > 0">
           AND ID NOT IN 
             <foreach item="item" index="index" collection="notExpertIds" open="(" separator="," close=")">  
               #{item}  
             </foreach>
        </if>
        <!-- 判断专家类型 -->
        <if test="expertsFrom != null and expertsFrom !=''">
          AND EXPERTS_FROM = #{expertsFrom}
        </if>
        <!-- 区域要求 -->
        <if test="areaSize != null and areaSize > 0" >
          AND ADDRESS IN 
            <foreach item="item" index="index" collection="areaNames" open="(" separator="," close=")">  
              #{item}  
            </foreach>
        </if>
        <!-- 专家类别 -->
        <if test="expertsTypeId != null and expertsTypeId !=''">
          AND instr(EXPERTS_TYPE_ID, #{expertsTypeId} ) > 0
        </if>
        <!-- 技术职称 -->
        <if test="technical != null and technical !=''">
          AND PROFESS_TECH_TITLES = #{technical}
        </if>
        ORDER BY dbms_random.random
  </select>
  
    <!-- 军队专家导出 -->
    <resultMap id="militaryExpertMap" type="ses.model.ems.Expert">
	  <id column="ID" jdbcType="VARCHAR" property="id" />
	  <result column="REAL_NAME" jdbcType="VARCHAR" property="relName" />
	  <result column="EXPERTS_TYPE_ID" jdbcType="VARCHAR" property="expertsTypeId" />
	  <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
	  <result column="EXPERTS_FROM" jdbcType="VARCHAR" property="expertsFrom" />
	  <result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
	  <result column="PROFESS_TECH_TITLES" jdbcType="VARCHAR" property="professTechTitles" />
	  <result column="STATUS" property="status" />
	</resultMap>
	<!-- 导出军队专家查询 -->
  <select id="findMilitaryExpert" resultMap="militaryExpertMap">
    SELECT ID,REAL_NAME,EXPERTS_TYPE_ID,ADDRESS,EXPERTS_FROM,MOBILE,PROFESS_TECH_TITLES,STATUS
    FROM T_SES_EMS_EXPERT WHERE IS_DELETE = 0 AND STATUS in (6,7) AND IS_PROVISIONAL &lt;&gt; 1
    <if test="expertsFrom != null and expertsFrom !=''">
        AND EXPERTS_FROM = #{expertsFrom}
    </if>
    AND to_char(AUDIT_AT,'yyyy-MM-dd hh24:mi:ss')  &gt;= #{start,jdbcType=VARCHAR}
    AND to_char(AUDIT_AT,'yyyy-MM-dd hh24:mi:ss') &lt;= #{end,jdbcType=VARCHAR} 
  </select>
  <update id="updateReviewStatus" parameterType="java.lang.String">
  	UPDATE T_SES_EMS_EXPERT SET REVIEW_STATUS='${reciewStatus}' WHERE ID='${id}'
  </update>
</mapper>