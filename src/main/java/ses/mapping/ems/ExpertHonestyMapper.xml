<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.ems.ExpertHonestyMapper">
  <resultMap id="BaseResultMap" type="ses.model.ems.ExpertHonesty">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="EXPERT_ID" jdbcType="DECIMAL" property="expertId" />
    <result column="EXPERT_NAME" jdbcType="VARCHAR" property="expertName" />
    <result column="BAD_BEHAVIOR" jdbcType="VARCHAR" property="badBehavior" />
    <result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="IN_STORAGE_AT" jdbcType="TIMESTAMP" property="inStorageAt" />
    <result column="EXPERT_NATURE" jdbcType="VARCHAR" property="expertNature" />
    <result column="EXPERT_CALL" jdbcType="VARCHAR" property="expertCall" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, EXPERT_ID, EXPERT_NAME, BAD_BEHAVIOR, CREATED_AT, UPDATED_AT, IN_STORAGE_AT, 
    EXPERT_NATURE, EXPERT_CALL
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_SES_EMS_EXPERT_HONESTY
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_SES_EMS_EXPERT_HONESTY
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="ses.model.ems.ExpertHonesty">
    insert into T_SES_EMS_EXPERT_HONESTY (ID, EXPERT_ID, EXPERT_NAME, 
      BAD_BEHAVIOR, CREATED_AT, UPDATED_AT, 
      IN_STORAGE_AT, EXPERT_NATURE, EXPERT_CALL
      )
    values (#{id,jdbcType=VARCHAR}, #{expertId,jdbcType=DECIMAL}, #{expertName,jdbcType=VARCHAR}, 
      #{badBehavior,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{inStorageAt,jdbcType=TIMESTAMP}, #{expertNature,jdbcType=VARCHAR}, #{expertCall,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="ses.model.ems.ExpertHonesty">
    insert into T_SES_EMS_EXPERT_HONESTY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="expertId != null">
        EXPERT_ID,
      </if>
      <if test="expertName != null">
        EXPERT_NAME,
      </if>
      <if test="badBehavior != null">
        BAD_BEHAVIOR,
      </if>
      <if test="createdAt != null">
        CREATED_AT,
      </if>
      <if test="updatedAt != null">
        UPDATED_AT,
      </if>
      <if test="inStorageAt != null">
        IN_STORAGE_AT,
      </if>
      <if test="expertNature != null">
        EXPERT_NATURE,
      </if>
      <if test="expertCall != null">
        EXPERT_CALL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="expertId != null">
        #{expertId,jdbcType=DECIMAL},
      </if>
      <if test="expertName != null">
        #{expertName,jdbcType=VARCHAR},
      </if>
      <if test="badBehavior != null">
        #{badBehavior,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="inStorageAt != null">
        #{inStorageAt,jdbcType=TIMESTAMP},
      </if>
      <if test="expertNature != null">
        #{expertNature,jdbcType=VARCHAR},
      </if>
      <if test="expertCall != null">
        #{expertCall,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ses.model.ems.ExpertHonesty">
    update T_SES_EMS_EXPERT_HONESTY
    <set>
      <if test="expertId != null">
        EXPERT_ID = #{expertId,jdbcType=DECIMAL},
      </if>
      <if test="expertName != null">
        EXPERT_NAME = #{expertName,jdbcType=VARCHAR},
      </if>
      <if test="badBehavior != null">
        BAD_BEHAVIOR = #{badBehavior,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="inStorageAt != null">
        IN_STORAGE_AT = #{inStorageAt,jdbcType=TIMESTAMP},
      </if>
      <if test="expertNature != null">
        EXPERT_NATURE = #{expertNature,jdbcType=VARCHAR},
      </if>
      <if test="expertCall != null">
        EXPERT_CALL = #{expertCall,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="ses.model.ems.ExpertHonesty">
    update T_SES_EMS_EXPERT_HONESTY
    set EXPERT_ID = #{expertId,jdbcType=DECIMAL},
      EXPERT_NAME = #{expertName,jdbcType=VARCHAR},
      BAD_BEHAVIOR = #{badBehavior,jdbcType=VARCHAR},
      CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      IN_STORAGE_AT = #{inStorageAt,jdbcType=TIMESTAMP},
      EXPERT_NATURE = #{expertNature,jdbcType=VARCHAR},
      EXPERT_CALL = #{expertCall,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>