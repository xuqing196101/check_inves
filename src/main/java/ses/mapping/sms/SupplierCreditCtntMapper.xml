<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.sms.SupplierCreditCtntMapper">
	<resultMap id="BaseResultMap" type="ses.model.sms.SupplierCreditCtnt">
		<id column="ID" property="id" />
		<result column="SUPPLIER_CREDIT_ID" property="supplierCreditId" />
		<result column="NAME" property="name" />
		<result column="SCORE" property="score" />
		<result column="SUPPLIER_CREDIT_NAME" property="supplierCreditName" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, SUPPLIER_CREDIT_ID, NAME, SCORE
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER_CREDIT_CTNT
		where ID = #{id}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from T_SES_SMS_SUPPLIER_CREDIT_CTNT
		where ID = #{id}
	</delete>
	<insert id="insert" parameterType="ses.model.sms.SupplierCreditCtnt">
		insert into T_SES_SMS_SUPPLIER_CREDIT_CTNT (ID, SUPPLIER_CREDIT_ID, NAME,
		SCORE)
		values (#{id}, #{supplierCreditId}, #{name},
		#{score})
	</insert>
	<insert id="insertSelective" parameterType="ses.model.sms.SupplierCreditCtnt">
		insert into T_SES_SMS_SUPPLIER_CREDIT_CTNT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="supplierCreditId != null">
				SUPPLIER_CREDIT_ID,
			</if>
			<if test="name != null">
				NAME,
			</if>
			<if test="score != null">
				SCORE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="supplierCreditId != null">
				#{supplierCreditId},
			</if>
			<if test="name != null">
				#{name},
			</if>
			<if test="score != null">
				#{score},
			</if>
		</trim>
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
			select sys_guid() from dual
		</selectKey>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="ses.model.sms.SupplierCreditCtnt">
		update T_SES_SMS_SUPPLIER_CREDIT_CTNT
		<set>
			<if test="supplierCreditId != null">
				SUPPLIER_CREDIT_ID = #{supplierCreditId},
			</if>
			<if test="name != null">
				NAME = #{name},
			</if>
			<if test="score != null">
				SCORE = #{score},
			</if>
		</set>
		where ID = #{id}
	</update>
	<update id="updateByPrimaryKey" parameterType="ses.model.sms.SupplierCreditCtnt">
		update T_SES_SMS_SUPPLIER_CREDIT_CTNT
		set SUPPLIER_CREDIT_ID = #{supplierCreditId},
		NAME = #{name},
		SCORE = #{score}
		where ID = #{id}
	</update>
	
	<select id="findCreditCtnt" parameterType="ses.model.sms.SupplierCreditCtnt" resultMap="BaseResultMap">
		select 
			t1.*,
			t2.NAME as SUPPLIER_CREDIT_NAME
		from
			T_SES_SMS_SUPPLIER_CREDIT_CTNT t1
			left join T_SES_SMS_SUPPLIER_CREDIT t2
			on t1.SUPPLIER_CREDIT_ID = t2.ID
		<where>
			<if test="name != null and name != ''">
				and t1.NAME like #{name}
			</if>
		</where>
		order by t2.NAME asc, t1.SCORE asc
	</select>
	
	<select id="findCreditCtntByCreditId" parameterType="ses.model.sms.SupplierCreditCtnt" resultMap="BaseResultMap">
		select 
			t1.*,
			t2.NAME as SUPPLIER_CREDIT_NAME
		from
			T_SES_SMS_SUPPLIER_CREDIT_CTNT t1
			left join T_SES_SMS_SUPPLIER_CREDIT t2
			on t1.SUPPLIER_CREDIT_ID = t2.ID
		where 1=1
		<if test="supplierCreditId != null and supplierCreditId != ''">
			AND t1.SUPPLIER_CREDIT_ID = #{supplierCreditId}
		</if>
		order by t2.NAME asc, t1.SCORE asc
	</select>
	
</mapper>