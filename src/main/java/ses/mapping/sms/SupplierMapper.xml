<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.sms.SupplierMapper">
	<resultMap id="BaseResultMap" type="ses.model.sms.Supplier">
		<id column="ID" property="id" />
		<result column="LOGIN_NAME" property="loginName" />
		<result column="MOBILE" property="mobile" />
		<result column="PASSWORD" property="password" />
		<result column="SUPPLIER_NAME" property="supplierName" />
		<result column="WEBSITE" property="website" />
		<result column="FOUND_DATE" property="foundDate" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="ADDRESS" property="address" />
		<result column="COUNT" property="count" />
		<result column="BANK_NAME" property="bankName" />
		<result column="BANK_ ACCOUNT" property="bankAccount" />
		<result column="POST_CODE" property="postCode" />
		<result column="TAX_CERT" property="taxCert" />
		<result column="BILL_CERT" property="billCert" />
		<result column="SECURITY_CERT" property="securityCert" />
		<result column="BREACH_CERT" property="breachCert" />
		<result column="LEGAL_NAME" property="legalName" />
		<result column="LEGAL_ID_CARD" property="legalIdCard" />
		<result column="LEGAL_TELEPHONE" property="legalTelephone" />
		<result column="LEGAL_MOBILE" property="legalMobile" />
		<result column="CONTACT_NAME" property="contactName" />
		<result column="CONTACT_TELEPHONE" property="contactTelephone" />
		<result column="CONTACT_FAX" property="contactFax" />
		<result column="CONTACT_MOBILE" property="contactMobile" />
		<result column="CONTACT_EMAIL" property="contactEmail" />
		<result column="CONTACT_ADDRESS" property="contactAddress" />
		<result column="CREDIT_CODE" property="creditCode" />
		<result column="REGIST_AUTHORITY" property="registAuthority" />
		<result column="REGIST_FUND" property="registFund" />
		<result column="BUSINESS_START_DATE" property="businessStartDate" />
		<result column="BUSINESS_END_DATE" property="businessEndDate" />
		<result column="BUSINESS_SCOPE" property="businessScope" />
		<result column="BUSINESS_ADDRESS" property="businessAddress" />
		<result column="BUSINESS_POST_CODE" property="businessPostCode" />
		<result column="OVERSEAS_BRANCH" property="overseasBranch" />
		<result column="BRANCH_COUNTRY" property="branchCountry" />
		<result column="BRANCH_ADDRESS" property="branchAddress" />
		<result column="BRANCH_NAME" property="branchName" />
		<result column="BRANCH_BUSINESS_SCOPE" property="branchBusinessScope" />
		<result column="SUPPLIER_TYPE_ID" property="supplierTypeId" />
		<result column="STATUS" property="status" />
		<result column="PROCUREMENT_DEP_ID" property="procurementDepId" />
		<result column="SUPPLIER_LEVEL" property="supplierLevel" />
		<result column="SUPPLIER_PLEDGE" property="supplierPledge" />
		<result column="SUPPLIER_REG_LIST" property="supplierRegList" />
		<result column="SUPPLIER_EXTRACTS_LIST" property="supplierExtractsList" />
		<result column="SUPPLIER_INSPECT_LIST" property="supplierInspectList" />
		<result column="SUPPLIER_REVIEW_LIST" property="supplierReviewList" />
		<result column="SUPPLIER_CHANGE_LIST" property="supplierChangeList" />
		<result column="SUPPLIER_EXIT_LIST" property="supplierExitList" />
		<result column="CREATED_AT" property="createdAt" />
		<result column="UPDATED_AT" property="updatedAt" />
		<result column="SCORE" property="score" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, LOGIN_NAME, MOBILE, PASSWORD, SUPPLIER_NAME, WEBSITE, FOUND_DATE, BUSINESS_TYPE,
		ADDRESS, BANK_NAME, "BANK_ ACCOUNT", POST_CODE, TAX_CERT, BILL_CERT, SECURITY_CERT,
		BREACH_CERT, LEGAL_NAME, LEGAL_ID_CARD, LEGAL_TELEPHONE, LEGAL_MOBILE, CONTACT_NAME,
		CONTACT_TELEPHONE, CONTACT_FAX, CONTACT_MOBILE, CONTACT_EMAIL, CONTACT_ADDRESS, CREDIT_CODE,
		REGIST_AUTHORITY, REGIST_FUND, BUSINESS_START_DATE, BUSINESS_END_DATE, BUSINESS_SCOPE,
		BUSINESS_ADDRESS, BUSINESS_POST_CODE, OVERSEAS_BRANCH, BRANCH_COUNTRY, BRANCH_ADDRESS,
		BRANCH_NAME, BRANCH_BUSINESS_SCOPE, SUPPLIER_TYPE_ID, STATUS, PROCUREMENT_DEP_ID, SUPPLIER_LEVEL,
		SUPPLIER_PLEDGE, SUPPLIER_REG_LIST, SUPPLIER_EXTRACTS_LIST, SUPPLIER_INSPECT_LIST,
		SUPPLIER_REVIEW_LIST, SUPPLIER_CHANGE_LIST, SUPPLIER_EXIT_LIST, CREATED_AT, UPDATED_AT
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER
		where ID = #{id}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from T_SES_SMS_SUPPLIER
		where ID = #{id}
	</delete>
	<insert id="insert" parameterType="ses.model.sms.Supplier">
		insert into T_SES_SMS_SUPPLIER (ID, LOGIN_NAME, MOBILE,
		PASSWORD, SUPPLIER_NAME, WEBSITE,
		FOUND_DATE, BUSINESS_TYPE, ADDRESS,
		BANK_NAME, "BANK_ ACCOUNT", POST_CODE,
		TAX_CERT, BILL_CERT, SECURITY_CERT,
		BREACH_CERT, LEGAL_NAME, LEGAL_ID_CARD,
		LEGAL_TELEPHONE, LEGAL_MOBILE, CONTACT_NAME,
		CONTACT_TELEPHONE, CONTACT_FAX, CONTACT_MOBILE,
		CONTACT_EMAIL, CONTACT_ADDRESS, CREDIT_CODE,
		REGIST_AUTHORITY, REGIST_FUND, BUSINESS_START_DATE,
		BUSINESS_END_DATE, BUSINESS_SCOPE, BUSINESS_ADDRESS,
		BUSINESS_POST_CODE, OVERSEAS_BRANCH, BRANCH_COUNTRY,
		BRANCH_ADDRESS, BRANCH_NAME, BRANCH_BUSINESS_SCOPE,
		SUPPLIER_TYPE_ID, STATUS, PROCUREMENT_DEP_ID,
		SUPPLIER_LEVEL, SUPPLIER_PLEDGE, SUPPLIER_REG_LIST,
		SUPPLIER_EXTRACTS_LIST, SUPPLIER_INSPECT_LIST,
		SUPPLIER_REVIEW_LIST, SUPPLIER_CHANGE_LIST,
		SUPPLIER_EXIT_LIST, CREATED_AT, UPDATED_AT, SCORE
		)
		values (#{id}, #{loginName}, #{mobile},
		#{password}, #{supplierName}, #{website},
		#{foundDate}, #{businessType}, #{address},
		#{bankName}, #{bankAccount},
		#{postCode},
		#{taxCert}, #{billCert}, #{securityCert},
		#{breachCert}, #{legalName}, #{legalIdCard},
		#{legalTelephone}, #{legalMobile}, #{contactName},
		#{contactTelephone}, #{contactFax}, #{contactMobile},
		#{contactEmail}, #{contactAddress}, #{creditCode},
		#{registAuthority}, #{registFund}, #{businessStartDate},
		#{businessEndDate}, #{businessScope}, #{businessAddress},
		#{businessPostCode}, #{overseasBranch}, #{branchCountry},
		#{branchAddress}, #{branchName}, #{branchBusinessScope},
		#{supplierTypeId}, #{status}, #{procurementDepId},
		#{supplierLevel}, #{supplierPledge}, #{supplierRegList},
		#{supplierExtractsList}, #{supplierInspectList},
		#{supplierReviewList}, #{supplierChangeList},
		#{supplierExitList}, #{createdAt}, #{updatedAt}, #{score}
		)
	</insert>
	<insert id="insertSelective" parameterType="ses.model.sms.Supplier">
		insert into T_SES_SMS_SUPPLIER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="loginName != null">
				LOGIN_NAME,
			</if>
			<if test="mobile != null">
				MOBILE,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="supplierName != null">
				SUPPLIER_NAME,
			</if>
			<if test="website != null">
				WEBSITE,
			</if>
			<if test="foundDate != null">
				FOUND_DATE,
			</if>
			<if test="businessType != null">
				BUSINESS_TYPE,
			</if>
			<if test="address != null">
				ADDRESS,
			</if>
			<if test="bankName != null">
				BANK_NAME,
			</if>
			<if test="bankAccount != null">
				"BANK_ ACCOUNT",
			</if>
			<if test="postCode != null">
				POST_CODE,
			</if>
			<if test="taxCert != null">
				TAX_CERT,
			</if>
			<if test="billCert != null">
				BILL_CERT,
			</if>
			<if test="securityCert != null">
				SECURITY_CERT,
			</if>
			<if test="breachCert != null">
				BREACH_CERT,
			</if>
			<if test="legalName != null">
				LEGAL_NAME,
			</if>
			<if test="legalIdCard != null">
				LEGAL_ID_CARD,
			</if>
			<if test="legalTelephone != null">
				LEGAL_TELEPHONE,
			</if>
			<if test="legalMobile != null">
				LEGAL_MOBILE,
			</if>
			<if test="contactName != null">
				CONTACT_NAME,
			</if>
			<if test="contactTelephone != null">
				CONTACT_TELEPHONE,
			</if>
			<if test="contactFax != null">
				CONTACT_FAX,
			</if>
			<if test="contactMobile != null">
				CONTACT_MOBILE,
			</if>
			<if test="contactEmail != null">
				CONTACT_EMAIL,
			</if>
			<if test="contactAddress != null">
				CONTACT_ADDRESS,
			</if>
			<if test="creditCode != null">
				CREDIT_CODE,
			</if>
			<if test="registAuthority != null">
				REGIST_AUTHORITY,
			</if>
			<if test="registFund != null">
				REGIST_FUND,
			</if>
			<if test="businessStartDate != null">
				BUSINESS_START_DATE,
			</if>
			<if test="businessEndDate != null">
				BUSINESS_END_DATE,
			</if>
			<if test="businessScope != null">
				BUSINESS_SCOPE,
			</if>
			<if test="businessAddress != null">
				BUSINESS_ADDRESS,
			</if>
			<if test="businessPostCode != null">
				BUSINESS_POST_CODE,
			</if>
			<if test="overseasBranch != null">
				OVERSEAS_BRANCH,
			</if>
			<if test="branchCountry != null">
				BRANCH_COUNTRY,
			</if>
			<if test="branchAddress != null">
				BRANCH_ADDRESS,
			</if>
			<if test="branchName != null">
				BRANCH_NAME,
			</if>
			<if test="branchBusinessScope != null">
				BRANCH_BUSINESS_SCOPE,
			</if>
			<if test="supplierTypeId != null">
				SUPPLIER_TYPE_ID,
			</if>
			<if test="status != null">
				STATUS,
			</if>
			<if test="procurementDepId != null">
				PROCUREMENT_DEP_ID,
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL,
			</if>
			<if test="supplierPledge != null">
				SUPPLIER_PLEDGE,
			</if>
			<if test="supplierRegList != null">
				SUPPLIER_REG_LIST,
			</if>
			<if test="supplierExtractsList != null">
				SUPPLIER_EXTRACTS_LIST,
			</if>
			<if test="supplierInspectList != null">
				SUPPLIER_INSPECT_LIST,
			</if>
			<if test="supplierReviewList != null">
				SUPPLIER_REVIEW_LIST,
			</if>
			<if test="supplierChangeList != null">
				SUPPLIER_CHANGE_LIST,
			</if>
			<if test="supplierExitList != null">
				SUPPLIER_EXIT_LIST,
			</if>
			<if test="createdAt != null">
				CREATED_AT,
			</if>
			<if test="updatedAt != null">
				UPDATED_AT,
			</if>
			<if test="score != null">
				SCORE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="loginName != null">
				#{loginName},
			</if>
			<if test="mobile != null">
				#{mobile},
			</if>
			<if test="password != null">
				#{password},
			</if>
			<if test="supplierName != null">
				#{supplierName},
			</if>
			<if test="website != null">
				#{website},
			</if>
			<if test="foundDate != null">
				#{foundDate},
			</if>
			<if test="businessType != null">
				#{businessType},
			</if>
			<if test="address != null">
				#{address},
			</if>
			<if test="bankName != null">
				#{bankName},
			</if>
			<if test="bankAccount != null">
				#{bankAccount},
			</if>
			<if test="postCode != null">
				#{postCode},
			</if>
			<if test="taxCert != null">
				#{taxCert},
			</if>
			<if test="billCert != null">
				#{billCert},
			</if>
			<if test="securityCert != null">
				#{securityCert},
			</if>
			<if test="breachCert != null">
				#{breachCert},
			</if>
			<if test="legalName != null">
				#{legalName},
			</if>
			<if test="legalIdCard != null">
				#{legalIdCard},
			</if>
			<if test="legalTelephone != null">
				#{legalTelephone},
			</if>
			<if test="legalMobile != null">
				#{legalMobile},
			</if>
			<if test="contactName != null">
				#{contactName},
			</if>
			<if test="contactTelephone != null">
				#{contactTelephone},
			</if>
			<if test="contactFax != null">
				#{contactFax},
			</if>
			<if test="contactMobile != null">
				#{contactMobile},
			</if>
			<if test="contactEmail != null">
				#{contactEmail},
			</if>
			<if test="contactAddress != null">
				#{contactAddress},
			</if>
			<if test="creditCode != null">
				#{creditCode},
			</if>
			<if test="registAuthority != null">
				#{registAuthority},
			</if>
			<if test="registFund != null">
				#{registFund},
			</if>
			<if test="businessStartDate != null">
				#{businessStartDate},
			</if>
			<if test="businessEndDate != null">
				#{businessEndDate},
			</if>
			<if test="businessScope != null">
				#{businessScope},
			</if>
			<if test="businessAddress != null">
				#{businessAddress},
			</if>
			<if test="businessPostCode != null">
				#{businessPostCode},
			</if>
			<if test="overseasBranch != null">
				#{overseasBranch},
			</if>
			<if test="branchCountry != null">
				#{branchCountry},
			</if>
			<if test="branchAddress != null">
				#{branchAddress},
			</if>
			<if test="branchName != null">
				#{branchName},
			</if>
			<if test="branchBusinessScope != null">
				#{branchBusinessScope},
			</if>
			<if test="supplierTypeId != null">
				#{supplierTypeId},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="procurementDepId != null">
				#{procurementDepId},
			</if>
			<if test="supplierLevel != null">
				#{supplierLevel},
			</if>
			<if test="supplierPledge != null">
				#{supplierPledge},
			</if>
			<if test="supplierRegList != null">
				#{supplierRegList},
			</if>
			<if test="supplierExtractsList != null">
				#{supplierExtractsList},
			</if>
			<if test="supplierInspectList != null">
				#{supplierInspectList},
			</if>
			<if test="supplierReviewList != null">
				#{supplierReviewList},
			</if>
			<if test="supplierChangeList != null">
				#{supplierChangeList},
			</if>
			<if test="supplierExitList != null">
				#{supplierExitList},
			</if>
			<if test="createdAt != null">
				#{createdAt},
			</if>
			<if test="updatedAt != null">
				#{updatedAt},
			</if>
			<if test="score != null">
				#{score},
			</if>
		</trim>
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
			select sys_guid() from dual
		</selectKey>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER
		<set>
			<if test="loginName != null">
				LOGIN_NAME = #{loginName},
			</if>
			<if test="mobile != null">
				MOBILE = #{mobile},
			</if>
			<if test="password != null">
				PASSWORD = #{password},
			</if>
			<if test="supplierName != null">
				SUPPLIER_NAME = #{supplierName},
			</if>
			<if test="website != null">
				WEBSITE = #{website},
			</if>
			<if test="foundDate != null">
				FOUND_DATE = #{foundDate},
			</if>
			<if test="businessType != null">
				BUSINESS_TYPE = #{businessType},
			</if>
			<if test="address != null">
				ADDRESS = #{address},
			</if>
			<if test="bankName != null">
				BANK_NAME = #{bankName},
			</if>
			<if test="bankAccount != null">
				"BANK_ ACCOUNT" = #{bankAccount},
			</if>
			<if test="postCode != null">
				POST_CODE = #{postCode},
			</if>
			<if test="taxCert != null">
				TAX_CERT = #{taxCert},
			</if>
			<if test="billCert != null">
				BILL_CERT = #{billCert},
			</if>
			<if test="securityCert != null">
				SECURITY_CERT = #{securityCert},
			</if>
			<if test="breachCert != null">
				BREACH_CERT = #{breachCert},
			</if>
			<if test="legalName != null">
				LEGAL_NAME = #{legalName},
			</if>
			<if test="legalIdCard != null">
				LEGAL_ID_CARD = #{legalIdCard},
			</if>
			<if test="legalTelephone != null">
				LEGAL_TELEPHONE = #{legalTelephone},
			</if>
			<if test="legalMobile != null">
				LEGAL_MOBILE = #{legalMobile},
			</if>
			<if test="contactName != null">
				CONTACT_NAME = #{contactName},
			</if>
			<if test="contactTelephone != null">
				CONTACT_TELEPHONE = #{contactTelephone},
			</if>
			<if test="contactFax != null">
				CONTACT_FAX = #{contactFax},
			</if>
			<if test="contactMobile != null">
				CONTACT_MOBILE = #{contactMobile},
			</if>
			<if test="contactEmail != null">
				CONTACT_EMAIL = #{contactEmail},
			</if>
			<if test="contactAddress != null">
				CONTACT_ADDRESS = #{contactAddress},
			</if>
			<if test="creditCode != null">
				CREDIT_CODE = #{creditCode},
			</if>
			<if test="registAuthority != null">
				REGIST_AUTHORITY = #{registAuthority},
			</if>
			<if test="registFund != null">
				REGIST_FUND = #{registFund},
			</if>
			<if test="businessStartDate != null">
				BUSINESS_START_DATE = #{businessStartDate},
			</if>
			<if test="businessEndDate != null">
				BUSINESS_END_DATE = #{businessEndDate},
			</if>
			<if test="businessScope != null">
				BUSINESS_SCOPE = #{businessScope},
			</if>
			<if test="businessAddress != null">
				BUSINESS_ADDRESS = #{businessAddress},
			</if>
			<if test="businessPostCode != null">
				BUSINESS_POST_CODE = #{businessPostCode},
			</if>
			<if test="overseasBranch != null">
				OVERSEAS_BRANCH = #{overseasBranch},
			</if>
			<if test="branchCountry != null">
				BRANCH_COUNTRY = #{branchCountry},
			</if>
			<if test="branchAddress != null">
				BRANCH_ADDRESS = #{branchAddress},
			</if>
			<if test="branchName != null">
				BRANCH_NAME = #{branchName},
			</if>
			<if test="branchBusinessScope != null">
				BRANCH_BUSINESS_SCOPE = #{branchBusinessScope},
			</if>
			<if test="supplierTypeId != null">
				SUPPLIER_TYPE_ID = #{supplierTypeId},
			</if>
			<if test="procurementDepId != null">
				PROCUREMENT_DEP_ID = #{procurementDepId},
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL = #{supplierLevel},
			</if>
			<if test="supplierPledge != null">
				SUPPLIER_PLEDGE = #{supplierPledge},
			</if>
			<if test="supplierRegList != null">
				SUPPLIER_REG_LIST = #{supplierRegList},
			</if>
			<if test="supplierExtractsList != null">
				SUPPLIER_EXTRACTS_LIST = #{supplierExtractsList},
			</if>
			<if test="supplierInspectList != null">
				SUPPLIER_INSPECT_LIST = #{supplierInspectList},
			</if>
			<if test="supplierReviewList != null">
				SUPPLIER_REVIEW_LIST = #{supplierReviewList},
			</if>
			<if test="supplierChangeList != null">
				SUPPLIER_CHANGE_LIST = #{supplierChangeList},
			</if>
			<if test="supplierExitList != null">
				SUPPLIER_EXIT_LIST = #{supplierExitList},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt},
			</if>
		</set>
		where ID = #{id}
	</update>
	<update id="updateByPrimaryKey" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER
		set LOGIN_NAME = #{loginName},
		MOBILE = #{mobile},
		PASSWORD = #{password},
		SUPPLIER_NAME = #{supplierName},
		WEBSITE = #{website},
		FOUND_DATE = #{foundDate},
		BUSINESS_TYPE = #{businessType},
		ADDRESS = #{address},
		BANK_NAME = #{bankName},
		"BANK_ ACCOUNT" = #{bankAccount},
		POST_CODE = #{postCode},
		TAX_CERT = #{taxCert},
		BILL_CERT = #{billCert},
		SECURITY_CERT = #{securityCert},
		BREACH_CERT = #{breachCert},
		LEGAL_NAME = #{legalName},
		LEGAL_ID_CARD = #{legalIdCard},
		LEGAL_TELEPHONE = #{legalTelephone},
		LEGAL_MOBILE = #{legalMobile},
		CONTACT_NAME = #{contactName},
		CONTACT_TELEPHONE = #{contactTelephone},
		CONTACT_FAX = #{contactFax},
		CONTACT_MOBILE = #{contactMobile},
		CONTACT_EMAIL = #{contactEmail},
		CONTACT_ADDRESS = #{contactAddress},
		CREDIT_CODE = #{creditCode},
		REGIST_AUTHORITY = #{registAuthority},
		REGIST_FUND = #{registFund},
		BUSINESS_START_DATE = #{businessStartDate},
		BUSINESS_END_DATE = #{businessEndDate},
		BUSINESS_SCOPE =
		#{businessScope},
		BUSINESS_ADDRESS = #{businessAddress},
		BUSINESS_POST_CODE = #{businessPostCode},
		OVERSEAS_BRANCH = #{overseasBranch},
		BRANCH_COUNTRY = #{branchCountry},
		BRANCH_ADDRESS = #{branchAddress},
		BRANCH_NAME = #{branchName},
		BRANCH_BUSINESS_SCOPE = #{branchBusinessScope},
		SUPPLIER_TYPE_ID = #{supplierTypeId},
		STATUS = #{status},
		PROCUREMENT_DEP_ID = #{procurementDepId},
		SUPPLIER_LEVEL = #{supplierLevel},
		SUPPLIER_PLEDGE = #{supplierPledge},
		SUPPLIER_REG_LIST = #{supplierRegList},
		SUPPLIER_EXTRACTS_LIST = #{supplierExtractsList},
		SUPPLIER_INSPECT_LIST = #{supplierInspectList},
		SUPPLIER_REVIEW_LIST = #{supplierReviewList},
		SUPPLIER_CHANGE_LIST = #{supplierChangeList},
		SUPPLIER_EXIT_LIST = #{supplierExitList},
		CREATED_AT = #{createdAt},
		UPDATED_AT = #{updatedAt}
		where ID = #{id}
	</update>

	<!-- -->
	<select id="selectLastInsertId" resultType="java.lang.String">
		select ID from T_SES_SMS_SUPPLIER t1 where t1.rowid = (select max(rowid) from T_SES_SMS_SUPPLIER t2)
	</select>

	<!-- 查询供应商全部信息 -->
	<select id="getSupplier" parameterType="java.lang.String" resultMap="supplierMap">
		select * from T_SES_SMS_SUPPLIER where ID = #{id}
	</select>
	<select id="getAllSupplier" parameterType="java.lang.String" resultMap="supplierMap">
		select * from T_SES_SMS_SUPPLIER where 1=1 
		<if test="supplierName != null and supplierName !=''">
			and SUPPLIER_NAME like '%${supplierName}%'
		</if>
		<if test="startDate != null">
			AND CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			AND CREATED_AT &lt;= #{endDate}
		</if>
		<if test="contactName != null and contactName != ''">
			AND CONTACT_NAME = #{contactName}
		</if>
		<if test="status != null">
			and STATUS = #{status}
		</if>
		<if test="address != null and address !=''">  
       		and ADDRESS like '%${address}%'   
        </if> 
		ORDER BY FOUND_DATE DESC
	</select>
	<update id="updateSupplierProcurementDep" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER set PROCUREMENT_DEP_ID = #{procurementDepId} where ID = #{id}
	</update>

	<!-- 根据审核状态查询供应商及条件查询 -->
	<select id="findSupplier" parameterType="ses.model.sms.Supplier" resultMap="findSupplierMap">
		select
			t1.*,
			t2.ID as SUPPLIER_RELATE_ID,
			t2.SUPPLIER_ID,
			t2.SUPPLIER_TYPE_ID as SUPPLIER_TYPE_ID_,
			t2.CREATED_AT as CREATED_AT_,
			t2.UPDATED_AT as UPDATED_AT_,
			t3.NAME as SUPPLIER_TYPE_NAME
		from
			T_SES_SMS_SUPPLIER t1
			left join T_SES_SMS_SUPPLIER_TYPE_RELATE t2 on t1. ID = t2.SUPPLIER_ID
			left join T_SES_SMS_SUPPLIER_TYPE t3 on t2.SUPPLIER_TYPE_ID = t3. ID
		where
			1=1
		<if test="id != null and id!=''">
			and t1.ID = #{id}
		</if>
		<if test="supplierName != null and supplierName !=''">
			and SUPPLIER_NAME like '%${supplierName}%'
		</if>
		<if test="status != null">
			and STATUS = #{status}
		</if>
		<if test="startDate != null">
			and t1.CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			and t1.CREATED_AT &lt;= #{endDate}
		</if>
		<if test="contactName != null and contactName != ''">
			and CONTACT_NAME = #{contactName}
		</if>
	 	<if test="supplierType != null and supplierType != ''">
			and t3.NAME like #{supplierType}
		</if>
        <if test="address != null and address !=''">  
       		and ADDRESS like '%${address}%'   
       </if>
       <if test="startScore != null and startScore !=''">
       		and SCORE &gt; #{startScore}
       </if>
       <if test="endScore != null and endScore !=''">
       		and SCORE &lt; #{endScore}
       </if>
		ORDER BY FOUND_DATE DESC, t1.SCORE DESC
	</select>

	<select id="querySupplierbyCategory" parameterType="ses.model.sms.Supplier" resultMap="findSupplierMap">
	SELECT
	*
	FROM
		(
			SELECT
				t6.*, T5."COUNT" AS COUNT
			FROM
				(
					SELECT
						T4. ID,
						t4. COUNT
					FROM
						(
							SELECT
								T3. ID,
								COUNT (T3. ID) AS COUNT
							FROM
								(
									SELECT
										T1. ID,
										CATEGORY_ID
									FROM
										"JDCG"."T_SES_SMS_SUPPLIER" t1
									RIGHT JOIN T_SES_SMS_SUPPLIER_ITEM t2 ON T1. ID = T2.SUPPLIER_ID
									AND CATEGORY_ID IN 
									 <foreach item="item" index="index" collection="item"   
	                         		open="(" separator="," close=")">  
	                       			 #{item}  
	                				</foreach>  
								) t3
							GROUP BY
								T3. ID
							HAVING
								t3. ID IS NOT NULL
						) t4
					RIGHT JOIN (
						SELECT
							T3."ID"
						FROM
							(
								SELECT
									T1. ID,
									CATEGORY_ID
								FROM
									"JDCG"."T_SES_SMS_SUPPLIER" t1
								RIGHT JOIN T_SES_SMS_SUPPLIER_ITEM t2 ON T1. ID = T2.SUPPLIER_ID
							) t3
						GROUP BY
							T3. ID
					) tt1 ON t4. ID = TT1."ID"
				) t5
			LEFT JOIN T_SES_SMS_SUPPLIER t6 ON t5. ID = t6. ID
		) t7
	WHERE
	1=1
		<if test="supplierName != null and supplierName !=''">
			and t7.SUPPLIER_NAME like '%${supplierName}%'
		</if>
		<if test="count != null and count !=''">
			and t7.COUNT =  #{count}
		</if>
		ORDER BY FOUND_DATE DESC
	</select>
	
	<select id="querySupplier" parameterType="ses.model.sms.Supplier" resultMap="findSupplierMap">
		select * from(
			select
			t1.*,
			t2.ID as SUPPLIER_RELATE_ID,
			t2.SUPPLIER_ID,
			t2.SUPPLIER_TYPE_ID as SUPPLIER_TYPE_ID_,
			t2.CREATED_AT as CREATED_AT_,
			t2.UPDATED_AT as UPDATED_AT_,
			t3.NAME as SUPPLIER_TYPE_NAME
		from
			T_SES_SMS_SUPPLIER t1
			left join T_SES_SMS_SUPPLIER_TYPE_RELATE t2 on t1. ID = t2.SUPPLIER_ID
			left join T_SES_SMS_SUPPLIER_TYPE t3 on t2.SUPPLIER_TYPE_ID = t3. ID
		) t4 where 1=1
		<if test="supplierName != null and supplierName !=''">
			and t4.SUPPLIER_NAME like '%${supplierName}%'
		</if>
		<if test="startDate != null">
			AND t4.CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			AND t4.CREATED_AT &lt;= #{endDate}
		</if>
		<if test="contactName != null and contactName != ''">
			AND t4.CONTACT_NAME = #{contactName}
		</if>
		<if test="status != null">
			and t4.STATUS = #{status}
		</if>
		<if test="address != null and address !=''">  
       		and t4.ADDRESS like '%${address}%'   
        </if> 
      	<if test="supplierType != null and supplierType != ''">
			AND t4.SUPPLIER_TYPE_NAME like #{supplierType}
		</if>
		ORDER BY FOUND_DATE DESC
	</select>
	<resultMap type="ses.model.sms.Supplier" id="findSupplierMap" extends="BaseResultMap">
		<collection property="listSupplierTypeRelates" ofType="ses.model.sms.SupplierTypeRelate">
			<result column="SUPPLIER_RELATE_ID" property="id"/>
			<result column="SUPPLIER_ID" property="supplierId"/>
			<result column="SUPPLIER_TYPE_ID_" property="supplierTypeId"/>
			<result column="CREATED_AT_" property="createdAt"/>
			<result column="UPDATED_AT_" property="updatedAt"/>
			<result column="SUPPLIER_TYPE_NAME" property="supplierTypeName"/>
		</collection>
	</resultMap>

	<!-- 根据审核状态获取条数 -->
	<select id="getCount" parameterType="ses.model.sms.Supplier" resultType="java.lang.Integer">
		select count(*) from T_SES_SMS_SUPPLIER
		where 1=1
		<if test="status!=null">
			and status= #{status}
		</if>
	</select>

	<!-- 根据供应商Id更新状态 -->
	<update id="updateStatus" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER
		set
		STATUS = #{status}
		where ID = #{id}
	</update>


	<resultMap type="ses.model.sms.Supplier" id="supplierMap" extends="BaseResultMap">
		<association property="supplierMatEng" select="ses.dao.sms.SupplierMatEngMapper.getMatEngBySupplierId" column="ID" />
		<association property="supplierMatSe" select="ses.dao.sms.SupplierMatSeMapper.getMatSeBySupplierId" column="ID" />
		<association property="supplierMatPro" select="ses.dao.sms.SupplierMatProMapper.getMatProBySupplierId" column="ID" />
		<association property="supplierMatSell" select="ses.dao.sms.SupplierMatSellMapper.getMatSellBySupplierId" column="ID" />
		<collection property="listSupplierFinances" select="ses.dao.sms.SupplierFinanceMapper.findFinanceBySupplierId" column="ID" />
		<collection property="listSupplierStockholders" select="ses.dao.sms.SupplierStockholderMapper.findStockholderBySupplierId" column="ID" />
		<collection property="listSupplierTypeRelates" select="ses.dao.sms.SupplierTypeRelateMapper.findSupplierTypeBySupplierId" column="ID" />
		<collection property="listSupplierItems" select="ses.dao.sms.SupplierItemMapper.findSupplierItemBySupplierId" column="ID" />
		<collection property="listSupplierProducts" select="ses.dao.sms.SupplierProductsMapper.findSupplierProductsBySupplierId" column="ID" />
	</resultMap>
	
	<update id="updateScore" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER set SCORE = #{score} where ID = #{id}
	</update>
</mapper>