<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.sms.SupplierMapper">
	<resultMap id="BaseResultMap" type="ses.model.sms.Supplier">
		<id column="ID" property="id" />
		<result column="LOGIN_NAME" property="loginName" />
		<result column="BUSINESS_NATURE" property="businessNature" />
		<result column="IS_HAVING_CON_CERT" property="isHavingConCert" />
		<result column="MOBILE" property="mobile" />
		<result column="PASSWORD" property="password" />
		<result column="IS_ILLEGAL" property="isIllegal" />
		<result column="PURCHASE_EXPERIENCE" property="purchaseExperience" />
		<result column="SUPPLIER_NAME" property="supplierName" />
		<result column="WEBSITE" property="website" />
		<result column="FOUND_DATE" property="foundDate" jdbcType="TIMESTAMP" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="BUSINESS_CERT" property="businessCert" />
		<result column="ADDRESS" property="address" />
		<result column="PARENT_ADDRESS" property="parentAddress" />
		<result column="COUNT" property="count" />
		<result column="BANK_NAME" property="bankName" />
		<result column="LEVEL_SCORE_PRODUCT" property="levelScoreProduct" />
		<result column="LEVEL_SCORE_SALES" property="levelScoreSales" />
		<result column="LEVEL_SCORE_SERVICE" property="levelScoreService" />
		<result column="DESCRIPTION" property="description" />
		<result column="BANK_ACCOUNT" property="bankAccount" />
		<result column="POST_CODE" property="postCode" />
		<result column="TAX_CERT" property="taxCert" />
		<result column="BILL_CERT" property="billCert" />
		<result column="SECURITY_CERT" property="securityCert" />
		<result column="BREACH_CERT" property="breachCert" />
		<result column="LEGAL_NAME" property="legalName" />
		<result column="LEGAL_ID_CARD" property="legalIdCard" />
		<result column="LEGAL_TELEPHONE" property="legalTelephone" />
		<result column="LEGAL_MOBILE" property="legalMobile" />
		<result column="CONTACT_NAME" property="contactName" />
		<result column="CONTACT_TELEPHONE" property="contactTelephone" />
		<result column="CONTACT_FAX" property="contactFax" />
		<result column="CONTACT_MOBILE" property="contactMobile" />
		<result column="CONTACT_EMAIL" property="contactEmail" />
		<result column="CONTACT_ADDRESS" property="contactAddress" />
		<result column="CREDIT_CODE" property="creditCode" />
		<result column="REGIST_AUTHORITY" property="registAuthority" />
		<result column="REGIST_FUND" property="registFund" />
		<result column="BUSINESS_START_DATE" property="businessStartDate"
			jdbcType="TIMESTAMP" />
		<result column="BUSINESS_END_DATE" property="businessEndDate"
			jdbcType="TIMESTAMP" />
		<result column="BUSINESS_SCOPE" property="businessScope" />
		<result column="BUSINESS_ADDRESS" property="businessAddress" />
		<result column="BUSINESS_POST_CODE" property="businessPostCode" />
		<result column="OVERSEAS_BRANCH" property="overseasBranch" />
		<result column="BRANCH_COUNTRY" property="branchCountry" />
		<result column="BRANCH_ADDRESS" property="branchAddress" />
		<result column="BRANCH_NAME" property="branchName" />
		<result column="BRANCH_BUSINESS_SCOPE" property="branchBusinessScope" />
		<result column="SUPPLIER_TYPE_ID" property="supplierTypeId" />
		<result column="SUPPLIER_STATUS" property="status" />
		<result column="PROCUREMENT_DEP_ID" property="procurementDepId" />
		<result column="SUPPLIER_LEVEL" property="supplierLevel" />
		<result column="SUPPLIER_PLEDGE" property="supplierPledge" />
		<result column="SUPPLIER_REG_LIST" property="supplierRegList" />
		<result column="SUPPLIER_EXTRACTS_LIST" property="supplierExtractsList" />
		<result column="SUPPLIER_INSPECT_LIST" property="supplierInspectList" />
		<result column="SUPPLIER_REVIEW_LIST" property="supplierReviewList" />
		<result column="SUPPLIER_CHANGE_LIST" property="supplierChangeList" />
		<result column="SUPPLIER_EXIT_LIST" property="supplierExitList" />
		<result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="UPDATED_AT" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="SUBMIT_AT" property="submitAt" jdbcType="TIMESTAMP" />
		<result column="SCORE" property="score" />
		<result column="NAME" property="name" />
		<result column="AREA_NAME" property="areaName" />
		<result column="DETAIL_ADDRESS" property="detailAddress" />
		<result column="ARMY_BUSINESS_NAME" property="armyBusinessName" />
		<result column="ARMY_BUSINESS_FAX" property="armyBusinessFax" />
		<result column="ARMY_BUSINESS_MOBILE" property="armyBuinessMobile" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="armyBuinessTelephone" />
		<result column="ARMY_BUSINESS_EMAIL" property="armyBuinessEmail" />
		<result column="ARMY_BUSINESS_ADDRESS" property="armyBuinessAddress" />
		<result column="AUDIT_DATE" property="auditDate" jdbcType="TIMESTAMP" />
		<result column="IS_EXTRACT" property="isExtract" />

		<result column="CONCAT_PROVINCE" property="concatProvince" />
		<result column="CONCAT_CITY" property="concatCity" />
		<result column="ARMY_BUSINESS_PROVINCE" property="armyBuinessProvince" />
		<result column="ARMY_BUSINESS_CITY" property="armyBuinessCity" />
		<result column="IS_PROVISIONAL" property="isProvisional" />
		<result column="IS_PUBLISH" property="isPublish" />
		<result column="EXTRACT_ORGID" property="extractOrgid" />
		<result column="IS_DELETED" property="isDeleted" />
		<result column="ORG_NAME" property="orgName" />
		<result column="DEP_PHONE" property="depPhone" />
		<result column="AUDITOR" property="auditor" />
		<result column="AUDIT_TEMPORARY" property="auditTemporary" />
		<result column="AUDIT_OPINION_ATTACH" property="auditOpinionAttach" />
		<result column="INSTORAGE_AT" property="instorageAt" jdbcType="TIMESTAMP"/>
		<result column="RETURN_COUNT" property="returnCount"/>
		<result column="LAST_RETURN_DATE" property="lastReturnDate" jdbcType="TIMESTAMP"/>
		<result column="REVIEW_PEOPLE" property="reviewPeople"/>
		<result column="REVIEW_STATUS" property="reviewStatus"/>
		<result column="REVIEW_AT" property="reviewAt" jdbcType="TIMESTAMP"/>
		<result column="INVES_PEOPLE" property="invesPeople"/>
		<result column="INVES_AT" property="invesAt" jdbcType="TIMESTAMP"/>
    <association property="area" column="ADDRESS" select="ses.dao.bms.AreaMapper.selectById"/>
	</resultMap>

	<!--基本字段-->
	<resultMap id="BaseResultMapSimple" type="ses.model.sms.Supplier">
		<id column="ID" property="id" />
		<result column="LOGIN_NAME" property="loginName" />
		<result column="BUSINESS_NATURE" property="businessNature" />
		<result column="IS_HAVING_CON_CERT" property="isHavingConCert" />
		<result column="MOBILE" property="mobile" />
		<result column="PASSWORD" property="password" />
		<result column="IS_ILLEGAL" property="isIllegal" />
		<result column="PURCHASE_EXPERIENCE" property="purchaseExperience" />
		<result column="SUPPLIER_NAME" property="supplierName" />
		<result column="WEBSITE" property="website" />
		<result column="FOUND_DATE" property="foundDate" jdbcType="TIMESTAMP" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="BUSINESS_CERT" property="businessCert" />
		<result column="ADDRESS" property="address" />
		<result column="PARENT_ADDRESS" property="parentAddress" />
		<result column="COUNT" property="count" />
		<result column="BANK_NAME" property="bankName" />
		<result column="LEVEL_SCORE_PRODUCT" property="levelScoreProduct" />
		<result column="LEVEL_SCORE_SALES" property="levelScoreSales" />
		<result column="LEVEL_SCORE_SERVICE" property="levelScoreService" />
		<result column="DESCRIPTION" property="description" />
		<result column="BANK_ACCOUNT" property="bankAccount" />
		<result column="POST_CODE" property="postCode" />
		<result column="TAX_CERT" property="taxCert" />
		<result column="BILL_CERT" property="billCert" />
		<result column="SECURITY_CERT" property="securityCert" />
		<result column="BREACH_CERT" property="breachCert" />
		<result column="LEGAL_NAME" property="legalName" />
		<result column="LEGAL_ID_CARD" property="legalIdCard" />
		<result column="LEGAL_TELEPHONE" property="legalTelephone" />
		<result column="LEGAL_MOBILE" property="legalMobile" />
		<result column="CONTACT_NAME" property="contactName" />
		<result column="CONTACT_TELEPHONE" property="contactTelephone" />
		<result column="CONTACT_FAX" property="contactFax" />
		<result column="CONTACT_MOBILE" property="contactMobile" />
		<result column="CONTACT_EMAIL" property="contactEmail" />
		<result column="CONTACT_ADDRESS" property="contactAddress" />
		<result column="CREDIT_CODE" property="creditCode" />
		<result column="REGIST_AUTHORITY" property="registAuthority" />
		<result column="REGIST_FUND" property="registFund" />
		<result column="BUSINESS_START_DATE" property="businessStartDate"
				jdbcType="TIMESTAMP" />
		<result column="BUSINESS_END_DATE" property="businessEndDate"
				jdbcType="TIMESTAMP" />
		<result column="BUSINESS_SCOPE" property="businessScope" />
		<result column="BUSINESS_ADDRESS" property="businessAddress" />
		<result column="BUSINESS_POST_CODE" property="businessPostCode" />
		<result column="OVERSEAS_BRANCH" property="overseasBranch" />
		<result column="BRANCH_COUNTRY" property="branchCountry" />
		<result column="BRANCH_ADDRESS" property="branchAddress" />
		<result column="BRANCH_NAME" property="branchName" />
		<result column="BRANCH_BUSINESS_SCOPE" property="branchBusinessScope" />
		<result column="SUPPLIER_TYPE_ID" property="supplierTypeId" />
		<result column="SUPPLIER_STATUS" property="status" />
		<result column="PROCUREMENT_DEP_ID" property="procurementDepId" />
		<result column="SUPPLIER_LEVEL" property="supplierLevel" />
		<result column="SUPPLIER_PLEDGE" property="supplierPledge" />
		<result column="SUPPLIER_REG_LIST" property="supplierRegList" />
		<result column="SUPPLIER_EXTRACTS_LIST" property="supplierExtractsList" />
		<result column="SUPPLIER_INSPECT_LIST" property="supplierInspectList" />
		<result column="SUPPLIER_REVIEW_LIST" property="supplierReviewList" />
		<result column="SUPPLIER_CHANGE_LIST" property="supplierChangeList" />
		<result column="SUPPLIER_EXIT_LIST" property="supplierExitList" />
		<result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="UPDATED_AT" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="SUBMIT_AT" property="submitAt" jdbcType="TIMESTAMP" />
		<result column="SCORE" property="score" />
		<result column="NAME" property="name" />
		<result column="AREA_NAME" property="areaName" />
		<result column="DETAIL_ADDRESS" property="detailAddress" />
		<result column="ARMY_BUSINESS_NAME" property="armyBusinessName" />
		<result column="ARMY_BUSINESS_FAX" property="armyBusinessFax" />
		<result column="ARMY_BUSINESS_MOBILE" property="armyBuinessMobile" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="armyBuinessTelephone" />
		<result column="ARMY_BUSINESS_EMAIL" property="armyBuinessEmail" />
		<result column="ARMY_BUSINESS_ADDRESS" property="armyBuinessAddress" />
		<result column="AUDIT_DATE" property="auditDate" jdbcType="TIMESTAMP" />
		<result column="IS_EXTRACT" property="isExtract" />
		<result column="CONCAT_PROVINCE" property="concatProvince" />
		<result column="CONCAT_CITY" property="concatCity" />
		<result column="ARMY_BUSINESS_PROVINCE" property="armyBuinessProvince" />
		<result column="ARMY_BUSINESS_CITY" property="armyBuinessCity" />
		<result column="IS_PROVISIONAL" property="isProvisional" />
		<result column="IS_PUBLISH" property="isPublish" />
		<result column="EXTRACT_ORGID" property="extractOrgid" />
		<result column="IS_DELETED" property="isDeleted" />
		<result column="ORG_NAME" property="orgName" />
		<result column="AUDITOR" property="auditor" />
		<result column="AUDIT_TEMPORARY" property="auditTemporary" />
		<result column="AUDIT_OPINION_ATTACH" property="auditOpinionAttach" />
		<result column="INSTORAGE_AT" property="instorageAt" jdbcType="TIMESTAMP"/>
		<result column="RETURN_COUNT" property="returnCount"/>
		<result column="LAST_RETURN_DATE" property="lastReturnDate" jdbcType="TIMESTAMP"/>
		<result column="REVIEW_PEOPLE" property="reviewPeople"/>
		<result column="REVIEW_STATUS" property="reviewStatus"/>
		<result column="REVIEW_AT" property="reviewAt"/>
		<result column="INVES_PEOPLE" property="invesPeople"/>
		<result column="INVES_AT" property="invesAt"/>
	</resultMap>

	<resultMap type="ses.model.sms.Supplier" id="supplierTypeMap"
		extends="BaseResultMap">
		<collection property="listSupplierTypeRelates"
			select="ses.dao.sms.SupplierTypeRelateMapper.findSupplierTypeBySupplierId"
			column="ID" />
	</resultMap>
	
	<!-- 供应商公示 -->
	<resultMap id="supplierOfPublicityMap" type="ses.model.sms.Supplier">
		<id column="ID" property="id" />
		<result column="AUDIT_DATE" property="auditDate" jdbcType="TIMESTAMP" />
		<result column="MOBILE" property="mobile" />
	</resultMap>

  <!-- 统计Analyze关系映射 -->
  <resultMap type="ses.model.bms.AnalyzeBigDecimal" id="baseAnalyze">
      <result column="COL_NAME" property="name"/>
      <result column="COL_VALUE" property="value"/>
      <result column="COL_ID" property="id"/>
  </resultMap>
	
	<!-- 供应商公示列表查询 -->
  <resultMap id="supplierOfPublicityMapList" type="ses.model.sms.SupplierPublicity" extends="BaseResultMap">
  </resultMap>
	
	<sql id="Base_Column_List">
		ID, LOGIN_NAME, MOBILE, PASSWORD, SUPPLIER_NAME, WEBSITE,
		FOUND_DATE, BUSINESS_TYPE,
		ADDRESS, BANK_NAME, BANK_ACCOUNT, POST_CODE,
		TAX_CERT, BILL_CERT, SECURITY_CERT,
		BREACH_CERT, LEGAL_NAME,
		LEGAL_ID_CARD, LEGAL_TELEPHONE, LEGAL_MOBILE, CONTACT_NAME,
		CONTACT_TELEPHONE, CONTACT_FAX, CONTACT_MOBILE, CONTACT_EMAIL,
		CONTACT_ADDRESS, CREDIT_CODE,
		REGIST_AUTHORITY, REGIST_FUND,
		BUSINESS_START_DATE, BUSINESS_END_DATE, BUSINESS_SCOPE,
		BUSINESS_ADDRESS, BUSINESS_POST_CODE, OVERSEAS_BRANCH, BRANCH_COUNTRY,
		BRANCH_ADDRESS,
		BRANCH_NAME, BRANCH_BUSINESS_SCOPE, SUPPLIER_TYPE_ID,
		SUPPLIER_STATUS, PROCUREMENT_DEP_ID, SUPPLIER_LEVEL,
		SUPPLIER_PLEDGE,
		SUPPLIER_REG_LIST, SUPPLIER_EXTRACTS_LIST, SUPPLIER_INSPECT_LIST,
		SUPPLIER_REVIEW_LIST, SUPPLIER_CHANGE_LIST, SUPPLIER_EXIT_LIST,
		CREATED_AT, UPDATED_AT,SUBMIT_AT,
		BUSINESS_CERT,DETAIL_ADDRESS,ARMY_BUSINESS_NAME,ARMY_BUSINESS_FAX,ARMY_BUSINESS_MOBILE,
		ARMY_BUSINESS_TELEPHONE,ARMY_BUSINESS_EMAIL,AUDIT_DATE,ARMY_BUSINESS_ADDRESS,CONCAT_PROVINCE,CONCAT_CITY,ARMY_BUSINESS_PROVINCE,
		ARMY_BUSINESS_CITY,IS_PROVISIONAL,DESCRIPTION,LEVEL_SCORE_PRODUCT,LEVEL_SCORE_SALES,LEVEL_SCORE_SERVICE,IS_ILLEGAL,PURCHASE_EXPERIENCE,
		IS_HAVING_CON_CERT, BUSINESS_NATURE, IS_PUBLISH, EXTRACT_ORGID, IS_DELETED, AUDITOR, AUDIT_TEMPORARY,AUDIT_OPINION_ATTACH,
		INSTORAGE_AT,RETURN_COUNT,LAST_RETURN_DATE
	</sql>
	<!--查询每个供应商所对应的所有类型 作者SBW -->
	<select id="selectSupplierTypes" parameterType="ses.model.sms.Supplier"
		resultType="java.lang.String">
		select wm_concat(t1.name) from(
		SELECT T2."NAME",T1.SUPPLIER_ID FROM
		"T_SES_SMS_SUPPLIER_TYPE_RELATE" t1
		LEFT JOIN
		T_SES_SMS_SUPPLIER_TYPE_RELATE T3 ON T1.ID = T3.SUPPLIER_ID
		LEFT JOIN
		T_SES_BMS_DICTIONARY_DATA t2 on T1.SUPPLIER_TYPE_ID=T2.CODE
		) t1
		where
		1=1
		<if test="id != null and id !=''">
			and T1.SUPPLIER_ID = #{id,jdbcType=VARCHAR}
		</if>
		GROUP BY T1.SUPPLIER_ID
	</select>

	<select id="findAllUsefulSupplier" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER
	</select>
 
	<select id="selectOne" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER WHERE id = #{id}
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER
		where ID = #{id}
	</select>

	<select id="selectByPrimaryKeyItem" parameterType="java.lang.String"
		resultMap="supplierTypeMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER
		where ID = #{id}
	</select>

	<select id="selectByProjectId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT T2.* FROM ( SELECT SUPPLIER_ID FROM
		"T_BSS_PPMS_SALE_TENDER"
		where PROJECT_ID =#{projectId} GROUP BY
		SUPPLIER_ID) T1 LEFT JOIN
		T_SES_SMS_SUPPLIER
		T2 ON T2.ID =T1.SUPPLIER_ID
		<!-- select * from( select SUPPLIER_ID,wm_concat(NAME) AS packageName from 
			(select T1.PROJECT_ID,T1.SUPPLIER_ID,T2.NAME from T_BSS_PPMS_SALE_TENDER 
			T1 LEFT JOIN T_BSS_PPMS_PACKAGE T2 on T1.PACKAGR_IDS = T2."ID" ) WHERE PROJECT_ID 
			= #{projectId} GROUP BY SUPPLIER_ID ) t1 LEFT JOIN T_SES_SMS_SUPPLIER T3 
			ON T3.ID=T1.SUPPLIER_ID where id is not null -->
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		T_SES_SMS_SUPPLIER
		where ID = #{id}
	</delete>
	
	<insert id="insert" parameterType="ses.model.sms.Supplier">
		insert into T_SES_SMS_SUPPLIER
		(ID, LOGIN_NAME, MOBILE,
		PASSWORD, SUPPLIER_NAME, WEBSITE,
		FOUND_DATE,
		BUSINESS_TYPE, ADDRESS,
		BANK_NAME, BANK_ACCOUNT, POST_CODE,
		TAX_CERT,
		BILL_CERT, SECURITY_CERT,
		BREACH_CERT, LEGAL_NAME, LEGAL_ID_CARD,
		LEGAL_TELEPHONE, LEGAL_MOBILE, CONTACT_NAME,
		CONTACT_TELEPHONE,
		CONTACT_FAX, CONTACT_MOBILE,
		CONTACT_EMAIL, CONTACT_ADDRESS,
		CREDIT_CODE,
		REGIST_AUTHORITY, REGIST_FUND, BUSINESS_START_DATE,
		BUSINESS_END_DATE, BUSINESS_SCOPE, BUSINESS_ADDRESS,
		BUSINESS_POST_CODE, OVERSEAS_BRANCH, BRANCH_COUNTRY,
		BRANCH_ADDRESS,
		BRANCH_NAME, BRANCH_BUSINESS_SCOPE,
		SUPPLIER_TYPE_ID, SUPPLIER_STATUS,
		PROCUREMENT_DEP_ID,
		SUPPLIER_LEVEL, SUPPLIER_PLEDGE, SUPPLIER_REG_LIST,
		SUPPLIER_EXTRACTS_LIST, SUPPLIER_INSPECT_LIST,
		SUPPLIER_REVIEW_LIST,
		SUPPLIER_CHANGE_LIST,
		SUPPLIER_EXIT_LIST, CREATED_AT, UPDATED_AT,
		SCORE, BUSINESS_CERT
		)
		values (#{id}, #{loginName}, #{mobile},
		#{password}, #{supplierName}, #{website},
		#{foundDate},
		#{businessType}, #{address},
		#{bankName}, #{bankAccount},
		#{postCode},
		#{taxCert}, #{billCert}, #{securityCert},
		#{breachCert}, #{legalName},
		#{legalIdCard},
		#{legalTelephone}, #{legalMobile}, #{contactName},
		#{contactTelephone}, #{contactFax}, #{contactMobile},
		#{contactEmail},
		#{contactAddress}, #{creditCode},
		#{registAuthority}, #{registFund},
		#{businessStartDate,jdbcType=TIMESTAMP},
		#{businessEndDate,jdbcType=TIMESTAMP}, #{businessScope},
		#{businessAddress},
		#{businessPostCode}, #{overseasBranch},
		#{branchCountry},
		#{branchAddress}, #{branchName},
		#{branchBusinessScope},
		#{supplierTypeId}, #{status},
		#{procurementDepId},
		#{supplierLevel}, #{supplierPledge},
		#{supplierRegList},
		#{supplierExtractsList}, #{supplierInspectList},
		#{supplierReviewList}, #{supplierChangeList},
		#{supplierExitList},
		#{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},
		#{score}, #{businessCert}
		)
	</insert>
	<insert id="insertSelective" parameterType="ses.model.sms.Supplier">
		insert into T_SES_SMS_SUPPLIER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="loginName != null">
				LOGIN_NAME,
			</if>
			<if test="businessNature != null">
				BUSINESS_NATURE,
			</if>
			<if test="isHavingConCert != null">
				IS_HAVING_CON_CERT,
			</if>
			<if test="description != null">
				DESCRIPTION,
			</if>
			<if test="isIllegal != null">
				IS_ILLEGAL,
			</if>
			<if test="purchaseExperience != null">
				PURCHASE_EXPERIENCE,
			</if>
			<if test="mobile != null">
				MOBILE,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="supplierName != null">
				SUPPLIER_NAME,
			</if>
			<if test="website != null">
				WEBSITE,
			</if>
			<if test="foundDate != null">
				FOUND_DATE,
			</if>
			<if test="businessType != null">
				BUSINESS_TYPE,
			</if>
			<if test="address != null">
				ADDRESS,
			</if>
			<if test="bankName != null">
				BANK_NAME,
			</if>
			<if test="bankAccount != null">
				BANK_ACCOUNT,
			</if>
			<if test="postCode != null">
				POST_CODE,
			</if>
			<if test="taxCert != null">
				TAX_CERT,
			</if>
			<if test="billCert != null">
				BILL_CERT,
			</if>
			<if test="securityCert != null">
				SECURITY_CERT,
			</if>
			<if test="breachCert != null">
				BREACH_CERT,
			</if>
			<if test="legalName != null">
				LEGAL_NAME,
			</if>
			<if test="legalIdCard != null">
				LEGAL_ID_CARD,
			</if>
			<if test="legalTelephone != null">
				LEGAL_TELEPHONE,
			</if>
			<if test="legalMobile != null">
				LEGAL_MOBILE,
			</if>
			<if test="contactName != null">
				CONTACT_NAME,
			</if>
			<if test="contactTelephone != null">
				CONTACT_TELEPHONE,
			</if>
			<if test="contactFax != null">
				CONTACT_FAX,
			</if>
			<if test="contactMobile != null">
				CONTACT_MOBILE,
			</if>
			<if test="contactEmail != null">
				CONTACT_EMAIL,
			</if>
			<if test="contactAddress != null">
				CONTACT_ADDRESS,
			</if>
			<if test="creditCode != null">
				CREDIT_CODE,
			</if>
			<if test="registAuthority != null">
				REGIST_AUTHORITY,
			</if>
			<if test="registFund != null">
				REGIST_FUND,
			</if>
			<if test="businessStartDate != null">
				BUSINESS_START_DATE,
			</if>
			<if test="businessEndDate != null">
				BUSINESS_END_DATE,
			</if>
			<if test="businessScope != null">
				BUSINESS_SCOPE,
			</if>
			<if test="businessAddress != null">
				BUSINESS_ADDRESS,
			</if>
			<if test="businessPostCode != null">
				BUSINESS_POST_CODE,
			</if>
			<if test="overseasBranch != null">
				OVERSEAS_BRANCH,
			</if>
			<if test="branchCountry != null">
				BRANCH_COUNTRY,
			</if>
			<if test="branchAddress != null">
				BRANCH_ADDRESS,
			</if>
			<if test="branchName != null">
				BRANCH_NAME,
			</if>
			<if test="branchBusinessScope != null">
				BRANCH_BUSINESS_SCOPE,
			</if>
			<if test="supplierTypeId != null">
				SUPPLIER_TYPE_ID,
			</if>
			<if test="status != null">
				SUPPLIER_STATUS,
			</if>
			<if test="procurementDepId != null">
				PROCUREMENT_DEP_ID,
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL,
			</if>
			<if test="supplierPledge != null">
				SUPPLIER_PLEDGE,
			</if>
			<if test="supplierRegList != null">
				SUPPLIER_REG_LIST,
			</if>
			<if test="supplierExtractsList != null">
				SUPPLIER_EXTRACTS_LIST,
			</if>
			<if test="supplierInspectList != null">
				SUPPLIER_INSPECT_LIST,
			</if>
			<if test="supplierReviewList != null">
				SUPPLIER_REVIEW_LIST,
			</if>
			<if test="supplierChangeList != null">
				SUPPLIER_CHANGE_LIST,
			</if>
			<if test="supplierExitList != null">
				SUPPLIER_EXIT_LIST,
			</if>
			<if test="createdAt != null">
				CREATED_AT,
			</if>
			<if test="submitAt != null">
				SUBMIT_AT,
			</if>
			<if test="updatedAt != null">
				UPDATED_AT,
			</if>
			<if test="score != null">
				SCORE,
			</if>
			<if test="businessCert != null">
				BUSINESS_CERT,
			</if>
			<if test="detailAddress != null">
				DETAIL_ADDRESS,
			</if>

			<if test="armyBusinessName != null">
				ARMY_BUSINESS_NAME,
			</if>
			<if test="armyBusinessFax != null">
				ARMY_BUSINESS_FAX,
			</if>
			<if test="armyBuinessMobile != null">
				ARMY_BUSINESS_MOBILE,
			</if>
			<if test="armyBuinessTelephone != null">
				ARMY_BUSINESS_TELEPHONE,
			</if>
			<if test="armyBuinessEmail != null">
				ARMY_BUSINESS_EMAIL,
			</if>
			<if test="armyBuinessAddress != null">
				ARMY_BUSINESS_ADDRESS,
			</if>
			<if test="auditDate != null">
				AUDIT_DATE,
			</if>
			<if test="concatProvince != null">
				CONCAT_PROVINCE,
			</if>
			<if test="concatCity != null">
				CONCAT_CITY,
			</if>
			<if test="armyBuinessProvince != null">
				ARMY_BUSINESS_PROVINCE,
			</if>
			<if test="armyBuinessCity != null">
				ARMY_BUSINESS_CITY,
			</if>
			<if test="isProvisional != null">
				IS_PROVISIONAL,
			</if>
			<if test="auditor != null">
        AUDITOR,
			</if>
			<if test="auditTemporary != null">
        AUDIT_TEMPORARY,
			</if>
			<if test="auditOpinionAttach != null">
        AUDIT_OPINION_ATTACH,
			</if>
			<if test="instorageAt != null">
        INSTORAGE_AT,
			</if>
			<if test="returnCount != null">
        RETURN_COUNT,
			</if>
			<if test="lastReturnDate != null">
        LAST_RETURN_DATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="loginName != null">
				#{loginName},
			</if>
			<if test="businessNature != null">
				#{businessNature},
			</if>
			<if test="isHavingConCert != null">
				#{isHavingConCert},
			</if>
			<if test="description != null">
				#{description},
			</if>
			<if test="isIllegal != null">
				#{isIllegal},
			</if>
			<if test="purchaseExperience != null">
				#{purchaseExperience},
			</if>
			<if test="mobile != null">
				#{mobile},
			</if>
			<if test="password != null">
				#{password},
			</if>
			<if test="supplierName != null">
				#{supplierName},
			</if>
			<if test="website != null">
				#{website},
			</if>
			<if test="foundDate != null">
				#{foundDate,jdbcType=TIMESTAMP},
			</if>
			<if test="businessType != null">
				#{businessType},
			</if>
			<if test="address != null">
				#{address},
			</if>
			<if test="bankName != null">
				#{bankName},
			</if>
			<if test="bankAccount != null">
				#{bankAccount},
			</if>
			<if test="postCode != null">
				#{postCode},
			</if>
			<if test="taxCert != null">
				#{taxCert},
			</if>
			<if test="billCert != null">
				#{billCert},
			</if>
			<if test="securityCert != null">
				#{securityCert},
			</if>
			<if test="breachCert != null">
				#{breachCert},
			</if>
			<if test="legalName != null">
				#{legalName},
			</if>
			<if test="legalIdCard != null">
				#{legalIdCard},
			</if>
			<if test="legalTelephone != null">
				#{legalTelephone},
			</if>
			<if test="legalMobile != null">
				#{legalMobile},
			</if>
			<if test="contactName != null">
				#{contactName},
			</if>
			<if test="contactTelephone != null">
				#{contactTelephone},
			</if>
			<if test="contactFax != null">
				#{contactFax},
			</if>
			<if test="contactMobile != null">
				#{contactMobile},
			</if>
			<if test="contactEmail != null">
				#{contactEmail},
			</if>
			<if test="contactAddress != null">
				#{contactAddress},
			</if>
			<if test="creditCode != null">
				#{creditCode},
			</if>
			<if test="registAuthority != null">
				#{registAuthority},
			</if>
			<if test="registFund != null">
				#{registFund},
			</if>
			<if test="businessStartDate != null">
				#{businessStartDate,jdbcType=TIMESTAMP},
			</if>
			<if test="businessEndDate != null">
				#{businessEndDate,jdbcType=TIMESTAMP},
			</if>
			<if test="businessScope != null">
				#{businessScope},
			</if>
			<if test="businessAddress != null">
				#{businessAddress},
			</if>
			<if test="businessPostCode != null">
				#{businessPostCode},
			</if>
			<if test="overseasBranch != null">
				#{overseasBranch},
			</if>
			<if test="branchCountry != null">
				#{branchCountry},
			</if>
			<if test="branchAddress != null">
				#{branchAddress},
			</if>
			<if test="branchName != null">
				#{branchName},
			</if>
			<if test="branchBusinessScope != null">
				#{branchBusinessScope},
			</if>
			<if test="supplierTypeId != null">
				#{supplierTypeId},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="procurementDepId != null">
				#{procurementDepId},
			</if>
			<if test="supplierLevel != null">
				#{supplierLevel},
			</if>
			<if test="supplierPledge != null">
				#{supplierPledge},
			</if>
			<if test="supplierRegList != null">
				#{supplierRegList},
			</if>
			<if test="supplierExtractsList != null">
				#{supplierExtractsList},
			</if>
			<if test="supplierInspectList != null">
				#{supplierInspectList},
			</if>
			<if test="supplierReviewList != null">
				#{supplierReviewList},
			</if>
			<if test="supplierChangeList != null">
				#{supplierChangeList},
			</if>
			<if test="supplierExitList != null">
				#{supplierExitList},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="submitAt != null">
				#{submitAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="score != null">
				#{score},
			</if>
			<if test="businessCert != null">
				#{businessCert},
			</if>
			<if test="detailAddress != null">
				#{detailAddress},
			</if>
			<if test="armyBusinessName != null">
				#{armyBusinessName},
			</if>
			<if test="armyBusinessFax != null">
				#{armyBusinessFax},
			</if>
			<if test="armyBuinessMobile != null">
				#{armyBuinessMobile},
			</if>
			<if test="armyBuinessTelephone != null">
				#{armyBuinessTelephone},
			</if>
			<if test="armyBuinessEmail != null">
				#{armyBuinessEmail},
			</if>
			<if test="armyBuinessAddress != null">
				#{armyBuinessAddress},
			</if>
			<if test="auditDate != null">
				#{auditDate,jdbcType=TIMESTAMP},
			</if>
			<if test="concatProvince != null">
				#{concatProvince},
			</if>
			<if test="concatCity != null">
				#{concatCity},
			</if>
			<if test="armyBuinessProvince != null">
				#{armyBuinessProvince},
			</if>
			<if test="armyBuinessCity != null">
				#{armyBuinessCity},
			</if>
			<if test="isProvisional != null">
				#{isProvisional},
			</if>
      <if test="auditor != null">
        #{auditor},
      </if>
      <if test="auditTemporary != null">
        #{auditTemporary},
      </if>
      <if test="auditOpinionAttach != null">
        #{auditOpinionAttach},
      </if>
      <if test="instorageAt != null">
        #{instorageAt},
      </if>
      <if test="returnCount != null">
        #{returnCount},
			</if>
			<if test="lastReturnDate != null">
        #{lastReturnDate},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER
		<set>
			<if test="loginName != null">
				LOGIN_NAME = #{loginName},
			</if>
			<if test="isHavingConCert != null">
				IS_HAVING_CON_CERT = #{isHavingConCert},
			</if>
			<if test="businessNature != null">
				BUSINESS_NATURE = #{businessNature},
			</if>
			<if test="levelScoreProduct != null">
				LEVEL_SCORE_PRODUCT = #{levelScoreProduct},
			</if>
			<if test="levelScoreSales != null">
				LEVEL_SCORE_SALES = #{levelScoreSales},
			</if>
			<if test="levelScoreService != null">
				LEVEL_SCORE_SERVICE = #{levelScoreService},
			</if>
			<if test="description != null">
				DESCRIPTION = #{description},
			</if>
			<if test="isIllegal != null">
				IS_ILLEGAL = #{isIllegal},
			</if>
			<if test="purchaseExperience != null">
				PURCHASE_EXPERIENCE = #{purchaseExperience},
			</if>
			<if test="mobile != null">
				MOBILE = #{mobile},
			</if>
			<if test="password != null">
				PASSWORD = #{password},
			</if>
			<if test="supplierName != null">
				SUPPLIER_NAME = #{supplierName},
			</if>
			<if test="website != null">
				WEBSITE = #{website},
			</if>
			<if test="foundDate != null">
				FOUND_DATE = #{foundDate,jdbcType=TIMESTAMP},
			</if>
			<if test="businessType != null">
				BUSINESS_TYPE = #{businessType},
			</if>
			<if test="address != null">
				ADDRESS = #{address},
			</if>
			<if test="bankName != null">
				BANK_NAME = #{bankName},
			</if>
			<if test="bankAccount != null">
				BANK_ACCOUNT = #{bankAccount},
			</if>
			<if test="postCode != null">
				POST_CODE = #{postCode},
			</if>
			<if test="taxCert != null">
				TAX_CERT = #{taxCert},
			</if>
			<if test="billCert != null">
				BILL_CERT = #{billCert},
			</if>
			<if test="securityCert != null">
				SECURITY_CERT = #{securityCert},
			</if>
			<if test="breachCert != null">
				BREACH_CERT = #{breachCert},
			</if>
			<if test="legalName != null">
				LEGAL_NAME = #{legalName},
			</if>
			<if test="legalIdCard != null">
				LEGAL_ID_CARD = #{legalIdCard},
			</if>
			<if test="legalTelephone != null">
				LEGAL_TELEPHONE = #{legalTelephone},
			</if>
			<if test="legalMobile != null">
				LEGAL_MOBILE = #{legalMobile},
			</if>
			<if test="contactName != null">
				CONTACT_NAME = #{contactName},
			</if>
			<if test="contactTelephone != null">
				CONTACT_TELEPHONE = #{contactTelephone},
			</if>
			<if test="contactFax != null">
				CONTACT_FAX = #{contactFax},
			</if>
			<if test="contactMobile != null">
				CONTACT_MOBILE = #{contactMobile},
			</if>
			<if test="contactEmail != null">
				CONTACT_EMAIL = #{contactEmail},
			</if>
			<if test="contactAddress != null">
				CONTACT_ADDRESS = #{contactAddress},
			</if>
			<if test="creditCode != null">
				CREDIT_CODE = #{creditCode},
			</if>
			<if test="registAuthority != null">
				REGIST_AUTHORITY = #{registAuthority},
			</if>
			<if test="registFund != null">
				REGIST_FUND = #{registFund},
			</if>
			<if test="businessStartDate != null">
				BUSINESS_START_DATE =
				#{businessStartDate,jdbcType=TIMESTAMP},
			</if>
			<if test="businessStartDate == null">
				BUSINESS_START_DATE = '',
			</if>
			
			<if test="businessEndDate != null">
				BUSINESS_END_DATE =
				#{businessEndDate,jdbcType=TIMESTAMP},
			</if>
			<if test="businessScope != null">
				BUSINESS_SCOPE = #{businessScope},
			</if>
			<if test="businessAddress != null">
				BUSINESS_ADDRESS = #{businessAddress},
			</if>
			<if test="businessPostCode != null">
				BUSINESS_POST_CODE = #{businessPostCode},
			</if>
			<if test="overseasBranch != null">
				OVERSEAS_BRANCH = #{overseasBranch},
			</if>
			<if test="branchCountry != null">
				BRANCH_COUNTRY = #{branchCountry},
			</if>
			<if test="branchAddress != null">
				BRANCH_ADDRESS = #{branchAddress},
			</if>
			<if test="branchName != null">
				BRANCH_NAME = #{branchName},
			</if>
			<if test="branchBusinessScope != null">
				BRANCH_BUSINESS_SCOPE = #{branchBusinessScope},
			</if>
			<if test="supplierTypeId != null">
				SUPPLIER_TYPE_ID = #{supplierTypeId},
			</if>
			<if test="procurementDepId != null">
				PROCUREMENT_DEP_ID = #{procurementDepId},
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL = #{supplierLevel},
			</if>
			<if test="supplierPledge != null">
				SUPPLIER_PLEDGE = #{supplierPledge},
			</if>
			<if test="supplierRegList != null">
				SUPPLIER_REG_LIST = #{supplierRegList},
			</if>
			<if test="supplierExtractsList != null">
				SUPPLIER_EXTRACTS_LIST = #{supplierExtractsList},
			</if>
			<if test="supplierInspectList != null">
				SUPPLIER_INSPECT_LIST = #{supplierInspectList},
			</if>
			<if test="supplierReviewList != null">
				SUPPLIER_REVIEW_LIST = #{supplierReviewList},
			</if>
			<if test="supplierChangeList != null">
				SUPPLIER_CHANGE_LIST = #{supplierChangeList},
			</if>
			<if test="supplierExitList != null">
				SUPPLIER_EXIT_LIST = #{supplierExitList},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="submitAt != null">
				SUBMIT_AT = #{submitAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="businessCert != null">
				BUSINESS_CERT = #{businessCert},
			</if>
			<if test="status != null">
				SUPPLIER_STATUS = #{status},
			</if>
			<if test="detailAddress != null">
				DETAIL_ADDRESS=#{detailAddress},
			</if>
			<if test="armyBusinessName != null">
				ARMY_BUSINESS_NAME=#{armyBusinessName},
			</if>
			<if test="armyBusinessFax != null">
				ARMY_BUSINESS_FAX=#{armyBusinessFax},
			</if>
			<if test="armyBuinessMobile != null">
				ARMY_BUSINESS_MOBILE=#{armyBuinessMobile},
			</if>
			<if test="armyBuinessTelephone != null">
				ARMY_BUSINESS_TELEPHONE=#{armyBuinessTelephone},
			</if>
			<if test="armyBuinessEmail != null">
				ARMY_BUSINESS_EMAIL=#{armyBuinessEmail},
			</if>
			<if test="armyBuinessAddress != null">
				ARMY_BUSINESS_ADDRESS=#{armyBuinessAddress},
			</if>
			<if test="auditDate != null">
				AUDIT_DATE=#{auditDate},
			</if>
			<if test="concatProvince != null">
				CONCAT_PROVINCE=#{concatProvince},
			</if>
			<if test="concatCity != null">
				CONCAT_CITY=#{concatCity},
			</if>
			<if test="armyBuinessProvince != null">
				ARMY_BUSINESS_PROVINCE=#{armyBuinessProvince},
			</if>
			<if test="armyBuinessCity != null">
				ARMY_BUSINESS_CITY=#{armyBuinessCity},
			</if>
      <if test="isDeleted != null">
        IS_DELETED=#{isDeleted},
      </if>
      <if test="auditor != null">
        AUDITOR=#{auditor},
      </if>
      <if test="auditTemporary != null">
        AUDIT_TEMPORARY=#{auditTemporary},
      </if>
      <if test="auditOpinionAttach != null">
        AUDIT_OPINION_ATTACH=#{auditOpinionAttach},
      </if>
      <if test="instorageAt != null">
        INSTORAGE_AT=#{instorageAt},
      </if>
      <if test="returnCount != null">
      	RETURN_COUNT=#{returnCount},
			</if>
			<if test="lastReturnDate != null">
				LAST_RETURN_DATE=#{lastReturnDate},
			</if>
		</set>
		where ID = #{id}
	</update>
	
  <!--退回修改导入外网字段-->
  <update id="updateByPrimaryKeySelectiveOfBack" parameterType="ses.model.sms.Supplier">
      update T_SES_SMS_SUPPLIER
      <set>
					<if test="auditDate != null">
					    AUDIT_DATE = #{auditDate},
					</if>
					<if test="status != null">
					    SUPPLIER_STATUS = #{status},
					</if>
					<if test="auditor != null">
					    AUDITOR = #{auditor},
					</if>
					<if test="auditTemporary != null">
					    AUDIT_TEMPORARY = #{auditTemporary},
					</if>
					<if test="returnCount != null">
							RETURN_COUNT = #{returnCount},
					</if>
					<if test="lastReturnDate != null">
							LAST_RETURN_DATE = #{lastReturnDate},
					</if>
      </set>
      where ID = #{id}
  </update>

  <update id="updateByPrimaryKey" parameterType="ses.model.sms.Supplier">
		update
		T_SES_SMS_SUPPLIER
		set LOGIN_NAME = #{loginName},
		MOBILE = #{mobile},
		PASSWORD = #{password},
		SUPPLIER_NAME = #{supplierName},
		WEBSITE =
		#{website},
		FOUND_DATE = #{foundDate},
		BUSINESS_TYPE = #{businessType},
		ADDRESS = #{address},
		BANK_NAME = #{bankName},
		BANK_ACCOUNT =
		#{bankAccount},
		POST_CODE = #{postCode},
		TAX_CERT = #{taxCert},
		BILL_CERT = #{billCert},
		SECURITY_CERT = #{securityCert},
		BREACH_CERT =
		#{breachCert},
		LEGAL_NAME = #{legalName},
		LEGAL_ID_CARD =
		#{legalIdCard},
		LEGAL_TELEPHONE = #{legalTelephone},
		LEGAL_MOBILE =
		#{legalMobile},
		CONTACT_NAME = #{contactName},
		CONTACT_TELEPHONE =
		#{contactTelephone},
		CONTACT_FAX = #{contactFax},
		CONTACT_MOBILE =
		#{contactMobile},
		CONTACT_EMAIL = #{contactEmail},
		CONTACT_ADDRESS =
		#{contactAddress},
		CREDIT_CODE = #{creditCode},
		REGIST_AUTHORITY =
		#{registAuthority},
		REGIST_FUND = #{registFund},
		BUSINESS_START_DATE =
		#{businessStartDate},
		BUSINESS_END_DATE = #{businessEndDate},
		BUSINESS_SCOPE =
		#{businessScope},
		BUSINESS_ADDRESS =
		#{businessAddress},
		BUSINESS_POST_CODE = #{businessPostCode},
		OVERSEAS_BRANCH = #{overseasBranch},
		BRANCH_COUNTRY = #{branchCountry},
		BRANCH_ADDRESS = #{branchAddress},
		BRANCH_NAME = #{branchName},
		BRANCH_BUSINESS_SCOPE = #{branchBusinessScope},
		SUPPLIER_TYPE_ID =
		#{supplierTypeId},
		SUPPLIER_STATUS = #{status},
		PROCUREMENT_DEP_ID =
		#{procurementDepId},
		SUPPLIER_LEVEL = #{supplierLevel},
		SUPPLIER_PLEDGE
		= #{supplierPledge},
		SUPPLIER_REG_LIST = #{supplierRegList},
		SUPPLIER_EXTRACTS_LIST = #{supplierExtractsList},
		SUPPLIER_INSPECT_LIST = #{supplierInspectList},
		SUPPLIER_REVIEW_LIST =
		#{supplierReviewList},
		SUPPLIER_CHANGE_LIST = #{supplierChangeList},
		SUPPLIER_EXIT_LIST = #{supplierExitList},
		CREATED_AT =
		#{createdAt,jdbcType=TIMESTAMP},
		UPDATED_AT =
		#{updatedAt,jdbcType=TIMESTAMP},
		BUSINESS_CERT = #{businessCert},
		DETAIL_ADDRESS=#{detailAddress}
		where ID =
		#{id}
	</update>

	<!-- 查询最近插入的ID-->
	<select id="selectLastInsertId" resultType="java.lang.String">
		select ID from
		T_SES_SMS_SUPPLIER t1 where t1.rowid = (select max(rowid) from
		T_SES_SMS_SUPPLIER t2)
	</select>

	<!-- 查询供应商全部信息 -->
	<select id="getSupplier" parameterType="java.lang.String"
		resultMap="supplierMap">
		select * from T_SES_SMS_SUPPLIER where ID = #{id}
	</select>
	<select id="getAllSupplier" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!--select * from T_SES_SMS_SUPPLIER where 1=1如果出错 这是之前的代码2016/11/22 -->
		select * from(
		select t3.name||T2."NAME" as addressName,T1.* from
		T_SES_SMS_SUPPLIER T1
		LEFT JOIN T_SES_BMS_AREA T2 ON T1.ADDRESS=T2.ID
		LEFT JOIN
		T_SES_BMS_AREA T3 ON T2.PARENT_ID=T3.ID )
		where 1=1 and
		SUPPLIER_STATUS=5
		<if test="status != null and status !='' ">
			and SUPPLIER_STATUS = #{status}
		</if>
		<if test="supplierName != null and supplierName !=''">
			and SUPPLIER_NAME like CONCAT(CONCAT('%', #{supplierName}), '%')
		</if>
		<if test="startDate != null">
			AND CREATED_AT &gt;= #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null">
			AND CREATED_AT &lt;= #{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="contactName != null and contactName != ''">
			AND CONTACT_NAME = #{contactName}
		</if>
		<if test="status != null">
			and SUPPLIER_STATUS = #{status}
		</if>
		<if test="address != null and address !=''">
			and ADDRESS like CONCAT(CONCAT('%', #{address}), '%')
		</if>
		<if test="stsupplierIds != null">
			<foreach collection="stsupplierIds" item="id" open="and ID not in ("
				close=")" separator=",">
				#{id}
			</foreach>
		</if>
		ORDER BY FOUND_DATE DESC
	</select>
	<update id="updateSupplierProcurementDep" parameterType="ses.model.sms.Supplier">
		update
		T_SES_SMS_SUPPLIER set PROCUREMENT_DEP_ID = #{procurementDepId} where
		ID = #{id}
	</update>

	<sql id="ifCondition">
		<if test="id != null and id!=''">
			and tt1.ID = #{id}
		</if>
		<if test="supplierName != null and supplierName !=''">
			and tt1.SUPPLIER_NAME like CONCAT(CONCAT('%', #{supplierName}), '%')
		</if>
		<if test="businessType !=null and businessType !=''">
			and tt1.BUSINESS_TYPE =#{businessType}
		</if>
		<if test="sign == 1">
			and (tt1.SUPPLIER_STATUS = 0 or tt1.SUPPLIER_STATUS = 1 or
			tt1.SUPPLIER_STATUS = 2 or tt1.SUPPLIER_STATUS = 3)
		</if>
		<if test="sign == 2">
			and (tt1.SUPPLIER_STATUS = 4 or tt1.SUPPLIER_STATUS = 5 or
			tt1.SUPPLIER_STATUS = 6)
		</if>
		<if test="sign == 3">
			and (tt1.SUPPLIER_STATUS = 5 or tt1.SUPPLIER_STATUS = 7 or
			tt1.SUPPLIER_STATUS = 8)
		</if>
		<if test="status != null">
			and tt1.SUPPLIER_STATUS = #{status}
		</if>
		<if test="startDate != null">
			and tt1.CREATED_AT &gt;= #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null">
			and tt1.CREATED_AT &lt;= #{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="contactName != null and contactName != ''">
			and tt1.CONTACT_NAME = #{contactName}
		</if>
		<if test="address != null and address !=''">
			and tt1.ADDRESS like CONCAT(CONCAT('%', #{address}), '%')
		</if>
		<if test="startScore != null and startScore !=''">
			and tt1.SCORE &gt; #{startScore}
		</if>
		<if test="endScore != null and endScore !=''">
			and NVL(tt1.SCORE,0) &lt; #{endScore}
		</if>
		<if test="item != null">
			<foreach collection="item" item="id" open="and tt1.id not in ("
				close=")" separator=",">
				#{id}
			</foreach>
		</if>
		<if test="sign == 1">
			ORDER BY
			decode(tt1.SUPPLIER_STATUS,'0',1,'1',2,'2',3,'3',4)
		</if>
		<if test="sign == 2">
			ORDER BY decode(tt1.SUPPLIER_STATUS,'4',1,'5',2,'6',3)
		</if>
		<if test="sign == 3">
			ORDER BY decode(tt1.SUPPLIER_STATUS,'5',1,'7',2,'8',3)
		</if>
	</sql>

	<!-- 发售标书中登记库内的供应商 -->
	<select id="selectSaleTenderSupplier" parameterType="ses.model.sms.Supplier"
    resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER where IS_DELETED=0 and (((SUPPLIER_STATUS = 1 or SUPPLIER_STATUS = 5 or SUPPLIER_STATUS = 7) and IS_PROVISIONAL = '0') or (SUPPLIER_STATUS=5 and IS_PROVISIONAL = '1'))
		<if test="supplierName != null and supplierName !=''">
			and SUPPLIER_NAME like CONCAT(CONCAT('%', #{supplierName}), '%')
		</if>
		<if test="isProvisional != null">
		  <if test="isProvisional == 1">
		     and IS_PROVISIONAL=#{isProvisional}
		  </if> 
			<if test="isProvisional == 2">
		     and SUPPLIER_STATUS=1
		     and IS_PROVISIONAL='0'
		  </if> 
		  <if test="isProvisional !=1 and isProvisional !=2 ">
		     and SUPPLIER_STATUS=#{isProvisional}
		     and IS_PROVISIONAL='0'
		  </if>
		</if>
		<if test="stsupplierIds != null">
			<foreach collection="stsupplierIds" item="id" open="and ID not in ("
				close=")" separator=",">
				#{id}
			</foreach>
		</if>
	</select>
	<!-- 根据审核状态获取条数 -->
	<select id="getCount" parameterType="ses.model.sms.Supplier"
		resultType="java.lang.Integer">
		select count(*) from T_SES_SMS_SUPPLIER tt1
		where 1=1
		<include refid="ifCondition" />
	</select>

	<!-- 查询供应商及条件查询 -->
	<select id="findSupplier" parameterType="ses.model.sms.Supplier"
		resultMap="findSupplierMap">
		select *
		from T_SES_SMS_SUPPLIER tt1
		where IS_PROVISIONAL = 0
		<include refid="ifCondition" />
		order by SCORE DESC
	</select>

	<resultMap type="ses.model.sms.Supplier" id="findSupplierMap"
		extends="BaseResultMap">
		<collection property="listSupplierTypeRelates" ofType="ses.model.sms.SupplierTypeRelate">
			<result column="ID_" property="id" />
			<result column="NAME_" property="supplierTypeName" />
		</collection>
	</resultMap>

	<!--供应商审核-查询供应商 -->
  <select id="findSupplierAll" parameterType="ses.model.sms.Supplier" resultMap="BaseResultMap">
     SELECT 
       supplier.*
     FROM
      (SELECT
        T1.ID,
        T1.SUPPLIER_NAME,
        T1.MOBILE,
        T1.BUSINESS_NATURE,
        T1.AUDIT_DATE,
        T1.SUBMIT_AT,
        T1.AUDITOR,
        T1.IS_PUBLISH,
        T1.SUPPLIER_STATUS,
        T1.AUDIT_TEMPORARY,
        T1.PROCUREMENT_DEP_ID,
        wm_concat (T4.NAME || t3.NAME) AS addressName
      FROM
        t_ses_sms_supplier T1
      LEFT JOIN T_SES_SMS_SUPPLIER_ADDRESS T2 ON T1.ID = T2.SUPPLIER_ID
      LEFT JOIN T_SES_BMS_AREA T3 ON T3.ID = T2.ADDRESS
      LEFT JOIN T_SES_BMS_AREA T4 ON T3.PARENT_ID = T4.ID
      WHERE
        1=1
      <if test="sign == 1">
        and (SUPPLIER_STATUS = 0 or SUPPLIER_STATUS = 1 or SUPPLIER_STATUS = 2 or SUPPLIER_STATUS = 3 or SUPPLIER_STATUS = -2 or SUPPLIER_STATUS = -3 or SUPPLIER_STATUS = 9)
        <if test="procurementDepId != null">
          and PROCUREMENT_DEP_ID = #{procurementDepId}
        </if>
      </if>
      <if test="sign == 2">
        and (SUPPLIER_STATUS = 1 or SUPPLIER_STATUS = 5 or
        SUPPLIER_STATUS = 6 or SUPPLIER_STATUS = -4)
        <if test="extractOrgid != null">
          and EXTRACT_ORGID = #{extractOrgid}
        </if>
      </if>
      <if test="sign == 3">
        and (SUPPLIER_STATUS = 5 or SUPPLIER_STATUS = 7 or
        SUPPLIER_STATUS = 8 or SUPPLIER_STATUS = -5)
        <if test="extractOrgid != null">
          and EXTRACT_ORGID = #{extractOrgid}
        </if>
      </if>
      <if test="supplierName != null and supplierName != ''">
        AND SUPPLIER_NAME LIKE CONCAT(CONCAT('%',#{supplierName}), '%')
      </if>
      <if test="status != null">
        AND SUPPLIER_STATUS = #{status}
      </if>
      <if test="auditTemporary != null">
        AND AUDIT_TEMPORARY = #{auditTemporary}
      </if>
      <if test="businessType != null and businessType != ''">
        AND BUSINESS_TYPE = #{businessType}
      </if>
      <if test="businessNature != null and businessNature != ''">
        AND BUSINESS_NATURE = #{businessNature}
      </if>
      <if test="auditDate != null and auditDate != ''">
        AND to_char(AUDIT_DATE,'yyyy-mm-dd') = to_char(#{auditDate},'yyyy-mm-dd')
      </if>
      AND T1.IS_PROVISIONAL = '0' AND T1.IS_DELETED = '0'
      GROUP BY
        T1. ID,
        T1.SUPPLIER_NAME,
        T1.MOBILE,
        T1.BUSINESS_NATURE,
        T1.AUDIT_DATE,
        T1.SUBMIT_AT,
        T1.AUDITOR,
        T1.IS_PUBLISH,
        T1.SUPPLIER_STATUS,
        T1.AUDIT_TEMPORARY,
        T1.PROCUREMENT_DEP_ID
      <!-- ORDER BY SUPPLIER_STATUS ASC, UPDATED_AT DESC -->
      <!-- ORDER BY AUDIT_DATE DESC NULLS LAST -->
      ORDER BY SUBMIT_AT) supplier
      WHERE
      1=1
      <if test="addressName != null and addressName != ''">
         AND supplier.addressName LIKE CONCAT(CONCAT('%', #{addressName}), '%')
      </if>
  </select>

	<!-- 全部/入库供应商查询 -->
	<select id="querySupplierList" 
		parameterType="ses.model.sms.Supplier" resultMap="BaseResultMapSimple">
		SELECT
		subQ.typeId,
		sup.ID,
		sup.SUPPLIER_NAME,
		sup.CREATED_AT,
		sup.SUBMIT_AT,
		sup.INSTORAGE_AT,
		sup.AUDIT_DATE,
		sup.AUDITOR,
		sup.SUPPLIER_STATUS,
		sup.AUDIT_TEMPORARY,
		sup.BUSINESS_NATURE,
		sup.IS_PROVISIONAL,
		sup.CREDIT_CODE,
		sup.CONTACT_NAME,
		sup.CONTACT_ADDRESS,
		sup.MOBILE,
		sup.CONTACT_MOBILE,
		sup.ARMY_BUSINESS_NAME,
		sup.ARMY_BUSINESS_MOBILE,
		sup.ARMY_BUSINESS_TELEPHONE,
		sup.RETURN_COUNT,
		sup.LAST_RETURN_DATE,
		org.SHORT_NAME AS ORG_NAME,
		dep.SUPPLIER_PHONE AS DEP_PHONE,
		<!--省 -->
		pArea.ID AS PARENT_ADDRESS,
		<!--区 -->
		area.ID AS ADDRESS,
		<!--全部 -->
		pArea.NAME || ' ' || area.NAME AS AREA_NAME
		FROM
		(SELECT
		ID,
		wm_concat(DISTINCT(SUPPLIER_TYPE_ID)) AS typeId
		FROM
		(
		<choose>
			<when test="queryCategory != null and queryCategory != ''">
				SELECT DISTINCT SUP.ID, SR.SUPPLIER_TYPE_ID
				FROM T_SES_SMS_SUPPLIER SUP
				LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE SR
				ON SUP.ID = SR.SUPPLIER_ID
				LEFT JOIN T_SES_SMS_SUPPLIER_ITEM ITEM
				ON SR.SUPPLIER_ID = ITEM.SUPPLIER_ID
				LEFT JOIN T_SES_SMS_SUPPLIER_ITEM_LEVEL SL
				ON ITEM.SUPPLIER_ID = SL.SUPPLIER_ID
				AND ITEM.SUPPLIER_TYPE_RELATE_ID = SL.SUPPLIER_TYPE_ID
				AND ITEM.CATEGORY_ID = SL.CATEGORY_ID
				WHERE INSTR(#{supplierTypeIds}, ITEM.SUPPLIER_TYPE_RELATE_ID) > 0
				AND ITEM.CATEGORY_ID IN
				<foreach collection="queryCategorys" item="categoryId" index="index"
					open="(" separator="," close=")">
					#{categoryId}
				</foreach>
				<!--供应商等级查询条件 -->
				<if test="supplierLevel != null and supplierLevel != ''">
					AND SL.SUPPLIER_LEVEL = #{supplierLevel}
					AND SL.SUPPLIER_TYPE_ID = #{supplierTypeIds}
				</if>
				)
			</when>
			<when test="queryCategory == null or queryCategory == ''">
				SELECT
				sup.ID,sr.SUPPLIER_TYPE_ID
				FROM
				T_SES_SMS_SUPPLIER sup
				LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE sr ON sup.ID = sr.SUPPLIER_ID)
			</when>
		</choose>
		GROUP BY ID) subQ
		LEFT JOIN T_SES_SMS_SUPPLIER sup ON subQ.ID = sup.ID
		LEFT JOIN T_SES_BMS_AREA area ON sup.ADDRESS = area.ID
		LEFT JOIN T_SES_BMS_AREA pArea ON area.PARENT_ID = pArea.ID
		LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON sup.PROCUREMENT_DEP_ID = dep.ID
		LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
		LEFT JOIN T_SES_SMS_SUPPLIER_MAT_ENG matEng ON matEng.SUPPLIER_ID = sup.ID
		WHERE
		sup.IS_DELETED = 0
		<if test="itemType != null and itemType != ''">
			<foreach item="itemType" index="index" collection="itemType"
				open="and(" separator="or" close=")">
				subQ.typeId LIKE CONCAT(CONCAT('%', #{itemType}), '%')
			</foreach>
		</if>
		<if test="supplierName != null and supplierName != ''">
			AND SUPPLIER_NAME LIKE CONCAT(CONCAT('%', #{supplierName}), '%')
		</if>
		<if test="startDate != null">
			AND CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			AND CREATED_AT &lt;= #{endDate}
		</if>
		<if test="startSubimtDate != null">
			AND SUBMIT_AT &gt;= #{startSubimtDate}
		</if>
		<if test="endSubimtDate != null">
			AND SUBMIT_AT &lt;= #{endSubimtDate}
		</if>
		<if test="startAuditDate != null">
			AND AUDIT_DATE &gt;= #{startAuditDate}
		</if>
		<if test="endAuditDate != null">
			AND AUDIT_DATE &lt;= #{endAuditDate}
		</if>
		<if test="contactName != null and contactName != ''">
			AND sup.CONTACT_NAME LIKE CONCAT(CONCAT('%', #{contactName}), '%')
		</if>
		<if test="armyBusinessName != null and armyBusinessName != ''">
			AND sup.ARMY_BUSINESS_NAME LIKE CONCAT(CONCAT('%', #{armyBusinessName}), '%')
		</if>
		<if test="businessType != null and businessType != ''">
			AND BUSINESS_TYPE = #{businessType}
		</if>
		<if test="businessNature != null and businessNature != ''">
			AND BUSINESS_NATURE = #{businessNature}
		</if>
		<if test="orgName != null and orgName != ''">
			AND org.SHORT_NAME = #{orgName}
		</if>
		<if test="orgId != null and orgId != ''">
			AND org.ID = #{orgId}
		</if>
		<if test="status != null">
			<if test="status == 5">
				AND IS_PROVISIONAL = '0'
			</if>
			AND SUPPLIER_STATUS = #{status}
		</if>
		<if test="auditTemporary != null">
			AND sup.AUDIT_TEMPORARY = #{auditTemporary}
		</if>
		<if test="judge == 5">
			<!-- AND (SUPPLIER_STATUS = 1 OR SUPPLIER_STATUS = 4 OR SUPPLIER_STATUS 
				= 5 OR SUPPLIER_STATUS = 6 OR SUPPLIER_STATUS = 7 OR SUPPLIER_STATUS = 8) AND 
				IS_PROVISIONAL = '0' -->
			AND (SUPPLIER_STATUS = 1 OR SUPPLIER_STATUS = -4 OR SUPPLIER_STATUS =
			5 OR SUPPLIER_STATUS = 6 OR SUPPLIER_STATUS = -5
			OR SUPPLIER_STATUS = 7 OR SUPPLIER_STATUS = 8)
			AND IS_PROVISIONAL = '0'
		</if>
		<if test="parentAddress != null and parentAddress != ''">
			AND AREA.PARENT_ID = #{parentAddress}
		</if>
		<if test="address != null and address != '' and parentAddress != null and parentAddress != ''">
			AND AREA.ID = #{address} 
		</if>
		<if test="businessScope != null and businessScope != ''">
			AND INSTR(matEng.BUSINESS_SCOPE, #{businessScope}) > 0 
			AND INSTR(subQ.typeId, 'PROJECT') > 0
		</if>
		<if test="loginName != null and loginName != ''">
			AND LOGIN_NAME LIKE CONCAT(CONCAT('%', #{loginName}), '%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND MOBILE LIKE CONCAT(CONCAT('%', #{mobile}), '%')
		</if>
		<if test="isProvisional != null">
			AND IS_PROVISIONAL = #{isProvisional}
		</if>
		<if test="creditCode != null and creditCode != ''">
			AND CREDIT_CODE LIKE CONCAT(CONCAT('%', #{creditCode}), '%')
		</if>
		<!-- <if test="judge == null and judge != 5">
			ORDER BY CREATED_AT DESC NULLS LAST
		</if> -->
		ORDER BY SUBMIT_AT, AUDIT_DATE DESC NULLS LAST
	</select>

	<!-- 查询无产品供应商 -->
	<select id="selectSupplierListByNoCate" 
		parameterType="ses.model.sms.Supplier" resultMap="BaseResultMapSimple">
		SELECT
		subQ.typeId,
		sup.ID,
		sup.SUPPLIER_NAME,
		sup.CREATED_AT,
		sup.SUBMIT_AT,
		sup.INSTORAGE_AT,
		sup.AUDIT_DATE,
		sup.AUDIT_TEMPORARY,
		sup.BUSINESS_NATURE,
		sup.IS_PROVISIONAL,
		sup.CREDIT_CODE,
		sup.CONTACT_NAME,
		sup.CONTACT_ADDRESS,
		sup.MOBILE,
		sup.CONTACT_MOBILE,
		org.SHORT_NAME AS ORG_NAME,
		<!--省 -->
		pArea.ID AS PARENT_ADDRESS,
		<!--区 -->
		area.ID AS ADDRESS,
		<!--全部 -->
		pArea.NAME || ' ' || area.NAME AS AREA_NAME,
		400 AS SUPPLIER_STATUS
		FROM
		(SELECT
		ID,
		wm_concat(DISTINCT(SUPPLIER_TYPE_ID)) AS typeId
		FROM
		(SELECT
		sup.ID,
		sr.SUPPLIER_TYPE_ID
		FROM
		T_SES_SMS_SUPPLIER sup
		LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE sr ON sup.ID = sr.SUPPLIER_ID)
		GROUP BY
		ID
		) subQ
		LEFT JOIN T_SES_SMS_SUPPLIER sup ON subQ.ID = sup.ID
		LEFT JOIN T_SES_BMS_AREA AREA ON sup.ADDRESS = AREA.ID
		LEFT JOIN T_SES_BMS_AREA pArea ON area.PARENT_ID = pArea.ID
		LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON sup.PROCUREMENT_DEP_ID = dep.ID
		LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
		LEFT JOIN T_SES_SMS_SUPPLIER_MAT_ENG matEng ON matEng.SUPPLIER_ID = sup.ID
		WHERE
		sup.IS_DELETED = 0
		AND sup.ID NOT IN(
		SELECT item.SUPPLIER_ID FROM T_SES_SMS_SUPPLIER_ITEM item WHERE
		item.NODE_LEVEL = 3 AND item.CATEGORY_ID IN(
		SELECT ID FROM T_SES_BMS_CATEGORY WHERE IS_PUBLISH = 0
		)
		)
		<if test="itemType != null and itemType != ''">
			<foreach item="itemType" index="index" collection="itemType"
				open="and(" separator="or" close=")">
				subQ.typeId LIKE CONCAT(CONCAT('%', #{itemType}), '%')
			</foreach>
		</if>
		<if test="supplierName != null and supplierName != ''">
			AND SUPPLIER_NAME LIKE CONCAT(CONCAT('%', #{supplierName}), '%')
		</if>
		<if test="startDate != null">
			AND CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			AND CREATED_AT &lt;= #{endDate}
		</if>
		<if test="startSubimtDate != null">
			AND SUBMIT_AT &gt;= #{startSubimtDate}
		</if>
		<if test="endSubimtDate != null">
			AND SUBMIT_AT &lt;= #{endSubimtDate}
		</if>
		<if test="startAuditDate != null">
			AND AUDIT_DATE &gt;= #{startAuditDate}
		</if>
		<if test="endAuditDate != null">
			AND AUDIT_DATE &lt;= #{endAuditDate}
		</if>
		<if test="contactName != null and contactName != ''">
			AND sup.CONTACT_NAME LIKE CONCAT(CONCAT('%', #{contactName}), '%')
		</if>
		<if test="armyBusinessName != null and armyBusinessName != ''">
			AND sup.ARMY_BUSINESS_NAME LIKE CONCAT(CONCAT('%', #{armyBusinessName}), '%')
		</if>
		<if test="businessType != null and businessType != ''">
			AND BUSINESS_TYPE = #{businessType}
		</if>
		<if test="businessNature != null and businessNature != ''">
			AND BUSINESS_NATURE = #{businessNature}
		</if>
		<if test="orgName != null and orgName != ''">
			AND org.SHORT_NAME = #{orgName}
		</if>
		<if test="orgId != null and orgId != ''">
			AND org.ID = #{orgId}
		</if>
		<if test="status != null">
			<if test="status == 5">
				AND IS_PROVISIONAL = '0'
			</if>
			AND SUPPLIER_STATUS = #{status}
		</if>
		<if test="auditTemporary != null">
			AND sup.AUDIT_TEMPORARY = #{auditTemporary}
		</if>
		<if test="judge == 5">
			<!-- AND (SUPPLIER_STATUS = 1 OR SUPPLIER_STATUS = 4 OR SUPPLIER_STATUS 
				= 5 OR SUPPLIER_STATUS = 6 OR SUPPLIER_STATUS = 7 OR SUPPLIER_STATUS = 8) AND 
				IS_PROVISIONAL = '0' -->
			AND (SUPPLIER_STATUS = 1 OR SUPPLIER_STATUS = 5 OR SUPPLIER_STATUS = 7
			OR SUPPLIER_STATUS = -4 OR SUPPLIER_STATUS = -5)
			AND IS_PROVISIONAL = '0'
		</if>
		<if test="parentAddress != null and parentAddress != ''">
			AND AREA.PARENT_ID = #{parentAddress}
		</if>
		<if test="address != null and address != '' and parentAddress != null and parentAddress != ''">
			AND AREA.ID = #{address} 
		</if>
		<if test="businessScope != null and businessScope != ''">
			AND INSTR(matEng.BUSINESS_SCOPE, #{businessScope}) > 0 
			AND INSTR(subQ.typeId, 'PROJECT') > 0
		</if>
		<if test="loginName != null and loginName != ''">
			AND LOGIN_NAME LIKE CONCAT(CONCAT('%', #{loginName}), '%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND MOBILE LIKE CONCAT(CONCAT('%', #{mobile}), '%')
		</if>
		<if test="isProvisional != null">
			AND IS_PROVISIONAL = #{isProvisional}
		</if>
		<if test="creditCode != null and creditCode != ''">
			AND CREDIT_CODE LIKE CONCAT(CONCAT('%', #{creditCode}), '%')
		</if>
		<!-- <if test="judge == null and judge != 5">
			ORDER BY CREATED_AT DESC NULLS LAST
		</if> -->
		ORDER BY SUBMIT_AT, AUDIT_DATE DESC NULLS LAST
	</select>
	
	<!-- 按品目查询供应商 -->
  <select id="findSupplierByCategoryId" parameterType="ses.model.sms.Supplier" resultMap="findSupplierMap">
      SELECT DISTINCT
          t2.*,
          org.SHORT_NAME AS ORG_NAME
      FROM
          T_SES_SMS_SUPPLIER t2
          LEFT JOIN T_SES_OMS_PURCHASE_DEP dep ON t2.PROCUREMENT_DEP_ID = dep.ID
          LEFT JOIN T_SES_OMS_ORG org ON org.ID = dep.ORG_ID
          RIGHT JOIN (SELECT SUPPLIER_TYPE_ID,supplier_ID FROM T_SES_SMS_SUPPLIER_TYPE_RELATE 
          <where>
          <if test="supplierType != null and supplierType != ''">
          SUPPLIER_TYPE_ID = #{supplierType}
          </if>
          </where> 
          )str ON str.supplier_ID= t2.ID
          <if test="supplierTypeId != null and supplierTypeId != ''">
              RIGHT JOIN (
                  select supplier_id as id from T_SES_SMS_SUPPLIER_ITEM where category_id = #{supplierTypeId}
              ) t5 on t2.ID = t5.ID
          </if>
          WHERE
              (SUPPLIER_STATUS = 1 or SUPPLIER_STATUS = 4 or SUPPLIER_STATUS = 5 or SUPPLIER_STATUS = 6 or SUPPLIER_STATUS = 7 or SUPPLIER_STATUS = 8)
              AND t2.IS_PROVISIONAL = '0'
              AND t2.IS_DELETED = 0
          <if test="supplierName != null and supplierName != ''">
              AND SUPPLIER_NAME LIKE CONCAT(CONCAT('%', #{supplierName}), '%')
          </if>
          <if test="armyBusinessName != null and armyBusinessName != ''">
              AND ARMY_BUSINESS_NAME like CONCAT(CONCAT('%', #{armyBusinessName}), '%')
          </if>
          ORDER BY AUDIT_DATE DESC NULLS LAST
  </select>

	<!-- 根据供应商Id更新状态 -->
  <update id="updateStatus" parameterType="ses.model.sms.Supplier">
      update
      T_SES_SMS_SUPPLIER
      <set>
          <if test="status != null">
              SUPPLIER_STATUS = #{status},
              <if test="status == 2">
              		RETURN_COUNT = RETURN_COUNT + 1,
              		LAST_RETURN_DATE = SYSDATE,
              </if>
          </if>
          <if test="auditDate != null">
              AUDIT_DATE = #{auditDate,jdbcType=TIMESTAMP},
          </if>
          <if test="updatedAt != null">
              UPDATED_AT = #{updatedAt},
          </if>
          <if test="isPublish != null">
              IS_PUBLISH = #{isPublish},
          </if>
          <if test="auditor != null">
              AUDITOR = #{auditor},
          </if>
          <if test="auditTemporary != null">
              AUDIT_TEMPORARY = #{auditTemporary},
          </if>
          <if test="auditOpinionAttach != null">
              AUDIT_OPINION_ATTACH = #{auditOpinionAttach}
          </if>
          <if test="instorageAt != null">
              INSTORAGE_AT = #{instorageAt}
          </if>
      </set>
      where ID = #{id}
  </update>

	<update id="updateSupplierInspectListById" parameterType="ses.model.sms.Supplier">
		update
		T_SES_SMS_SUPPLIER
		set
		SUPPLIER_INSPECT_LIST = #{supplierInspectList}
		where ID = #{id}
	</update>

	<resultMap type="ses.model.sms.Supplier" id="supplierMap"
		extends="BaseResultMap">
		<association property="supplierMatEng"
			select="ses.dao.sms.SupplierMatEngMapper.getMatEngBySupplierId"
			column="ID" />
		<association property="supplierMatSe"
			select="ses.dao.sms.SupplierMatServeMapper.getMatSeBySupplierId"
			column="ID" />
		<association property="supplierMatPro"
			select="ses.dao.sms.SupplierMatProMapper.getMatProBySupplierId"
			column="ID" />
		<association property="supplierMatSell"
			select="ses.dao.sms.SupplierMatSellMapper.getMatSellBySupplierId"
			column="ID" />
		<collection property="listSupplierFinances"
			select="ses.dao.sms.SupplierFinanceMapper.findFinanceBySupplierId"
			column="ID" />
		<collection property="listSupplierStockholders"
			select="ses.dao.sms.SupplierStockholderMapper.findStockholderBySupplierId"
			column="ID" />
		<collection property="listSupplierAfterSaleDep"
			select="ses.dao.sms.SupplierAfterSaleDepMapper.findAfterSaleDepBySupplierId"
			column="ID" />
		<collection property="listSupplierTypeRelates"
			select="ses.dao.sms.SupplierTypeRelateMapper.findSupplierTypeBySupplierId"
			column="ID" />
		<collection property="listSupplierItems"
			select="ses.dao.sms.SupplierItemMapper.findSupplierItemBySupplierId"
			column="ID" />
		<collection property="listSupplierProducts"
			select="ses.dao.sms.SupplierProductsMapper.findSupplierProductsBySupplierId"
			column="ID" />
	</resultMap>

	<update id="updateScore" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER
		set SCORE = #{score} where ID = #{id}
	</update>
	
	<select id="findLoginName" resultType="String">
		select t1.LOGIN_NAME from
		T_SES_SMS_SUPPLIER t1 where t1.IS_DELETED = 0
	</select>

	<select id="getByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		T_SES_SMS_SUPPLIER t1
		<where>
			<if test="loginName != null">
				and t1.LOGIN_NAME = #{loginName}
			</if>
		</where>
	</select>
	
	<!-- 供应商登陆获取信息 -->
	<select id="getById" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		T_SES_SMS_SUPPLIER t1
		<where>
			<if test="id != null">
				and t1.id = #{id}
			</if>
		</where>
	</select>
	
	<!-- 关联 -->
	<select id="getByExtRelateProjectId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT
		ss.*
		FROM
		T_SES_SMS_SUPPLIER_EXT_RELATE er
		INNER JOIN
		T_SES_SMS_SUPPLIER ss ON er.SUPPLIER_ID = SS."ID"
		WHERE
		ER.STATUS_COUNT = 0
		AND ER.OPERATING_TYPE = 1
		AND ER.PROJECT_ID = #{projectId}
	</select>

	<select id="queryByName" parameterType="String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER where LOGIN_NAME = #{name}
	</select>

	<!--校验查询 -->
	<select id="query" parameterType="ses.model.sms.Supplier"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER
		<where>
			IS_PROVISIONAL = 0 AND IS_DELETED = 0
			<if test="supplierName != null and supplierName !=''">
			    and SUPPLIER_NAME like CONCAT(CONCAT('%', #{supplierName}), '%')
		    </if>
			<if test="mobile != null">
				and MOBILE = #{mobile}
			</if>
			<if test="creditCode != null">
				and CREDIT_CODE=#{creditCode}
			</if>
			<if test="legalIdCard != null">
				and LEGAL_ID_CARD = #{legalIdCard}
			</if>
			<if test="legalTelephone != null">
				and LEGAL_TELEPHONE = #{legalTelephone}
			</if>
			<if test="IS_PUBLISH != null">
				and IS_PUBLISH = #{IS_PUBLISH}
			</if>
			<if test="status != null and status != ''">
				and SUPPLIER_STATUS in (#{status})
			</if>
			<if test="size > 0">
				and SUPPLIER_STATUS in 
				<foreach item="item" index="index" collection="statusArray" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="auditTemporary != null">
				and AUDIT_TEMPORARY=0
			</if>
			ORDER BY AUDIT_DATE DESC
		</where>

	</select>

	<!-- 获取手机的数量 -->
	<select id="getCountMobile" resultType="java.lang.Integer">
		SELECT count(1)
		FROM
		T_SES_SMS_SUPPLIER
		WHERE MOBILE= #{mobile}
	</select>

	<!--
	    数据同步SQL
	    根据创建日期查询已提交的供应商(排除注销的供应商)
	    包括：0：待审核
              9：退回再审核
	-->
	<select id="getCommintSupplierList" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER T
		WHERE T.SUPPLIER_STATUS in (0,9)
    AND T.IS_DELETED = 0
		AND T.SUBMIT_AT &gt;= to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
		AND T.SUBMIT_AT &lt;= to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
	</select>

    <!--
        数据同步SQL
        根据审日期查询已审核的供应商
        包括：1：入库
              2：退回修改
              3：审核不通过
              5：复核合格（待考察）
              6：复核不合格
              7：考察合格
              8：考察不合格
     -->
    <select id="getByTime" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM T_SES_SMS_SUPPLIER T
        WHERE T.SUPPLIER_STATUS in(1,2,3,5,6,7,8)
        AND T.IS_DELETED = 0
        AND T.AUDIT_DATE &gt;= to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
        AND T.AUDIT_DATE &lt;= to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
    </select>

	<!-- 根据修改日期查询已提交的供应商 -->
	<select id="getModifySupplierByDate" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER
		WHERE SUPPLIER_STATUS = 2
	<!-- 	AND
		TO_CHAR(UPDATED_AT, 'yyyy-MM-dd') = #{modifyDate} -->
		AND UPDATED_AT &gt;=
		to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
		AND
		UPDATED_AT &lt;= to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-MM-dd
		hh24:mi:ss')
	</select>

	<!-- 社会统一信用代码唯一校验 -->
	<select id="validateCreditCode" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER
		WHERE CREDIT_CODE = #{_parameter}
		and
		IS_PROVISIONAL != 1 and IS_DELETED = 0
		<!-- SUPPLIER_STATUS != 6 and IS_DELETED=0 -->
	</select>
	
	<select id="queryAll" resultMap="BaseResultMap" >
	   SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER
		WHERE  SUPPLIER_STATUS in(1,5,7)
	</select>
	
	<select id="getMinFoundDate" resultType="java.util.Date">
   	SELECT
		min(FOUND_DATE)
		FROM T_SES_SMS_SUPPLIER
	</select>
	
	<select id="getProLevelScore" resultType="java.math.BigDecimal">
   	SELECT
		LEVEL_SCORE_PRODUCT
		FROM T_SES_SMS_SUPPLIER
		WHERE LEVEL_SCORE_PRODUCT is not null
		ORDER BY LEVEL_SCORE_PRODUCT ASC
	</select>
	
	<select id="getSalesLevelScore" resultType="java.math.BigDecimal">
	   	SELECT
		LEVEL_SCORE_SALES
		FROM T_SES_SMS_SUPPLIER
		WHERE LEVEL_SCORE_SALES is not null
		ORDER BY LEVEL_SCORE_SALES ASC
	</select>
	
	<select id="getServiceLevelScore" resultType="java.math.BigDecimal">
   	SELECT
		LEVEL_SCORE_SERVICE
		FROM T_SES_SMS_SUPPLIER
		WHERE LEVEL_SCORE_SERVICE is not null
		ORDER BY LEVEL_SCORE_SERVICE ASC
	</select>
	
	<!-- 供应商注销 -->
	<delete id="deleteSupplier">
		DELETE FROM T_SES_SMS_SUPPLIER
		WHERE ID = #{id}
	</delete>
	
	<!-- 通过供应商名称查询 -->
	<select id="selByName" resultMap="BaseResultMap" parameterType="String">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER
		WHERE IS_DELETED = 0 and SUPPLIER_NAME = #{supplierName}
	</select>
	
	<!-- 通过供应商名称查询(除去临时供应商) -->
	<select id="selByNameWithoutProvisional" resultMap="BaseResultMap" parameterType="String">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER
		WHERE IS_DELETED = 0 and SUPPLIER_NAME = #{supplierName}
		and IS_PROVISIONAL != 1
	</select>
	
	<select id="findQualifiedSupplier" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER
		WHERE SUPPLIER_STATUS = 1 AND IS_PROVISIONAL = 0
	</select>
	
	<!-- 注销列表 -->
	<select id="findLogoutList" resultMap="BaseResultMap">
		SELECT
		  ID,
		  SUPPLIER_NAME,
		  LOGIN_NAME,
		  MOBILE,
		  CREDIT_CODE,
		  SUPPLIER_STATUS,
		  CREATED_AT,
		  CONTACT_NAME,
		  IS_PROVISIONAL
		FROM T_SES_SMS_SUPPLIER
		WHERE <!-- (SUPPLIER_STATUS = -1 or SUPPLIER_STATUS = 0 or SUPPLIER_STATUS = 2) -->
		IS_DELETED = 0
		<if test="supplierName != null and supplierName !=''">
			AND SUPPLIER_NAME like CONCAT(CONCAT('%', #{supplierName}), '%')
		</if>
		<if test="loginName != null and loginName !=''">
			AND LOGIN_NAME like CONCAT(CONCAT('%', #{loginName}), '%')
		</if>
		<if test="mobile != null and mobile !=''">
			AND MOBILE like  CONCAT(CONCAT('%', #{mobile}), '%')
		</if>
		<if test="creditCode != null and creditCode !=''">
			AND CREDIT_CODE like CONCAT(CONCAT('%', #{creditCode}), '%')
		</if>
		<if test="status != null">
			AND SUPPLIER_STATUS = #{status}
		</if>
		ORDER BY CREATED_AT DESC NULLS LAST
	</select>
	
	<update id="updateSupplierStatus">
		update
		T_SES_SMS_SUPPLIER
		set
		  SUPPLIER_STATUS = #{status},AUDIT_DATE=#{auditDate}
		where ID = #{id}
	</update>

	<!-- 根据创建日期查询已提交的供应商 -->
	<select id="tempExportSupplier" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER
		WHERE IS_PROVISIONAL=1
		AND AUDIT_DATE &gt;=
		to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
		AND
		AUDIT_DATE &lt;= to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-MM-dd
		hh24:mi:ss')
	</select>
	
	<!-- 记录抽取的机构id -->
	<update id="updateExtractOrgidById" parameterType="ses.model.sms.Supplier">
		UPDATE
			T_SES_SMS_SUPPLIER
		SET
			EXTRACT_ORGID = #{extractOrgid}
		WHERE
			ID = #{id}
	</update>
	
	<!-- 统计注册供应商数 -->
	<select id="getRegisterSupplierCountByEmp" resultType="java.lang.Long" parameterType="Map">
    SELECT COUNT(ID)
		FROM T_SES_SMS_SUPPLIER S
		WHERE S.IS_DELETED = 0
		AND TO_CHAR(S.CREATED_AT, 'yyyy-MM-dd') = #{createdAt}
	</select>
	
	<!-- 假删除供应商 -->
	<update id="updateById" parameterType="ses.model.sms.Supplier">
    update
      T_SES_SMS_SUPPLIER
    <set>
      <if test="supplierName !=null">
        SUPPLIER_NAME = #{supplierName},
      </if>
      <if test="isDeleted !=null">
        IS_DELETED = #{isDeleted},
      </if>
      <if test="creditCode !=null">
        CREDIT_CODE = #{creditCode},
      </if>
      <if test="loginName !=null">
        LOGIN_NAME = #{loginName},
      </if>
    </set>
    WHERE ID = #{id}
  </update>
	
	<!-- 查询临时供应商 -->
	<select id="selectBySupplier" parameterType="java.util.Map" resultMap="BaseResultMap">
	  SELECT
    <include refid="Base_Column_List" />
    FROM T_SES_SMS_SUPPLIER
    WHERE
    IS_DELETED = 0 AND SUPPLIER_STATUS != 6 AND IS_PROVISIONAL = 1
    <if test="creditCode != null and creditCode != ''">
      AND CREDIT_CODE = #{creditCode}
    </if>
    <if test="isProvisional != null and isProvisional !=''">
      AND IS_PROVISIONAL = #{isProvisional}
    </if>
	</select>
	
	<select id="getCreditCode" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER
		WHERE CREDIT_CODE = #{creditCode} 
		and IS_DELETED=0 and    IS_PROVISIONAL=#{isProvisional}
	</select>
	
	<!-- 根据企业类型不同统计入库供应商数量 -->
	<select id="getSupplierCountByNature" resultType="java.math.BigDecimal" parameterType="java.lang.String">
       SELECT COUNT(ID)
  			FROM T_SES_SMS_SUPPLIER
 				WHERE BUSINESS_NATURE = #{business_nature}
 				AND (SUPPLIER_STATUS = 1
      	OR SUPPLIER_STATUS = 4
      	OR SUPPLIER_STATUS = 5
      	OR SUPPLIER_STATUS = 6
      	OR SUPPLIER_STATUS = 7
      	OR SUPPLIER_STATUS = 8)
	      AND IS_PROVISIONAL = '0' 
	      AND IS_DELETED = 0
	</select>
	
	<select id="selectSupplierCheckNumber" parameterType="java.util.Map" resultType="java.util.Map" >
		select f.* from (
		select  
	 	o.id as id,o.name as name,o.short_name as shortName,d.id as depId,o.position,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and IS_DELETED = 0 AND IS_PROVISIONAL=0) as  TJSH,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=10 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as YYCL,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=0 and IS_DELETED = 0 and AUDIT_TEMPORARY=0 AND IS_PROVISIONAL=0) as DSH,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=9 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as THZSH,
	  (select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and AUDIT_TEMPORARY=1 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as SHZ,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=2 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as THXG,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=-2 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as YSHJS,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=3 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as SHBTG,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=-3 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as GSZ,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=1 and IS_DELETED = 0 and AUDIT_TEMPORARY=0 AND IS_PROVISIONAL=0) as RKDFH,
	  (select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and AUDIT_TEMPORARY=2 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as FHZ,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=-4 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as YFHJS,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=6 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as FHBHG,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=5 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as FHHGDKC,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and AUDIT_TEMPORARY=3 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as KCZ,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=-5 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as YKCJS,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=8 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as KCBHG,
		(select count(*) from T_SES_SMS_SUPPLIER where  PROCUREMENT_DEP_ID = d.id and SUPPLIER_STATUS=7 and AUDIT_TEMPORARY=0 and IS_DELETED = 0 AND IS_PROVISIONAL=0) as KCHG
 		from 
		T_SES_OMS_ORG o inner join T_SES_OMS_PURCHASE_DEP d  on o.id =d.org_id LEFT JOIN T_SES_SMS_SUPPLIER s
		on o.id=s.PROCUREMENT_DEP_ID where 1=1
		and o.TYPE_NAME=1 and o.is_deleted =0 and d.is_deleted= 0 and d.IS_AUDIT_SUPPLIER=1
	  <if test="name != null and name !=''">
	    and  o.short_name like CONCAT(CONCAT('%', #{name}), '%')
	  </if>
	  group by o.id,o.name,o.short_name,d.id,o.position
	  order by o.position) f
	</select>
	<select id="selectExpertCheckNumber" parameterType="java.util.Map" resultType="java.util.Map">
		select f.* from (
		select  
	 	o.id as id,o.name as name,o.short_name as shortName,d.id as depId,o.position,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and IS_DELETE = 0 ) as  TJCS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=0 and IS_DELETE = 0 and AUDIT_TEMPORARY=0 AND IS_PROVISIONAL=0) as DCS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=9 and IS_DELETE = 0 and AUDIT_TEMPORARY=0 AND IS_PROVISIONAL=0) as THZCS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=18 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as YYCL,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and AUDIT_TEMPORARY=1 and STATUS=0 and IS_DELETE = 0  AND IS_PROVISIONAL=0) as CSZ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=3 and IS_DELETE = 0  AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as CSTHXG,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and (STATUS=15 or STATUS=16) and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as YCSJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=2 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as CSBHG,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=1 and IS_DELETE = 0) as CSHG,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=4 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as FSYFP,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and AUDIT_TEMPORARY=2 and IS_DELETE = 0 AND IS_PROVISIONAL=0) as FSZ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=-2 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as YFSJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=10 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as FSTHXG,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=5 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as FSBHG,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=-3 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as GSZ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=6 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as RKDFC,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and AUDIT_TEMPORARY=3 and STATUS=6 and IS_DELETE = 0 AND IS_PROVISIONAL=0) as FCZ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=17 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as ZLBQ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=8 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as FCBHG,
	  (select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=7 and IS_DELETE = 0 AND IS_PROVISIONAL=0 and AUDIT_TEMPORARY=0) as FCHG 
		from 
	 	T_SES_OMS_ORG o inner join T_SES_OMS_PURCHASE_DEP d  on o.id =d.org_id LEFT JOIN T_SES_EMS_EXPERT s
		on o.id=s.PURCHASE_DEP_ID where 1=1
		and o.TYPE_NAME=1 and o.is_deleted =0 and d.is_deleted= 0 and d.IS_AUDIT_SUPPLIER=1
		 <if test="name != null and name !=''">
		   and  o.short_name like CONCAT(CONCAT('%', #{name}), '%')
		 </if>
		group by o.id,o.name,o.short_name,d.id,o.position
		order by o.position) f
	</select>
	<!-- 根据suppliers 获取供应商 最大的 成立时间 -->
	<select id="findMaxFoundDate" parameterType="ses.model.sms.Supplier" resultType="Date">
		SELECT  MIN(FOUND_DATE) from T_SES_SMS_SUPPLIER 
		<where>
	    <foreach collection="listSupplier" item="supplier" open="ID in (" close=")" separator=",">
	      #{supplier.id}
	  	</foreach>
	  </where>
	</select>
	<select id="selectSupplierTypeNumber" parameterType="java.util.Map" resultType="java.util.Map">
		select f.*,(f.RKWZSC+f.RKWZXS+f.RKGC+f.RKFW) as RKHJ,(f.FHWZSC+f.FHWZXS+f.FHGC+f.FHFW) as FHHJ,(f.KCWZSC+f.KCWZXS+f.KCGC+f.KCFW) as KCHJ from 
		(select o.id as id,o.name as name,o.short_name as shortName,d.id as depId,o.position,
    (SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='PRODUCT' and t1.SUPPLIER_STATUS=1) as RKWZSC,
    (SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='SALES' and t1.SUPPLIER_STATUS=1) as RKWZXS,
		(SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='PROJECT' and t1.SUPPLIER_STATUS=1 ) as RKGC,
		(SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='SERVICE' and t1.SUPPLIER_STATUS=1) as RKFW,
    (SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='PRODUCT' and t1.SUPPLIER_STATUS=5) as FHWZSC,
    (SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='SALES' and t1.SUPPLIER_STATUS=5) as FHWZXS,
		(SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='PROJECT' and t1.SUPPLIER_STATUS=5 ) as FHGC,
		(SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='SERVICE' and t1.SUPPLIER_STATUS=5) as FHFW,
    (SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='PRODUCT' and t1.SUPPLIER_STATUS=7) as KCWZSC,
    (SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='SALES' and t1.SUPPLIER_STATUS=7) as KCWZXS,
		(SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='PROJECT' and t1.SUPPLIER_STATUS=7 ) as KCGC,
		(SELECT count(*) FROM T_SES_SMS_SUPPLIER t1 LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE t3 ON t1.ID = t3.SUPPLIER_ID where t1.PROCUREMENT_DEP_ID=d.id and t3.SUPPLIER_TYPE_ID='SERVICE' and t1.SUPPLIER_STATUS=7) as KCFW
	  from 
		T_SES_OMS_ORG o inner join T_SES_OMS_PURCHASE_DEP d  on o.id =d.org_id LEFT JOIN T_SES_SMS_SUPPLIER s
		on o.id=s.PROCUREMENT_DEP_ID where 1=1
		and o.TYPE_NAME=1 and o.is_deleted =0 and d.is_deleted= 0 and d.IS_AUDIT_SUPPLIER=1
		<if test="name != null and name !=''">
	    and  o.short_name like CONCAT(CONCAT('%', #{name}), '%')
	  </if>
	  group by o.id,o.name,o.short_name,d.id,o.position) f
	</select>
	<select id="selectExpertTypeNumber" parameterType="java.util.Map" resultType="java.util.Map">
		select f.*,(f.CSWZJS+f.CSGCJS+f.CSFWJS+f.CSWZFWJJ+f.CSGCJJ) as CSHJ,(f.RKWZJS+f.RKGCJS+f.RKFWJS+f.RKWZFWJJ+f.RKGCJJ) as RKHJ,(f.FCWZJS+f.FCGCJS+f.FCFWJS+f.FCWZFWJJ+f.FCGCJJ) as FCHJ from (
		select  
	 	o.id as id,o.name as name,o.short_name as shortName,d.id as depId,o.position,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=1 and instr(EXPERTS_TYPE_ID,(select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS'))>0) as  CSWZJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=1 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='PROJECT'))>0) as  CSGCJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=1 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='SERVICE'))>0) as  CSFWJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=1 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS_SERVER'))>0) as  CSWZFWJJ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=1 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS_PROJECT'))>0) as  CSGCJJ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=6 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS'))>0) as  RKWZJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=6 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='PROJECT'))>0) as  RKGCJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=6 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='SERVICE'))>0) as  RKFWJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=6 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS_SERVER'))>0) as  RKWZFWJJ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=6 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS_PROJECT'))>0) as  RKGCJJ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=7 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS'))>0) as  FCWZJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=7 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='PROJECT'))>0) as  FCGCJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=7 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='SERVICE'))>0) as  FCFWJS,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=7 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS_SERVER'))>0) as  FCWZFWJJ,
		(select count(*) from T_SES_EMS_EXPERT where  PURCHASE_DEP_ID = d.id and STATUS=7 and instr(EXPERTS_TYPE_ID, (select id from T_SES_BMS_DICTIONARY_DATA where code='GOODS_PROJECT'))>0) as  FCGCJJ
		from 
		T_SES_OMS_ORG o inner join T_SES_OMS_PURCHASE_DEP d  on o.id =d.org_id LEFT JOIN T_SES_EMS_EXPERT s
		on o.id=s.PURCHASE_DEP_ID where 1=1
		and o.TYPE_NAME=1 and o.is_deleted =0 and d.is_deleted= 0 and d.IS_AUDIT_SUPPLIER=1
	 	<if test="name != null and name !=''">
	    and  o.short_name like CONCAT(CONCAT('%', #{name}), '%')
	  </if>
	 	group by o.id,o.name,o.short_name,d.id,o.position
	 	order by o.position) f
	</select>
	<!-- 根据采购机构id统计对应状态的供应商数量 -->
	<select id="countByPurchaseDepId" resultType="int">
		SELECT COUNT(1) FROM T_SES_SMS_SUPPLIER 
		WHERE PROCUREMENT_DEP_ID = #{purchaseDepId}
		AND SUPPLIER_STATUS = #{status}
	</select>
	<!-- 根据采购机构id统计对应状态的待审核 和 退回待审核 供应商数量 -->
	<select id="countAuditByPurchaseDepId" resultType="int">
		SELECT COUNT(1) FROM T_SES_SMS_SUPPLIER
		WHERE PROCUREMENT_DEP_ID = #{purchaseDepId}
		AND SUPPLIER_STATUS in('0','9')
		AND IS_DELETED = '0'
		AND PROCUREMENT_DEP_ID is not null
	</select>
	<!-- 手机号校验：供应商库+专家库（除去临时供应商和临时专家） -->
	<select id="countByMobile" resultType="int" parameterType="string">
		<!-- SELECT COUNT(1) FROM T_SES_SMS_SUPPLIER SUPP,
		T_SES_EMS_EXPERT EXPE
		WHERE SUPP.MOBILE = #{mobile}
		AND EXPE.MOBILE = #{mobile}
		AND SUPP.IS_PROVISIONAL != 1 AND SUPP.IS_DELETED = 0
		AND EXPE.IS_DELETE = 0 -->
		
		SELECT (T1.COUNT_SUPP + T2.COUNT_EXPE) FROM
		(SELECT COUNT(1) AS COUNT_SUPP FROM T_SES_SMS_SUPPLIER WHERE MOBILE = #{mobile} AND IS_PROVISIONAL != 1 AND IS_DELETED = 0) T1
		,
		(SELECT COUNT(1) AS COUNT_EXPE FROM T_SES_EMS_EXPERT WHERE MOBILE = #{mobile} AND IS_PROVISIONAL != 1 AND IS_DELETE = 0) T2
	</select>

	<!-- 查询公示的供应商 -->
	<select id="selectSupByPublicty" resultMap="supplierOfPublicityMap">
		  SELECT
		   ID, AUDIT_DATE, MOBILE
		   FROM T_SES_SMS_SUPPLIER
		   WHERE
		   IS_PROVISIONAL = '0'
		   AND IS_DELETED = '0'
		   AND SUPPLIER_STATUS = -3
		   ORDER BY AUDIT_DATE DESC NULLS LAST
	</select>
	
	<!-- 查询公示的供应商 列表 -->
	<select id="selectSupByPublictyList" resultMap="supplierOfPublicityMapList" parameterType="ses.model.sms.SupplierPublicity">
		SELECT T.ID, T.SUPPLIER_NAME, DT.NAME AS BUSINESS_NATURE, T.AUDIT_DATE, ORG.SHORT_NAME AS ORG_NAME
		  FROM T_SES_SMS_SUPPLIER T
		  LEFT JOIN (SELECT T.SUPPLIER_ID,
	    	WM_CONCAT(SUPPLIER_TYPE_ID) AS SUPPLIER_TYPE_ID
	    	FROM T_SES_SMS_SUPPLIER_TYPE_RELATE T
	    	GROUP BY T.SUPPLIER_ID) SC
	    	ON T.ID = SC.SUPPLIER_ID
		  LEFT JOIN T_SES_BMS_DICTIONARY_DATA DT
		    ON T.BUSINESS_NATURE = DT.ID
		  LEFT JOIN T_SES_OMS_PURCHASE_DEP DEP
		    ON T.PROCUREMENT_DEP_ID = DEP.ID
		  LEFT JOIN T_SES_OMS_ORG ORG
		    ON ORG.ID = DEP.ORG_ID
		 	WHERE T.SUPPLIER_STATUS = -3
		   AND T.IS_PROVISIONAL = '0'
		   AND T.IS_DELETED = 0
		   <if test="supplierName != null and supplierName != ''">
		     AND INSTR(T.SUPPLIER_NAME,#{supplierName}) >0
		   </if>
		   <if test="businessNature != null and businessNature != ''">
				AND T.BUSINESS_NATURE = #{businessNature}
		   </if>
		   <if test="supplierTypeId != null and supplierTypeId != ''">
				AND INSTR(SC.SUPPLIER_TYPE_ID, #{supplierTypeId}) > 0
		   </if>
		   <if test="orgId != null and orgId != ''">
			   AND DEP.ID = #{orgId}
		   </if>
		 ORDER BY T.AUDIT_DATE DESC
	</select>

	<!-- 根据公示时间查询公示的供应商 -->
	<select id="selectSupByPublictyOfExport" resultMap="BaseResultMap" parameterType="Map">
		SELECT
		<include refid="Base_Column_List" />
		FROM T_SES_SMS_SUPPLIER T
		WHERE T.SUPPLIER_STATUS = #{status}
		AND T.AUDIT_DATE &gt;=
		to_date(#{startTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
		AND
		T.AUDIT_DATE &lt;= to_date(#{endTime,jdbcType=TIMESTAMP},'yyyy-MM-dd
		hh24:mi:ss')
	</select>
	<!-- 供应商名称校验：供应商库（除去临时供应商） -->
	<select id="countSupplierName" resultType="int">
		SELECT COUNT(*) FROM T_SES_SMS_SUPPLIER
		WHERE SUPPLIER_NAME = #{supplierName}
		AND ID != #{id}
		AND IS_DELETED = 0
		AND IS_PROVISIONAL != 1
	</select>
	<!-- 统一社会信用代码校验：供应商库（除去临时供应商） -->
	<select id="countCreditCode" resultType="int">
		SELECT COUNT(*) FROM T_SES_SMS_SUPPLIER
		WHERE CREDIT_CODE = #{creditCode}
		AND ID != #{id}
		AND IS_DELETED = 0
		AND IS_PROVISIONAL != 1
	</select>
	<!-- 身份证号校验：供应商库+专家库（除去临时供应商和临时专家） -->
	<select id="countByIdCard" resultType="int">
		SELECT (T1.COUNT_SUPP + T2.COUNT_EXPE) FROM
		(SELECT COUNT(1) AS COUNT_SUPP FROM T_SES_SMS_SUPPLIER WHERE LEGAL_ID_CARD = #{idCard} AND ID != #{id} AND IS_PROVISIONAL != 1 AND IS_DELETED = 0) T1
		,
		(SELECT COUNT(1) AS COUNT_EXPE FROM T_SES_EMS_EXPERT WHERE ID_CARD_NUMBER = #{idCard} AND IS_PROVISIONAL != 1 AND IS_DELETE = 0) T2
	</select>
	<!-- 根据数据 时间 查看退回修改供应商 2-->
    <select id="fundGoBackSupplierByDate" resultMap="BaseResultMap" parameterType="java.util.Date">
        SELECT ID,AUDIT_DATE FROM T_SES_SMS_SUPPLIER
        WHERE AUDIT_DATE <![CDATA[<]]> #{date}
        AND SUPPLIER_STATUS='2' AND IS_DELETED = 0
    </select>
    <!-- 根据数据时间 查看 各种不通过修改供应商  3审核未通过 6复核未通过 8考察不合格-->
    <select id="fundNotPassSupplierByDate" resultType="String" parameterType="java.util.Date">
        SELECT ID FROM T_SES_SMS_SUPPLIER
        WHERE AUDIT_DATE <![CDATA[<]]> #{date}
        AND (SUPPLIER_STATUS ='3' or  SUPPLIER_STATUS ='6' or SUPPLIER_STATUS ='8')
        AND IS_DELETED = 0
    </select>

    <!-- 查询地区下所对应的供应商 -->
    <select id="selectSuppliersByArea" resultMap="baseAnalyze">
        SELECT REPLACE(SUBSTR(P.NAME, 0, 3), '省', '') AS COL_NAME,
		       	COUNT(T.ID) AS COL_VALUE,
		       	P.AREAID AS COL_ID
		  	FROM (SELECT A.ID, AREA.NAME, AREA.ID AS AREAID
	          FROM T_SES_BMS_AREA AREA
	          LEFT JOIN T_SES_BMS_AREA A
            ON AREA.ID = A.PARENT_ID
	         	WHERE AREA.PARENT_ID = '0') P
		  	LEFT JOIN (SELECT T.ADDRESS, T.ID
            FROM T_SES_SMS_SUPPLIER T
           	WHERE T.IS_PROVISIONAL = '0'
            AND T.IS_DELETED = 0
            <if test="supplierStatusList != null and supplierStatusList.size() > 0">
                AND T.SUPPLIER_STATUS IN
                <foreach collection="supplierStatusList" item="supplierStatus" open="(" close=")" separator=",">
                    #{supplierStatus}
                </foreach>
            </if>
            ) T
		    ON P.ID = T.ADDRESS
		 		GROUP BY P.NAME, P.AREAID
    </select>

	<!--根据供应商ID查询联系号码-->
	<select id="selectSupMobileById" parameterType="string" resultType="string">
		SELECT T.MOBILE FROM T_SES_SMS_SUPPLIER T WHERE T.ID = #{supplierId}
	</select>
	
	<!--根据供应商id查询状态-->
	<select id="selectStatusById" parameterType="string" resultType="string">
		SELECT SUPPLIER_STATUS FROM T_SES_SMS_SUPPLIER WHERE ID = #{id}
	</select>
    
    <!-- 供应商复核列表 -->
    <select id="selectReviewList" resultMap="BaseResultMap">
      SELECT 
        DISTINCT T1.ID,
			  T1.SUPPLIER_NAME,
			  T1.SUPPLIER_TYPE_ID,
			  T1.BUSINESS_NATURE,
			  T1.REVIEW_AT,
			  T1.REVIEW_PEOPLE,
			  T1.SUPPLIER_STATUS
			FROM
			  T_SES_SMS_SUPPLIER T1
			LEFT JOIN T_SES_SMS_EXTRACT_RESULT T2 ON T2.SUPPLIER_ID = T1. ID
			WHERE
			  T2.JOIN = 1
    </select>
    
    <!-- 更新复核或实地考察信息 -->
    <update id="updateReviewOrInves" parameterType="ses.model.sms.Supplier">
      update
        T_SES_SMS_SUPPLIER
      set
        <if test="status !=null">
          SUPPLIER_STATUS = #{status},
        </if>
        <if test="reviewPeople !=null">
          REVIEW_PEOPLE = #{reviewPeople},
        </if>
        <if test="reviewStatus !=null">
          REVIEW_STATUS = #{reviewStatus},
        </if>
        <if test="reviewAt !=null">
          REVIEW_AT = #{reviewAt},
        </if>
        <if test="invesPeople !=null">
          INVES_PEOPLE = #{invesPeople},
        </if>
        <if test="invesAt !=null">
          INVES_AT = #{invesAt},
        </if>
      where
        ID = #{id}
    </update>
</mapper>