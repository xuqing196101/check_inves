<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.sms.SupplierMapper">
	<resultMap id="BaseResultMap" type="ses.model.sms.Supplier">
		<id column="ID" property="id" />
		<result column="LOGIN_NAME" property="loginName" />
		<result column="MOBILE" property="mobile" />
		<result column="PASSWORD" property="password" />
		<result column="SUPPLIER_NAME" property="supplierName" />
		<result column="WEBSITE" property="website" />
		<result column="FOUND_DATE" property="foundDate" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="BUSINESS_CERT" property="businessCert" />
		<result column="ADDRESS" property="address" />
		<result column="COUNT" property="count" />
		<result column="BANK_NAME" property="bankName" />
		<result column="BANK_ACCOUNT" property="bankAccount" />
		<result column="POST_CODE" property="postCode" />
		<result column="TAX_CERT" property="taxCert" />
		<result column="BILL_CERT" property="billCert" />
		<result column="SECURITY_CERT" property="securityCert" />
		<result column="BREACH_CERT" property="breachCert" />
		<result column="LEGAL_NAME" property="legalName" />
		<result column="LEGAL_ID_CARD" property="legalIdCard" />
		<result column="LEGAL_TELEPHONE" property="legalTelephone" />
		<result column="LEGAL_MOBILE" property="legalMobile" />
		<result column="CONTACT_NAME" property="contactName" />
		<result column="CONTACT_TELEPHONE" property="contactTelephone" />
		<result column="CONTACT_FAX" property="contactFax" />
		<result column="CONTACT_MOBILE" property="contactMobile" />
		<result column="CONTACT_EMAIL" property="contactEmail" />
		<result column="CONTACT_ADDRESS" property="contactAddress" />
		<result column="CREDIT_CODE" property="creditCode" />
		<result column="REGIST_AUTHORITY" property="registAuthority" />
		<result column="REGIST_FUND" property="registFund" />
		<result column="BUSINESS_START_DATE" property="businessStartDate" />
		<result column="BUSINESS_END_DATE" property="businessEndDate" />
		<result column="BUSINESS_SCOPE" property="businessScope" />
		<result column="BUSINESS_ADDRESS" property="businessAddress" />
		<result column="BUSINESS_POST_CODE" property="businessPostCode" />
		<result column="OVERSEAS_BRANCH" property="overseasBranch" />
		<result column="BRANCH_COUNTRY" property="branchCountry" />
		<result column="BRANCH_ADDRESS" property="branchAddress" />
		<result column="BRANCH_NAME" property="branchName" />
		<result column="BRANCH_BUSINESS_SCOPE" property="branchBusinessScope" />
		<result column="SUPPLIER_TYPE_ID" property="supplierTypeId" />
		<result column="SUPPLIER_STATUS" property="status" />
		<result column="PROCUREMENT_DEP_ID" property="procurementDepId" />
		<result column="SUPPLIER_LEVEL" property="supplierLevel" />
		<result column="SUPPLIER_PLEDGE" property="supplierPledge" />
		<result column="SUPPLIER_REG_LIST" property="supplierRegList" />
		<result column="SUPPLIER_EXTRACTS_LIST" property="supplierExtractsList" />
		<result column="SUPPLIER_INSPECT_LIST" property="supplierInspectList" />
		<result column="SUPPLIER_REVIEW_LIST" property="supplierReviewList" />
		<result column="SUPPLIER_CHANGE_LIST" property="supplierChangeList" />
		<result column="SUPPLIER_EXIT_LIST" property="supplierExitList" />
		<result column="CREATED_AT" property="createdAt" />
		<result column="UPDATED_AT" property="updatedAt" />
		<result column="SCORE" property="score" />
		<result column="NAME" property="name" />
		<result column="DETAIL_ADDRESS" property="detailAddress" />
		
		
		<result column="ARMY_BUSINESS_NAME" property="armyBusinessName" />
		<result column="ARMY_BUSINESS_FAX" property="armyBusinessFax" />
		<result column="ARMY_BUSINESS_MOBILE" property="armyBuinessMobile" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="armyBuinessTelephone" />
		<result column="ARMY_BUSINESS_EMAIL" property="armyBuinessEmail" />
		<result column="ARMY_BUSINESS_ADDRESS" property="armyBuinessAddress" />
		<result column="AUDIT_DATE" property="auditDate" />
		
	</resultMap>
	<sql id="Base_Column_List">
		ID, LOGIN_NAME, MOBILE, PASSWORD, SUPPLIER_NAME, WEBSITE,
		FOUND_DATE, BUSINESS_TYPE,
		ADDRESS, BANK_NAME, BANK_ACCOUNT, POST_CODE,
		TAX_CERT, BILL_CERT, SECURITY_CERT,
		BREACH_CERT, LEGAL_NAME,
		LEGAL_ID_CARD, LEGAL_TELEPHONE, LEGAL_MOBILE, CONTACT_NAME,
		CONTACT_TELEPHONE, CONTACT_FAX, CONTACT_MOBILE, CONTACT_EMAIL,
		CONTACT_ADDRESS, CREDIT_CODE,
		REGIST_AUTHORITY, REGIST_FUND,
		BUSINESS_START_DATE, BUSINESS_END_DATE, BUSINESS_SCOPE,
		BUSINESS_ADDRESS, BUSINESS_POST_CODE, OVERSEAS_BRANCH, BRANCH_COUNTRY,
		BRANCH_ADDRESS,
		BRANCH_NAME, BRANCH_BUSINESS_SCOPE, SUPPLIER_TYPE_ID,
		SUPPLIER_STATUS, PROCUREMENT_DEP_ID, SUPPLIER_LEVEL,
		SUPPLIER_PLEDGE,
		SUPPLIER_REG_LIST, SUPPLIER_EXTRACTS_LIST, SUPPLIER_INSPECT_LIST,
		SUPPLIER_REVIEW_LIST, SUPPLIER_CHANGE_LIST, SUPPLIER_EXIT_LIST,
		CREATED_AT, UPDATED_AT, BUSINESS_CERT,DETAIL_ADDRESS,ARMY_BUSINESS_NAME,ARMY_BUSINESS_FAX,ARMY_BUSINESS_MOBILE,
		ARMY_BUSINESS_TELEPHONE,ARMY_BUSINESS_EMAIL,AUDIT_DATE,ARMY_BUSINESS_ADDRESS
	</sql>
	<!--查询每个供应商所对应的所有类型 作者SBW -->
	<select id="selectSupplierTypes" parameterType="ses.model.sms.Supplier"
		resultType="java.lang.String">
		select wm_concat(t1.name) from(
		SELECT T2."NAME",T1.SUPPLIER_ID FROM "JDCG"."T_SES_SMS_SUPPLIER_TYPE_RELATE" t1
		LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE T3 ON T1.ID = T3.SUPPLIER_ID
		LEFT JOIN T_SES_BMS_DICTIONARY_DATA t2 on T1.SUPPLIER_TYPE_ID=T2.CODE
		) t1
		where
		1=1
		<if test="id != null and id !=''">
			and T1.SUPPLIER_ID = #{id,jdbcType=VARCHAR}
		</if>
		GROUP BY T1.SUPPLIER_ID
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER
		where ID = #{id}
	</select>
	<select id="selectByProjectId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT T2.* FROM (
		SELECT SUPPLIER_ID FROM
		"JDCG"."T_SES_SMS_SUPPLIER_QUOTE"
		where PROJECT_ID =#{projectId} GROUP
		BY SUPPLIER_ID) T1
		LEFT JOIN T_SES_SMS_SUPPLIER T2 ON T2.ID
		=T1.SUPPLIER_ID
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		T_SES_SMS_SUPPLIER
		where ID = #{id}
	</delete>
	<insert id="insert" parameterType="ses.model.sms.Supplier">
		insert into T_SES_SMS_SUPPLIER
		(ID, LOGIN_NAME, MOBILE,
		PASSWORD, SUPPLIER_NAME, WEBSITE,
		FOUND_DATE,
		BUSINESS_TYPE, ADDRESS,
		BANK_NAME, BANK_ACCOUNT, POST_CODE,
		TAX_CERT,
		BILL_CERT, SECURITY_CERT,
		BREACH_CERT, LEGAL_NAME, LEGAL_ID_CARD,
		LEGAL_TELEPHONE, LEGAL_MOBILE, CONTACT_NAME,
		CONTACT_TELEPHONE,
		CONTACT_FAX, CONTACT_MOBILE,
		CONTACT_EMAIL, CONTACT_ADDRESS,
		CREDIT_CODE,
		REGIST_AUTHORITY, REGIST_FUND, BUSINESS_START_DATE,
		BUSINESS_END_DATE, BUSINESS_SCOPE, BUSINESS_ADDRESS,
		BUSINESS_POST_CODE, OVERSEAS_BRANCH, BRANCH_COUNTRY,
		BRANCH_ADDRESS,
		BRANCH_NAME, BRANCH_BUSINESS_SCOPE,
		SUPPLIER_TYPE_ID, SUPPLIER_STATUS,
		PROCUREMENT_DEP_ID,
		SUPPLIER_LEVEL, SUPPLIER_PLEDGE, SUPPLIER_REG_LIST,
		SUPPLIER_EXTRACTS_LIST, SUPPLIER_INSPECT_LIST,
		SUPPLIER_REVIEW_LIST,
		SUPPLIER_CHANGE_LIST,
		SUPPLIER_EXIT_LIST, CREATED_AT, UPDATED_AT,
		SCORE, BUSINESS_CERT
		)
		values (#{id}, #{loginName}, #{mobile},
		#{password}, #{supplierName}, #{website},
		#{foundDate},
		#{businessType}, #{address},
		#{bankName}, #{bankAccount},
		#{postCode},
		#{taxCert}, #{billCert}, #{securityCert},
		#{breachCert}, #{legalName},
		#{legalIdCard},
		#{legalTelephone}, #{legalMobile}, #{contactName},
		#{contactTelephone}, #{contactFax}, #{contactMobile},
		#{contactEmail},
		#{contactAddress}, #{creditCode},
		#{registAuthority}, #{registFund},
		#{businessStartDate},
		#{businessEndDate}, #{businessScope},
		#{businessAddress},
		#{businessPostCode}, #{overseasBranch},
		#{branchCountry},
		#{branchAddress}, #{branchName},
		#{branchBusinessScope},
		#{supplierTypeId}, #{status},
		#{procurementDepId},
		#{supplierLevel}, #{supplierPledge},
		#{supplierRegList},
		#{supplierExtractsList}, #{supplierInspectList},
		#{supplierReviewList}, #{supplierChangeList},
		#{supplierExitList},
		#{createdAt}, #{updatedAt}, #{score}, #{businessCert}
		)
	</insert>
	<insert id="insertSelective" parameterType="ses.model.sms.Supplier">
		insert into T_SES_SMS_SUPPLIER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="loginName != null">
				LOGIN_NAME,
			</if>
			<if test="mobile != null">
				MOBILE,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="supplierName != null">
				SUPPLIER_NAME,
			</if>
			<if test="website != null">
				WEBSITE,
			</if>
			<if test="foundDate != null">
				FOUND_DATE,
			</if>
			<if test="businessType != null">
				BUSINESS_TYPE,
			</if>
			<if test="address != null">
				ADDRESS,
			</if>
			<if test="bankName != null">
				BANK_NAME,
			</if>
			<if test="bankAccount != null">
				BANK_ACCOUNT,
			</if>
			<if test="postCode != null">
				POST_CODE,
			</if>
			<if test="taxCert != null">
				TAX_CERT,
			</if>
			<if test="billCert != null">
				BILL_CERT,
			</if>
			<if test="securityCert != null">
				SECURITY_CERT,
			</if>
			<if test="breachCert != null">
				BREACH_CERT,
			</if>
			<if test="legalName != null">
				LEGAL_NAME,
			</if>
			<if test="legalIdCard != null">
				LEGAL_ID_CARD,
			</if>
			<if test="legalTelephone != null">
				LEGAL_TELEPHONE,
			</if>
			<if test="legalMobile != null">
				LEGAL_MOBILE,
			</if>
			<if test="contactName != null">
				CONTACT_NAME,
			</if>
			<if test="contactTelephone != null">
				CONTACT_TELEPHONE,
			</if>
			<if test="contactFax != null">
				CONTACT_FAX,
			</if>
			<if test="contactMobile != null">
				CONTACT_MOBILE,
			</if>
			<if test="contactEmail != null">
				CONTACT_EMAIL,
			</if>
			<if test="contactAddress != null">
				CONTACT_ADDRESS,
			</if>
			<if test="creditCode != null">
				CREDIT_CODE,
			</if>
			<if test="registAuthority != null">
				REGIST_AUTHORITY,
			</if>
			<if test="registFund != null">
				REGIST_FUND,
			</if>
			<if test="businessStartDate != null">
				BUSINESS_START_DATE,
			</if>
			<if test="businessEndDate != null">
				BUSINESS_END_DATE,
			</if>
			<if test="businessScope != null">
				BUSINESS_SCOPE,
			</if>
			<if test="businessAddress != null">
				BUSINESS_ADDRESS,
			</if>
			<if test="businessPostCode != null">
				BUSINESS_POST_CODE,
			</if>
			<if test="overseasBranch != null">
				OVERSEAS_BRANCH,
			</if>
			<if test="branchCountry != null">
				BRANCH_COUNTRY,
			</if>
			<if test="branchAddress != null">
				BRANCH_ADDRESS,
			</if>
			<if test="branchName != null">
				BRANCH_NAME,
			</if>
			<if test="branchBusinessScope != null">
				BRANCH_BUSINESS_SCOPE,
			</if>
			<if test="supplierTypeId != null">
				SUPPLIER_TYPE_ID,
			</if>
			<if test="status != null">
				SUPPLIER_STATUS,
			</if>
			<if test="procurementDepId != null">
				PROCUREMENT_DEP_ID,
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL,
			</if>
			<if test="supplierPledge != null">
				SUPPLIER_PLEDGE,
			</if>
			<if test="supplierRegList != null">
				SUPPLIER_REG_LIST,
			</if>
			<if test="supplierExtractsList != null">
				SUPPLIER_EXTRACTS_LIST,
			</if>
			<if test="supplierInspectList != null">
				SUPPLIER_INSPECT_LIST,
			</if>
			<if test="supplierReviewList != null">
				SUPPLIER_REVIEW_LIST,
			</if>
			<if test="supplierChangeList != null">
				SUPPLIER_CHANGE_LIST,
			</if>
			<if test="supplierExitList != null">
				SUPPLIER_EXIT_LIST,
			</if>
			<if test="createdAt != null">
				CREATED_AT,
			</if>
			<if test="updatedAt != null">
				UPDATED_AT,
			</if>
			<if test="score != null">
				SCORE,
			</if>
			<if test="businessCert != null">
				BUSINESS_CERT,
			</if>
			<if test="detailAddress != null">
				DETAIL_ADDRESS,
			</if>
			
			<if test="armyBusinessName != null">
				ARMY_BUSINESS_NAME,
			</if>
			<if test="armyBusinessFax != null">
				ARMY_BUSINESS_FAX,
			</if>
			<if test="armyBuinessMobile != null">
				ARMY_BUSINESS_MOBILE,
			</if>
			<if test="armyBuinessTelephone != null">
				ARMY_BUSINESS_TELEPHONE,
			</if>
			<if test="armyBuinessEmail != null">
				ARMY_BUSINESS_EMAIL,
			</if>
				<if test="armyBuinessAddress != null">
				ARMY_BUSINESS_ADDRESS,
			</if>
			<if test="auditDate != null">
				AUDIT_DATE,
			</if>
			
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="loginName != null">
				#{loginName},
			</if>
			<if test="mobile != null">
				#{mobile},
			</if>
			<if test="password != null">
				#{password},
			</if>
			<if test="supplierName != null">
				#{supplierName},
			</if>
			<if test="website != null">
				#{website},
			</if>
			<if test="foundDate != null">
				#{foundDate},
			</if>
			<if test="businessType != null">
				#{businessType},
			</if>
			<if test="address != null">
				#{address},
			</if>
			<if test="bankName != null">
				#{bankName},
			</if>
			<if test="bankAccount != null">
				#{bankAccount},
			</if>
			<if test="postCode != null">
				#{postCode},
			</if>
			<if test="taxCert != null">
				#{taxCert},
			</if>
			<if test="billCert != null">
				#{billCert},
			</if>
			<if test="securityCert != null">
				#{securityCert},
			</if>
			<if test="breachCert != null">
				#{breachCert},
			</if>
			<if test="legalName != null">
				#{legalName},
			</if>
			<if test="legalIdCard != null">
				#{legalIdCard},
			</if>
			<if test="legalTelephone != null">
				#{legalTelephone},
			</if>
			<if test="legalMobile != null">
				#{legalMobile},
			</if>
			<if test="contactName != null">
				#{contactName},
			</if>
			<if test="contactTelephone != null">
				#{contactTelephone},
			</if>
			<if test="contactFax != null">
				#{contactFax},
			</if>
			<if test="contactMobile != null">
				#{contactMobile},
			</if>
			<if test="contactEmail != null">
				#{contactEmail},
			</if>
			<if test="contactAddress != null">
				#{contactAddress},
			</if>
			<if test="creditCode != null">
				#{creditCode},
			</if>
			<if test="registAuthority != null">
				#{registAuthority},
			</if>
			<if test="registFund != null">
				#{registFund},
			</if>
			<if test="businessStartDate != null">
				#{businessStartDate},
			</if>
			<if test="businessEndDate != null">
				#{businessEndDate},
			</if>
			<if test="businessScope != null">
				#{businessScope},
			</if>
			<if test="businessAddress != null">
				#{businessAddress},
			</if>
			<if test="businessPostCode != null">
				#{businessPostCode},
			</if>
			<if test="overseasBranch != null">
				#{overseasBranch},
			</if>
			<if test="branchCountry != null">
				#{branchCountry},
			</if>
			<if test="branchAddress != null">
				#{branchAddress},
			</if>
			<if test="branchName != null">
				#{branchName},
			</if>
			<if test="branchBusinessScope != null">
				#{branchBusinessScope},
			</if>
			<if test="supplierTypeId != null">
				#{supplierTypeId},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="procurementDepId != null">
				#{procurementDepId},
			</if>
			<if test="supplierLevel != null">
				#{supplierLevel},
			</if>
			<if test="supplierPledge != null">
				#{supplierPledge},
			</if>
			<if test="supplierRegList != null">
				#{supplierRegList},
			</if>
			<if test="supplierExtractsList != null">
				#{supplierExtractsList},
			</if>
			<if test="supplierInspectList != null">
				#{supplierInspectList},
			</if>
			<if test="supplierReviewList != null">
				#{supplierReviewList},
			</if>
			<if test="supplierChangeList != null">
				#{supplierChangeList},
			</if>
			<if test="supplierExitList != null">
				#{supplierExitList},
			</if>
			<if test="createdAt != null">
				#{createdAt},
			</if>
			<if test="updatedAt != null">
				#{updatedAt},
			</if>
			<if test="score != null">
				#{score},
			</if>
			<if test="businessCert != null">
				#{businessCert},
			</if>
			<if test="detailAddress != null">
				#{detailAddress},
			</if>
			
			
			<if test="armyBusinessName != null">
				#{armyBusinessName},
			</if>
			<if test="armyBusinessFax != null">
				#{armyBusinessFax},
			</if>
			<if test="armyBuinessMobile != null">
				#{armyBuinessMobile},
			</if>
			<if test="armyBuinessTelephone != null">
				#{armyBuinessTelephone},
			</if>
			<if test="armyBuinessEmail != null">
				#{armyBuinessEmail},
			</if>
			<if test="armyBuinessAddress != null">
				#{armyBuinessAddress},
			</if>
			<if test="auditDate != null">
				#{auditDate},
			</if>
			
		</trim>

	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER
		<set>
			<if test="loginName != null">
				LOGIN_NAME = #{loginName},
			</if>
			<if test="mobile != null">
				MOBILE = #{mobile},
			</if>
			<if test="password != null">
				PASSWORD = #{password},
			</if>
			<if test="supplierName != null">
				SUPPLIER_NAME = #{supplierName},
			</if>
			<if test="website != null">
				WEBSITE = #{website},
			</if>
			<if test="foundDate != null">
				FOUND_DATE = #{foundDate},
			</if>
			<if test="businessType != null">
				BUSINESS_TYPE = #{businessType},
			</if>
			<if test="address != null">
				ADDRESS = #{address},
			</if>
			<if test="bankName != null">
				BANK_NAME = #{bankName},
			</if>
			<if test="bankAccount != null">
				BANK_ACCOUNT = #{bankAccount},
			</if>
			<if test="postCode != null">
				POST_CODE = #{postCode},
			</if>
			<if test="taxCert != null">
				TAX_CERT = #{taxCert},
			</if>
			<if test="billCert != null">
				BILL_CERT = #{billCert},
			</if>
			<if test="securityCert != null">
				SECURITY_CERT = #{securityCert},
			</if>
			<if test="breachCert != null">
				BREACH_CERT = #{breachCert},
			</if>
			<if test="legalName != null">
				LEGAL_NAME = #{legalName},
			</if>
			<if test="legalIdCard != null">
				LEGAL_ID_CARD = #{legalIdCard},
			</if>
			<if test="legalTelephone != null">
				LEGAL_TELEPHONE = #{legalTelephone},
			</if>
			<if test="legalMobile != null">
				LEGAL_MOBILE = #{legalMobile},
			</if>
			<if test="contactName != null">
				CONTACT_NAME = #{contactName},
			</if>
			<if test="contactTelephone != null">
				CONTACT_TELEPHONE = #{contactTelephone},
			</if>
			<if test="contactFax != null">
				CONTACT_FAX = #{contactFax},
			</if>
			<if test="contactMobile != null">
				CONTACT_MOBILE = #{contactMobile},
			</if>
			<if test="contactEmail != null">
				CONTACT_EMAIL = #{contactEmail},
			</if>
			<if test="contactAddress != null">
				CONTACT_ADDRESS = #{contactAddress},
			</if>
			<if test="creditCode != null">
				CREDIT_CODE = #{creditCode},
			</if>
			<if test="registAuthority != null">
				REGIST_AUTHORITY = #{registAuthority},
			</if>
			<if test="registFund != null">
				REGIST_FUND = #{registFund},
			</if>
			<if test="businessStartDate != null">
				BUSINESS_START_DATE = #{businessStartDate},
			</if>
			<if test="businessEndDate != null">
				BUSINESS_END_DATE = #{businessEndDate},
			</if>
			<if test="businessScope != null">
				BUSINESS_SCOPE = #{businessScope},
			</if>
			<if test="businessAddress != null">
				BUSINESS_ADDRESS = #{businessAddress},
			</if>
			<if test="businessPostCode != null">
				BUSINESS_POST_CODE = #{businessPostCode},
			</if>
			<if test="overseasBranch != null">
				OVERSEAS_BRANCH = #{overseasBranch},
			</if>
			<if test="branchCountry != null">
				BRANCH_COUNTRY = #{branchCountry},
			</if>
			<if test="branchAddress != null">
				BRANCH_ADDRESS = #{branchAddress},
			</if>
			<if test="branchName != null">
				BRANCH_NAME = #{branchName},
			</if>
			<if test="branchBusinessScope != null">
				BRANCH_BUSINESS_SCOPE = #{branchBusinessScope},
			</if>
			<if test="supplierTypeId != null">
				SUPPLIER_TYPE_ID = #{supplierTypeId},
			</if>
			<if test="procurementDepId != null">
				PROCUREMENT_DEP_ID = #{procurementDepId},
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL = #{supplierLevel},
			</if>
			<if test="supplierPledge != null">
				SUPPLIER_PLEDGE = #{supplierPledge},
			</if>
			<if test="supplierRegList != null">
				SUPPLIER_REG_LIST = #{supplierRegList},
			</if>
			<if test="supplierExtractsList != null">
				SUPPLIER_EXTRACTS_LIST = #{supplierExtractsList},
			</if>
			<if test="supplierInspectList != null">
				SUPPLIER_INSPECT_LIST = #{supplierInspectList},
			</if>
			<if test="supplierReviewList != null">
				SUPPLIER_REVIEW_LIST = #{supplierReviewList},
			</if>
			<if test="supplierChangeList != null">
				SUPPLIER_CHANGE_LIST = #{supplierChangeList},
			</if>
			<if test="supplierExitList != null">
				SUPPLIER_EXIT_LIST = #{supplierExitList},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt},
			</if>
			<if test="businessCert != null">
				BUSINESS_CERT = #{businessCert},
			</if>
			<if test="status != null">
				SUPPLIER_STATUS = #{status},
			</if>
			<if test="detailAddress != null">
				DETAIL_ADDRESS=#{detailAddress},
			</if>
			<if test="armyBusinessName != null">
				ARMY_BUSINESS_NAME=#{armyBusinessName},
			</if>
			<if test="armyBusinessFax != null">
				ARMY_BUSINESS_FAX=#{armyBusinessFax},
			</if>
			<if test="armyBuinessMobile != null">
				ARMY_BUSINESS_MOBILE=#{armyBuinessMobile},
			</if>
			<if test="armyBuinessTelephone != null">
				ARMY_BUSINESS_TELEPHONE=#{armyBuinessTelephone},
			</if>
			<if test="armyBuinessEmail != null">
				ARMY_BUSINESS_EMAIL=#{armyBuinessEmail},
			</if>
			<if test="armyBuinessAddress != null">
				ARMY_BUSINESS_ADDRESS=#{armyBuinessAddress},
			</if>
			<if test="auditDate != null">
				AUDIT_DATE=#{auditDate},
			</if>
			
		</set>
		where ID = #{id}
	</update>
	<update id="updateByPrimaryKey" parameterType="ses.model.sms.Supplier">
		update
		T_SES_SMS_SUPPLIER
		set LOGIN_NAME = #{loginName},
		MOBILE = #{mobile},
		PASSWORD = #{password},
		SUPPLIER_NAME = #{supplierName},
		WEBSITE =
		#{website},
		FOUND_DATE = #{foundDate},
		BUSINESS_TYPE = #{businessType},
		ADDRESS = #{address},
		BANK_NAME = #{bankName},
		BANK_ACCOUNT =
		#{bankAccount},
		POST_CODE = #{postCode},
		TAX_CERT = #{taxCert},
		BILL_CERT = #{billCert},
		SECURITY_CERT = #{securityCert},
		BREACH_CERT =
		#{breachCert},
		LEGAL_NAME = #{legalName},
		LEGAL_ID_CARD =
		#{legalIdCard},
		LEGAL_TELEPHONE = #{legalTelephone},
		LEGAL_MOBILE =
		#{legalMobile},
		CONTACT_NAME = #{contactName},
		CONTACT_TELEPHONE =
		#{contactTelephone},
		CONTACT_FAX = #{contactFax},
		CONTACT_MOBILE =
		#{contactMobile},
		CONTACT_EMAIL = #{contactEmail},
		CONTACT_ADDRESS =
		#{contactAddress},
		CREDIT_CODE = #{creditCode},
		REGIST_AUTHORITY =
		#{registAuthority},
		REGIST_FUND = #{registFund},
		BUSINESS_START_DATE =
		#{businessStartDate},
		BUSINESS_END_DATE = #{businessEndDate},
		BUSINESS_SCOPE =
		#{businessScope},
		BUSINESS_ADDRESS =
		#{businessAddress},
		BUSINESS_POST_CODE = #{businessPostCode},
		OVERSEAS_BRANCH = #{overseasBranch},
		BRANCH_COUNTRY = #{branchCountry},
		BRANCH_ADDRESS = #{branchAddress},
		BRANCH_NAME = #{branchName},
		BRANCH_BUSINESS_SCOPE = #{branchBusinessScope},
		SUPPLIER_TYPE_ID =
		#{supplierTypeId},
		SUPPLIER_STATUS = #{status},
		PROCUREMENT_DEP_ID =
		#{procurementDepId},
		SUPPLIER_LEVEL = #{supplierLevel},
		SUPPLIER_PLEDGE
		= #{supplierPledge},
		SUPPLIER_REG_LIST = #{supplierRegList},
		SUPPLIER_EXTRACTS_LIST = #{supplierExtractsList},
		SUPPLIER_INSPECT_LIST = #{supplierInspectList},
		SUPPLIER_REVIEW_LIST =
		#{supplierReviewList},
		SUPPLIER_CHANGE_LIST = #{supplierChangeList},
		SUPPLIER_EXIT_LIST = #{supplierExitList},
		CREATED_AT = #{createdAt},
		UPDATED_AT = #{updatedAt},
		BUSINESS_CERT = #{businessCert},
		DETAIL_ADDRESS=#{detailAddress}
		where ID =
		#{id}
	</update>

	<!-- -->
	<select id="selectLastInsertId" resultType="java.lang.String">
		select ID from
		T_SES_SMS_SUPPLIER t1 where t1.rowid = (select max(rowid) from
		T_SES_SMS_SUPPLIER t2)
	</select>

	<!-- 查询供应商全部信息 -->
	<select id="getSupplier" parameterType="java.lang.String"
		resultMap="supplierMap">
		select * from T_SES_SMS_SUPPLIER where ID = #{id}
	</select>
	<select id="getAllSupplier" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!--select * from T_SES_SMS_SUPPLIER where 1=1如果出错 这是之前的代码2016/11/22 -->
		select * from(
		select t3.name||T2."NAME" as addressName,T1.* from
		T_SES_SMS_SUPPLIER T1
		LEFT JOIN T_SES_BMS_AREA T2 ON T1.ADDRESS=T2.ID
		LEFT JOIN
		T_SES_BMS_AREA T3 ON T2.PARENT_ID=T3.ID )
		where 1=1
		<if test="supplierName != null and supplierName !=''">
			and SUPPLIER_NAME like '%${supplierName}%'
		</if>
		<if test="startDate != null">
			AND CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			AND CREATED_AT &lt;= #{endDate}
		</if>
		<if test="contactName != null and contactName != ''">
			AND CONTACT_NAME = #{contactName}
		</if>
		<if test="status != null">
			and SUPPLIER_STATUS = #{status}
		</if>
		<if test="address != null and address !=''">
			and ADDRESS like '%${address}%'
		</if>
		<if test="stsupplierIds != null">
			<foreach collection="stsupplierIds" item="id" open="and ID not in ("
				close=")" separator=",">
				#{id}
			</foreach>
		</if>
		ORDER BY FOUND_DATE DESC
	</select>
	<update id="updateSupplierProcurementDep" parameterType="ses.model.sms.Supplier">
		update
		T_SES_SMS_SUPPLIER set PROCUREMENT_DEP_ID = #{procurementDepId} where
		ID = #{id}
	</update>

	<sql id="ifCondition">
		<if test="id != null and id!=''">
			and tt1.ID = #{id}
		</if>
		<if test="supplierName != null and supplierName !=''">
			and tt1.SUPPLIER_NAME like '%${supplierName}%'
		</if>
		<if test="sign == 1">
			and (tt1.SUPPLIER_STATUS = 0 or tt1.SUPPLIER_STATUS = 2 or
			tt1.SUPPLIER_STATUS = 7 or
			tt1.SUPPLIER_STATUS = 8)
		</if>
		<if test="sign == 2">
			and (tt1.SUPPLIER_STATUS = 1 or tt1.SUPPLIER_STATUS = 3 or
			tt1.SUPPLIER_STATUS = 4)
		</if>
		<if test="status != null">
			and tt1.SUPPLIER_STATUS = #{status}
		</if>
		<if test="startDate != null">
			and tt1.CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			and tt1.CREATED_AT &lt;= #{endDate}
		</if>
		<if test="contactName != null and contactName != ''">
			and tt1.CONTACT_NAME = #{contactName}
		</if>
		<if test="address != null and address !=''">
			and tt1.ADDRESS like '%${address}%'
		</if>
		<if test="startScore != null and startScore !=''">
			and tt1.SCORE &gt; #{startScore}
		</if>
		<if test="endScore != null and endScore !=''">
			and tt1.SCORE &lt; #{endScore}
		</if>
		<if test="item != null">
			<foreach collection="item" item="id" open="and tt1.id not in ("
				close=")" separator=",">
				#{id}
			</foreach>
		</if>
		<if test="sign == 1">
			ORDER BY decode(SUPPLIER_STATUS,'0',1,'8',2,'7',3,'2',4)
		</if>
		<if test="sign == 2">
			ORDER BY decode(SUPPLIER_STATUS,'1',1,'3',2,'4',3)
		</if>

	</sql>

	<!-- 根据审核状态获取条数 -->
	<select id="getCount" parameterType="ses.model.sms.Supplier"
		resultType="java.lang.Integer">
		select count(*) from T_SES_SMS_SUPPLIER tt1
		where 1=1
		<include refid="ifCondition" />
	</select>

	<!-- 查询供应商及条件查询 -->
	<select id="findSupplier" parameterType="ses.model.sms.Supplier"
		resultMap="findSupplierMap">
		select *
		from T_SES_SMS_SUPPLIER tt1
		where 1=1
		<include refid="ifCondition" />
		order by SCORE DESC
	</select>

	<resultMap type="ses.model.sms.Supplier" id="findSupplierMap"
		extends="BaseResultMap">
		<collection property="listSupplierTypeRelates" ofType="ses.model.sms.SupplierTypeRelate">
			<result column="ID_" property="id" />
			<result column="NAME_" property="supplierTypeName" />
		</collection>
	</resultMap>

	<!--供应商审核-查询供应商 -->
	<select id="findSupplierAll" parameterType="ses.model.sms.Supplier"
		resultMap="findSupplierMap">
		select
		t1. *,
		t2.ID as ID_ ,
		t3.NAME as NAME_
		from(
		select
		*
		from(
		select
		tmp_page.*, ROWNUM row_id
		from(
		select
		*
		from
		T_SES_SMS_SUPPLIER tt1
		where
		1=1
		<include refid="ifCondition" />
		) tmp_page
		where
		ROWNUM &lt;= (#{page} * #{rows})
		)
		where
		row_id &gt;
		((#{page} - 1) * #{rows})
		) t1
		left join
		T_SES_SMS_SUPPLIER_TYPE_RELATE
		t2
		ON
		t1. ID = t2.SUPPLIER_ID
		left join
		T_SES_BMS_DICTIONARY_DATA t3
		ON
		t2.SUPPLIER_TYPE_ID = t3.CODE
	</select>


	<select id="querySupplierbytypeAndCategoryIds" parameterType="ses.model.sms.Supplier"
		resultMap="findSupplierMap">
		select * from(
		select "NVL"(T4. NAME, T3. NAME) as NAME ,
		t1.typeId,t1.categoryId,t2.*
		from(
		select id,
		wm_concat(DISTINCT(categoryId)) as
		categoryId,wm_concat(DISTINCT(typeId)) as typeId from (
		SELECT
		T1.*,t2.CATEGORY_ID as categoryId ,t3.SUPPLIER_TYPE_ID as typeId FROM
		"JDCG"."T_SES_SMS_SUPPLIER" t1
		left join T_SES_SMS_SUPPLIER_TYPE_RELATE
		t3 on t1. ID = t3.SUPPLIER_ID
		LEFT JOIN (
		SELECT T1. ID, CATEGORY_ID
		FROM "JDCG"."T_SES_SMS_SUPPLIER" t1
		RIGHT JOIN T_SES_SMS_SUPPLIER_ITEM
		t2 ON T1. ID = T2.SUPPLIER_ID
		) t2 ON t1.id =t2.id
		) GROUP BY id )t1
		left JOIN T_SES_SMS_SUPPLIER t2 on t1.id=t2.id
		<!--查询地址 start 如果抱错就去掉这个 注释address条件查询 现在查询的是关联area表的name字段 在上面也加了一个t4.NAME -->
		LEFT JOIN T_SES_BMS_AREA T3 ON T2.ADDRESS=T3.ID
		LEFT JOIN
		T_SES_BMS_AREA T4 ON T3.PARENT_ID=T4.ID
		<!--end -->
		) where 1=1 and
		SUPPLIER_NAME is not null
		<if test="supplierName != null and supplierName !=''">
			and SUPPLIER_NAME like '%${supplierName}%'
		</if>
		<if test="startDate != null">
			AND CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			AND CREATED_AT &lt;= #{endDate}
		</if>
		<if test="contactName != null and contactName != ''">
			AND CONTACT_NAME like '%${contactName}%'
		</if>
		<if test="status != null">
			and SUPPLIER_STATUS = #{status}
		</if>
		<if test="address != null and address !=''">
			and NAME like '%${address}%'
		</if>
		<!-- <if test="address != null and address !=''"> and ADDRESS like '%${address}%' 
			</if> -->

		<if test="itemType != null and itemType != ''">
			<foreach item="itemType" index="index" collection="itemType"
				open="" separator="" close="">
				and "INSTR"(typeId, #{itemType})>0
			</foreach>
		</if>
		<if test="item != null and item!= ''">
			<foreach item="item" index="index" collection="item" open=""
				separator="" close="">
				and "INSTR"(categoryId, #{item})>0
			</foreach>
		</if>
		<if test="scoreStart != null and scoreStart != '' ">
			and SCORE &gt;= #{scoreStart} 
		</if>
		<if test="scoreEnd != null and scoreEnd != ''">
			and SCORE &lt; #{scoreEnd} 
		</if>
		ORDER BY FOUND_DATE DESC
	</select>


	<select id="querySupplier" parameterType="ses.model.sms.Supplier"
		resultMap="findSupplierMap">
		select * from(
		select
		t1.*,
		t2.ID as SUPPLIER_RELATE_ID,
		t2.SUPPLIER_ID,
		t2.SUPPLIER_TYPE_ID as SUPPLIER_TYPE_ID_,
		t2.CREATED_AT as CREATED_AT_,
		t2.UPDATED_AT as UPDATED_AT_,
		t3.NAME as SUPPLIER_TYPE_NAME
		from
		T_SES_SMS_SUPPLIER t1
		left join T_SES_SMS_SUPPLIER_TYPE_RELATE t2 on
		t1. ID = t2.SUPPLIER_ID
		left join T_SES_SMS_SUPPLIER_TYPE t3 on
		t2.SUPPLIER_TYPE_ID = t3. ID
		)
		t4 where 1=1
		<if test="supplierName != null and supplierName !=''">
			and t4.SUPPLIER_NAME like '%${supplierName}%'
		</if>
		<if test="startDate != null">
			AND t4.CREATED_AT &gt;= #{startDate}
		</if>
		<if test="endDate != null">
			AND t4.CREATED_AT &lt;= #{endDate}
		</if>
		<if test="contactName != null and contactName != ''">
			AND t4.CONTACT_NAME = #{contactName}
		</if>
		<if test="status != null">
			and t4.SUPPLIER_STATUS = #{status}
		</if>
		<if test="address != null and address !=''">
			and t4.ADDRESS like '%${address}%'
		</if>
		<if test="supplierType != null and supplierType != ''">
			AND t4.SUPPLIER_TYPE_NAME like #{supplierType}
		</if>
		ORDER BY FOUND_DATE DESC
	</select>



	<!-- 根据供应商Id更新状态 -->
	<update id="updateStatus" parameterType="ses.model.sms.Supplier">
		update
		T_SES_SMS_SUPPLIER
		set
		SUPPLIER_STATUS = #{status}
		where ID = #{id}
	</update>
	<update id="updateSupplierInspectListById" parameterType="ses.model.sms.Supplier">
		update
		T_SES_SMS_SUPPLIER
		set
		SUPPLIER_INSPECT_LIST = #{supplierInspectList}
		where ID = #{id}
	</update>

	<resultMap type="ses.model.sms.Supplier" id="supplierMap"
		extends="BaseResultMap">
		<association property="supplierMatEng"
			select="ses.dao.sms.SupplierMatEngMapper.getMatEngBySupplierId"
			column="ID" />
		<association property="supplierMatSe"
			select="ses.dao.sms.SupplierMatServeMapper.getMatSeBySupplierId"
			column="ID" />
		<association property="supplierMatPro"
			select="ses.dao.sms.SupplierMatProMapper.getMatProBySupplierId"
			column="ID" />
		<association property="supplierMatSell"
			select="ses.dao.sms.SupplierMatSellMapper.getMatSellBySupplierId"
			column="ID" />
		<collection property="listSupplierFinances"
			select="ses.dao.sms.SupplierFinanceMapper.findFinanceBySupplierId"
			column="ID" />
		<collection property="listSupplierStockholders"
			select="ses.dao.sms.SupplierStockholderMapper.findStockholderBySupplierId"
			column="ID" />
		<collection property="listSupplierTypeRelates"
			select="ses.dao.sms.SupplierTypeRelateMapper.findSupplierTypeBySupplierId"
			column="ID" />
		<collection property="listSupplierItems"
			select="ses.dao.sms.SupplierItemMapper.findSupplierItemBySupplierId"
			column="ID" />
		<collection property="listSupplierProducts"
			select="ses.dao.sms.SupplierProductsMapper.findSupplierProductsBySupplierId"
			column="ID" />
	</resultMap>

	<update id="updateScore" parameterType="ses.model.sms.Supplier">
		update T_SES_SMS_SUPPLIER
		set SCORE = #{score} where ID = #{id}
	</update>

	<!-- 供应商抽取集合 -->
	<!-- AND ee.ADDRESS = #{address} -->
	<!-- AND EE.EXPERTS_FROM =#{expertsFrom} -->
	<!-- AND EE.SUPPLIER_STATUS = 1 -->
	<!-- AND IS_BLACK = 0 -->
	<select id="listExtractionExpert" parameterType="ses.model.sms.SupplierCondition"
		resultMap="findSupplierMap">
		select * from(
		select t1.typeId,t1.categoryId,t2.* from(
		select id,
		wm_concat(DISTINCT(categoryId)) as
		categoryId,wm_concat(DISTINCT(typeId)) as typeId from (
		SELECT
		T1.*,t2.CATEGORY_ID as categoryId ,t3.SUPPLIER_TYPE_ID as typeId FROM
		"JDCG"."T_SES_SMS_SUPPLIER" t1
		left join T_SES_SMS_SUPPLIER_TYPE_RELATE
		t3 on t1. ID = t3.SUPPLIER_ID
		LEFT JOIN (
		SELECT T1. ID, CATEGORY_ID
		FROM "JDCG"."T_SES_SMS_SUPPLIER" t1
		RIGHT JOIN T_SES_SMS_SUPPLIER_ITEM
		t2 ON T1. ID = T2.SUPPLIER_ID
		) t2 ON t1.id =t2.id
		) GROUP BY id )t1
		left JOIN T_SES_SMS_SUPPLIER t2 on t1.id=t2.id
		) where 1=1
		<if test="address != null and address !=''">
			and ADDRESS like '%${address}%'
		</if>
		<foreach item="item" collection="conTypes">
			<if
				test="item.isMulticondition != null and item.isMulticondition != 0 and item.categorySplit != null">
				<if test="item.isMulticondition==2">
					<if test="item.supplierTypeId !=null and item.supplierTypeId != '' ">
						<foreach item="type" collection="item.supplierTypeId">
							and "INSTR"(typeId,
							#{type})>0
						</foreach>
					</if>
					<!-- and itemType=3 or itemType=4 -->
					<if test="item.categorySplit != null and item.categorySplit != ''">
						<foreach item="category" index="index" collection="item.categorySplit"
							open="" separator="" close="">
							and "INSTR"(categoryId, #{category})>0
						</foreach>
					</if>
				</if>
				<if test="item.isMulticondition==1">
					<if test="item.supplierTypeId !=null and item.supplierTypeId != '' ">
						<foreach item="type" collection="item.supplierTypeId">
							or "INSTR"(typeId,
							#{type})>0
						</foreach>
					</if>
					<!-- and itemType=3 or itemType=4 -->
					<if test="item.categorySplit != null and item.categorySplit != ''">
						<foreach item="category" index="index" collection="item.categorySplit"
							open="" separator="" close="">
							or "INSTR"(categoryId, #{category})>0
						</foreach>
					</if>

				</if>
			</if>
		</foreach>
		ORDER BY FOUND_DATE DESC
	</select>

	<select id="findLoginName" resultType="String">
		select t1.LOGIN_NAME from
		T_SES_SMS_SUPPLIER t1
	</select>

	<select id="getByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		T_SES_SMS_SUPPLIER t1
		<where>
			<if test="loginName != null">
				and t1.LOGIN_NAME = #{loginName}
			</if>
		</where>
	</select>

	<!-- 关联 -->
	<select id="getByExtRelateProjectId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT
		ss.*
		FROM
		T_SES_SMS_SUPPLIER_EXT_RELATE er
		INNER JOIN
		T_SES_SMS_SUPPLIER ss ON er.SUPPLIER_ID = SS."ID"
		WHERE
		ER.STATUS_COUNT
		= 0
		AND ER.OPERATING_TYPE = 1
		AND ER.PROJECT_ID = #{projectId}
	</select>

	<select id="queryByName" parameterType="String"  resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List"/>
	from T_SES_SMS_SUPPLIER where LOGIN_NAME = #{name}
	</select>
	
	<!--校验查询  -->
	<select id="query" parameterType="ses.model.sms.Supplier" resultMap="BaseResultMap">
		select
	<include refid="Base_Column_List"/>
	from T_SES_SMS_SUPPLIER
	<where>
		1=1
			<if test="mobile != null">
				and	MOBILE = #{mobile}
			</if>
			<if test="creditCode != null">
				and	CREDIT_CODE=#{creditCode}
			</if>
			<if test="legalIdCard != null">
				and LEGAL_ID_CARD = #{legalIdCard}
			</if>
			<if test="legalTelephone != null">
				and LEGAL_TELEPHONE = #{legalTelephone}
			</if>
			
	</where>
	
	</select>



</mapper>