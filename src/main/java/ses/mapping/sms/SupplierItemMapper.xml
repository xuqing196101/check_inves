<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.sms.SupplierItemMapper">
	<resultMap id="BaseResultMap" type="ses.model.sms.SupplierItem">
		<id column="ID" property="id" />
		<result column="SUPPLIER_ID" property="supplierId" />
		<result column="CATEGORY_ID" property="categoryId" />
		<result column="SUPPLIER_TYPE_RELATE_ID" property="supplierTypeRelateId" />
		<result column="STATUS" property="status" />
		<result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP"/>
		<result column="CATE_LEVEL" property="level"/>
		<result column="DIY_LEVEL" property="diyLevel"/>
		<result column="CERT_CODE" property="certCode"/>
		<result column="QUALIFICATION_TYPE" property="qualificationType"/>
		<result column="PROFESS_TYPE"   property="professType"/>
		<result column="NODE_LEVEL"   property="nodeLevel"/>
		<result column="IS_RETURNED" property="isReturned"/>
	</resultMap>
	<sql id="Base_Column_List">
		ID, SUPPLIER_ID, CATEGORY_ID, SUPPLIER_TYPE_RELATE_ID, STATUS, CREATED_AT, UPDATED_AT, CATE_LEVEL, CERT_CODE, DIY_LEVEL, QUALIFICATION_TYPE,PROFESS_TYPE, NODE_LEVEL, IS_RETURNED
	</sql>
	
	<sql id="Base_Column">
		s.ID, s.SUPPLIER_ID, s.CATEGORY_ID, s.SUPPLIER_TYPE_RELATE_ID, s.STATUS, s.CREATED_AT, s.UPDATED_AT, s.CATE_LEVEL, s.CERT_CODE, s.DIY_LEVEL, s.QUALIFICATION_TYPE,s.PROFESS_TYPE, c.CODE
	</sql>
	
	<select id="getSupplierItem" parameterType="java.lang.String" resultMap="BaseResultMap">
  	  select
		*
		from T_SES_SMS_SUPPLIER_ITEM
		where SUPPLIER_ID = #{supplierId}
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER_ITEM
		where ID = #{id}
	</select>  
	<!--获取所有的供应商id  -->
   <select id="getSupplierId"  resultType="java.lang.String">
		SELECT SUPPLIER_ID FROM T_SES_SMS_SUPPLIER_ITEM GROUP BY SUPPLIER_ID
	</select>
	<!--获取所有的品目和供应商id  -->
	<select id="getItemBySupplierId"  resultType="java.lang.String">
		SELECT wmsys.wm_concat(CATEGORY_ID) FROM T_SES_SMS_SUPPLIER_ITEM GROUP BY SUPPLIER_ID
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from T_SES_SMS_SUPPLIER_ITEM
		where ID = #{id}
	</delete>
	<insert id="insert" parameterType="ses.model.sms.SupplierItem">
		insert into T_SES_SMS_SUPPLIER_ITEM (ID, SUPPLIER_ID, CATEGORY_ID,
		SUPPLIER_TYPE_RELATE_ID, STATUS, CREATED_AT,
		UPDATED_AT, NODE_LEVEL)
		values (#{id}, #{supplierId}, #{categoryId},
		#{supplierTypeRelateId}, #{status}, #{createdAt,jdbcType=TIMESTAMP},
		#{updatedAt,jdbcType=TIMESTAMP},#{nodeLevel, jdbcType=DECIMAL})
	</insert>
	<insert id="insertSelective" parameterType="ses.model.sms.SupplierItem">
		insert into T_SES_SMS_SUPPLIER_ITEM
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="categoryId != null">
				CATEGORY_ID,
			</if>
			<if test="supplierTypeRelateId != null">
				SUPPLIER_TYPE_RELATE_ID,
			</if>
			<if test="status != null">
				STATUS,
			</if>
			<if test="createdAt != null">
				CREATED_AT,
			</if>
			<if test="updatedAt != null">
				UPDATED_AT,
			</if>
			<if test="level != null">
				CATE_LEVEL,
			</if>
			<if test="diyLevel != null">
				DIY_LEVEL,
			</if>
			<if test="certCode != null">
				CERT_CODE,
			</if>
			<if test="qualificationType != null">
				QUALIFICATION_TYPE,
			</if>
			<if test="professType != null">
				PROFESS_TYPE,
			</if>
			<if test="nodeLevel != null">
				NODE_LEVEL,
			</if>

		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="supplierId != null">
				#{supplierId},
			</if>
			<if test="categoryId != null">
				#{categoryId},
			</if>
			<if test="supplierTypeRelateId != null">
				#{supplierTypeRelateId},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="level != null">
				#{level},
			</if>
			<if test="diyLevel != null">
				#{diyLevel},
			</if>
			<if test="certCode != null">
				#{certCode},
			</if>
			<if test="qualificationType != null">
				#{qualificationType},
			</if>
			<if test="professType != null">
				#{professType},
			</if>
			<if test="nodeLevel != null">
				#{nodeLevel}
			</if>
		</trim>
	
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="ses.model.sms.SupplierItem">
		update T_SES_SMS_SUPPLIER_ITEM
		<set>
			<if test="supplierId != null">
				SUPPLIER_ID = #{supplierId},
			</if>
			<if test="categoryId != null">
				CATEGORY_ID = #{categoryId},
			</if>
			<if test="supplierTypeRelateId != null">
				SUPPLIER_TYPE_RELATE_ID = #{supplierTypeRelateId},
			</if>
			<if test="status != null">
				STATUS = #{status},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="level != null">
				CATE_LEVEL = #{level},
			</if>
			<if test="diyLevel != null">
				DIY_LEVEL = #{diyLevel},
			</if>
			<if test="certCode != null">
				CERT_CODE = #{certCode},
			</if>
			<if test="qualificationType != null">
				QUALIFICATION_TYPE = #{qualificationType},
			</if>
			<if test="professType != null">
				PROFESS_TYPE = #{professType},
			</if>
			<if test="nodeLevel != null">
				NODE_LEVEL = #{nodeLevel},
			</if>
			<if test="isReturned != null">
				IS_RETURNED = #{isReturned},
			</if>
		</set>
		where ID = #{id}
	</update>
	<update id="updateByPrimaryKey" parameterType="ses.model.sms.SupplierItem">
		update T_SES_SMS_SUPPLIER_ITEM
		set SUPPLIER_ID = #{supplierId},
		CATEGORY_ID = #{categoryId},
		SUPPLIER_TYPE_RELATE_ID = #{supplierTypeRelateId},
		STATUS = #{status},
		CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
		UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP}
		where ID = #{id}
	</update>
	
	<select id="findSupplierItemBySupplierId" parameterType="java.lang.String" resultMap="findSupplierItemBySupplierIdMap">
		select
			t1.*,
			t2.NAME as CATEGORY_NAME,
			t3.ID as ID_,
			t3.ITEM_ID,
			t3.SUPPLIER_ID as SUPPLIER_ID_,
			t3.NAME,
			t3.BRAND,
			t3.MODELS,
			t3.PRO_SIZE,
			t3.ORGIN,
			t3.EXPIRATION_DATE,
			t3.PRODUCER,
			t3.REFERENCE_PRICE,
			t3.PRODUCT_PIC,
			t3.QR_CODE,
			t3.CREATED_AT as CREATED_AT_,
			t3.UPDATED_AT as UPDATED_AT_
		from
			T_SES_SMS_SUPPLIER_ITEM t1
			left join T_SES_BMS_CATEGORY t2
			on t1.CATEGORY_ID = t2.ID
			left join T_SES_SMS_SUPPLIER_PRODUCTS t3
			on t1.ID = t3.ITEM_ID
		where t1.SUPPLIER_ID = #{supplierId}
	</select>
	<resultMap type="ses.model.sms.SupplierItem" id="findSupplierItemBySupplierIdMap" extends="BaseResultMap">
		<collection property="listSupplierProducts" ofType="ses.model.sms.SupplierProducts">
			<id column="ID_" property="id"/>
			<result column="ITEM_ID" property="itemId"/>
			<result column="SUPPLIER_ID_" property="supplierId"/>
			<result column="NAME" property="name"/>
			<result column="BRAND" property="brand"/>
			<result column="MODELS" property="models"/>
			<result column="PRO_SIZE" property="proSize"/>
			<result column="ORGIN" property="orgin"/>
			<result column="EXPIRATION_DATE" property="expirationDate"/>
			<result column="PRODUCER" property="producer"/>
			<result column="REFERENCE_PRICE" property="referencePrice"/>
			<result column="PRODUCT_PIC" property="productPic"/>
			<result column="QR_CODE" property="qrCode"/>
			<result column="CREATED_AT_" property="createdAt"/>
			<result column="UPDATED_AT_" property="updatedAt"/>
		</collection>
	</resultMap>
	<select id="findSupplierItemBySupplierIdAndType" parameterType="ses.model.sms.SupplierItem" resultMap="BaseResultMap">
		select
			t1.*,
			t2.NAME as CATEGORY_NAME
		from
			T_SES_SMS_SUPPLIER_ITEM t1
			join T_SES_BMS_CATEGORY t2
			on t1.CATEGORY_ID = t2.ID
		where t1.SUPPLIER_ID = #{supplierId}
		and t1.SUPPLIER_TYPE_RELATE_ID = #{supplierTypeRelateId}
	</select>
	
	<delete id="deleteBySupplierId" parameterType="java.lang.String">
		delete from T_SES_SMS_SUPPLIER_ITEM where SUPPLIER_ID = #{supplierId}
	</delete>
	
	<select id="findByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
		select * from T_SES_SMS_SUPPLIER_ITEM
		<where>
		1=1
			<if test="categoryId != null and categoryId != ''">
				and CATEGORY_ID = #{categoryId}
			</if>
			<if test="supplierId != null and supplierId != ''">
				and SUPPLIER_ID = #{supplierId}
			</if>
			<if test="type != null and type != ''">
				and SUPPLIER_TYPE_RELATE_ID = #{type}
			</if>
			<if test="isReturned != null">
				and IS_RETURNED = #{isReturned}
			</if>
		</where>
	</select>
	
	<select id="findByMapByNull" parameterType="java.util.Map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from T_SES_SMS_SUPPLIER_ITEM
        <where>
            CERT_CODE IS NOT NULL
            <if test="categoryId != null and categoryId != ''">
                and CATEGORY_ID = #{categoryId}
            </if>
            <if test="supplierId != null and supplierId != ''">
                and SUPPLIER_ID = #{supplierId}
            </if>
            <if test="type != null and type != ''">
                and SUPPLIER_TYPE_RELATE_ID = #{type}
            </if>
            
        </where>
    </select>
	
	<select id="selectByMap" parameterType="java.util.Map" resultMap="BaseResultMap" flushCache="true">
		SELECT DISTINCT
		<include refid="Base_Column"/>
		FROM
			T_SES_SMS_SUPPLIER_ITEM s
		INNER JOIN
  			T_SES_BMS_CATEGORY c
		ON
  			s.CATEGORY_ID = c.ID
		WHERE
			s.CATEGORY_ID not in (select PARENT_ID from T_SES_BMS_CATEGORY where IS_PUBLISH = 0)
			<if test="supplierId != null">
				AND s.SUPPLIER_ID = #{supplierId}
			</if>
			<if test="type != null">
				AND s.SUPPLIER_TYPE_RELATE_ID = #{type}
			</if>
			<if test="isReturned != null">
				and IS_RETURNED = #{isReturned}
			</if>
			order by c.CODE ASC
	</select>
	
	<delete id="deleteByMap" parameterType="java.util.Map">
		delete from T_SES_SMS_SUPPLIER_ITEM
		<where>
			<if test="categoryId != null and categoryId != ''">
				and CATEGORY_ID = #{categoryId}
			</if>
			<if test="type != null and type != ''">
				and SUPPLIER_TYPE_RELATE_ID = #{type}
			</if>
			<if test="supplierId != null and supplierId != ''">
				and SUPPLIER_ID = #{supplierId}
			</if>
			<if test="isReturned != null">
				and IS_RETURNED = #{isReturned}
			</if>
		</where>
	</delete>
	
	<delete id="deleteRelate" parameterType="String">
			delete from
				T_SES_SMS_SUPPLIER_ITEM
			where SUPPLIER_TYPE_RELATE_ID = #{relateId} and  SUPPLIER_ID = #{supplierId}
	</delete>
	
	<select id="getBySupplierIdCategoryId"  resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
				from
				T_SES_SMS_SUPPLIER_ITEM
				where CATEGORY_ID = #{categoryId}  and  SUPPLIER_ID = #{supplierId} and SUPPLIER_TYPE_RELATE_ID=#{type}
	</select>
	<select id="getBySupplierIdCategoryIdIsNotReturned"  resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
				from
				T_SES_SMS_SUPPLIER_ITEM
				where CATEGORY_ID = #{categoryId}  
				and  SUPPLIER_ID = #{supplierId} 
				and SUPPLIER_TYPE_RELATE_ID = #{type}
				and IS_RETURNED != 1
	</select>
	
	<!-- 根据供应商id和类型查询 -->
	<select id="queryBySupplierIdAndType"  resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
				from
				T_SES_SMS_SUPPLIER_ITEM
				where SUPPLIER_ID = #{supplierId} and SUPPLIER_TYPE_RELATE_ID=#{type}
	</select> 
	
	<!-- 品目id查询类型 -->
 	<select id="selectByCategoryId" parameterType="String" resultMap="BaseResultMap">
		SELECT
			<include refid="Base_Column_List"></include>
		FROM
			T_SES_SMS_SUPPLIER_ITEM
		WHERE
			CATEGORY_ID = #{categoryId}
	</select>
	
	<!-- 品目id 供应商 类型 查询类型 -->
    <select id="findSupplierIdByCategoryId" parameterType="String" resultType="String">
        SELECT
            SUPPLIER_ID
        FROM
            T_SES_SMS_SUPPLIER_ITEM
        WHERE
            CATEGORY_ID = #{categoryId} 
    </select>
	
	<!-- 统计供应商类型数量 物资销售、物资生产、工程、服务 -->
	<select id="findAnalyzeSupplierCateType" parameterType="String" resultType="java.math.BigDecimal">
	     SELECT COUNT(DISTINCT(T.SUPPLIER_ID))
		      FROM T_SES_SMS_SUPPLIER S
		      LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE T
		        ON T.SUPPLIER_ID = S.ID
		     WHERE T.SUPPLIER_TYPE_ID = #{cateType}
		       AND (S.SUPPLIER_STATUS = 1 OR S.SUPPLIER_STATUS = 4 OR
		           S.SUPPLIER_STATUS = 5 OR S.SUPPLIER_STATUS = 6 OR
		           S.SUPPLIER_STATUS = 7 OR S.SUPPLIER_STATUS = 8)
		       AND S.IS_PROVISIONAL = '0'
		       AND S.IS_DELETED = 0
	</select>
	
	<!-- 查询 -->
	<select id="selectSupByCateType" parameterType="Map">
			SELECT DISTINCT (T.SUPPLIER_ID)
			  FROM T_SES_SMS_SUPPLIER_ITEM T
			  LEFT JOIN T_BSS_OB_SUPPLIER S
			    ON T.SUPPLIER_ID = S.ID
			 WHERE T.SUPPLIER_TYPE_RELATE_ID = 'PROJECT'
	</select>
	
	<!-- 查询供应商选择了多少个产品类别 -->
	<select id="selectRegSupCateCount" resultType="java.lang.Integer" parameterType="java.lang.String">
		SELECT COUNT(T.ID)
		  FROM T_SES_SMS_SUPPLIER_ITEM T
		   WHERE T.NODE_LEVEL = 3
		   <if test="supplierId != null and supplierId != ''">
			   AND  T.SUPPLIER_ID = #{supplierId}
		   </if>
	</select>
	
	<!-- 获取该供应商品目的类型 -->
	<select id="findSupplierTypeBySupplierId" resultType="String" parameterType="String">
	<!--SELECT SUPPLIER_TYPE_RELATE_ID from T_SES_SMS_SUPPLIER_ITEM where SUPPLIER_ID=#{supplierId}
     GROUP BY SUPPLIER_TYPE_RELATE_ID-->
      SELECT T.SUPPLIER_TYPE_RELATE_ID
        FROM (SELECT T.SUPPLIER_TYPE_ID FROM T_SES_SMS_SUPPLIER_TYPE_RELATE T
              WHERE T.SUPPLIER_ID = #{supplierId}) R
        LEFT JOIN T_SES_SMS_SUPPLIER_ITEM T
          ON R.SUPPLIER_TYPE_ID = T.SUPPLIER_TYPE_RELATE_ID
       WHERE T.SUPPLIER_ID = #{supplierId}
       GROUP BY T.SUPPLIER_TYPE_RELATE_ID
	</select>

	<!-- 获取该供应商通过的类型 -->
	<select id="findPassSupplierTypeBySupplierId" resultType="String" parameterType="Map">
		SELECT E.SUPPLIER_TYPE_RELATE_ID
		  FROM (SELECT A.SUPPLIER_TYPE_RELATE_ID
			  FROM (SELECT T.SUPPLIER_TYPE_ID FROM T_SES_SMS_SUPPLIER_TYPE_RELATE T
              WHERE T.SUPPLIER_ID = #{supplierId}) R
              LEFT JOIN  T_SES_SMS_SUPPLIER_ITEM A
                ON R.SUPPLIER_TYPE_ID = A.SUPPLIER_TYPE_RELATE_ID
			 WHERE
                <if test="items_sales_page != null and items_sales_page != ''">
                    A.SUPPLIER_TYPE_RELATE_ID = #{type} AND
                </if>
                <if test="items_product_page != null and items_product_page != '' and type != null and type != ''">
                    A.SUPPLIER_TYPE_RELATE_ID <![CDATA[<>]]> #{type} AND
                </if>
			  NOT EXISTS
			 (SELECT T.SUPPLIER_ID, T.AUDIT_FIELD
					  FROM T_SES_SMS_SUPPLIER_AUDIT T
					 WHERE A.CATEGORY_ID = T.AUDIT_FIELD
					   AND T.SUPPLIER_ID = #{supplierId}
                        <if test="items_product_page != null and items_product_page != ''">
                            AND T.AUDIT_TYPE = #{items_product_page}
                        </if>
                        <if test="items_sales_page != null and items_sales_page != ''">
                            AND T.AUDIT_TYPE = #{items_sales_page}
                        </if>
					   AND (T.STATUS = 0 OR T.STATUS = -2 OR T.STATUS = -3 OR T.STATUS = 9)
					   AND T.IS_DELETED = 0)
			   AND A.SUPPLIER_ID = #{supplierId}
			   AND A.NODE_LEVEL = 3
			 GROUP BY A.SUPPLIER_TYPE_RELATE_ID) E
	 WHERE E.SUPPLIER_TYPE_RELATE_ID NOT IN
		   (SELECT DA.CODE
			  FROM T_SES_SMS_SUPPLIER_AUDIT T
			  LEFT JOIN T_SES_BMS_DICTIONARY_DATA DA
				ON T.AUDIT_FIELD = DA.ID
			 WHERE T.SUPPLIER_ID = #{supplierId}
			   AND T.AUDIT_TYPE = #{supplierType_page})
	</select>

	<!-- 查询供应商选择的小类节点 -->
	<select id="selectRegSupCateOfLastNode" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List"/>
		FROM T_SES_SMS_SUPPLIER_ITEM T
		WHERE T.SUPPLIER_ID = #{supplierId}
		AND T.NODE_LEVEL = 3
	</select>

    <!--通过条件查询供应商审核通过的产品类别-->
    <select id="selectPassItemByCond" resultMap="BaseResultMap" parameterType="Map">
	  	SELECT A.ID, A.SUPPLIER_TYPE_RELATE_ID, A.CATEGORY_ID
			FROM T_SES_SMS_SUPPLIER_ITEM A
                INNER JOIN T_SES_BMS_CATEGORY C
                ON A.CATEGORY_ID = C.ID
		    WHERE
            <if test="type != null and type !=''">
                A.SUPPLIER_TYPE_RELATE_ID = #{type} AND
            </if>
            NOT EXISTS
		   (SELECT T.SUPPLIER_ID, T.AUDIT_FIELD
					FROM T_SES_SMS_SUPPLIER_AUDIT T
				   WHERE A.CATEGORY_ID = T.AUDIT_FIELD
					 AND T.SUPPLIER_ID = #{supplierId}
					<if test="items_product_page != null and items_product_page != ''">
						AND T.AUDIT_TYPE = #{items_product_page}
					</if>
					<if test="items_sales_page != null and items_sales_page != ''">
						AND T.AUDIT_TYPE = #{items_sales_page}
					</if>
					 AND (T.STATUS = 0 OR T.STATUS = -2 OR T.STATUS = -3 OR T.STATUS = 9)
					 AND T.IS_DELETED = 0)
			 AND A.SUPPLIER_ID = #{supplierId}
			 AND A.NODE_LEVEL = 3
            ORDER BY C.CODE ASC
    </select>

    <!--查询供应商类型下所有选择的产品类别数量-->
    <select id="selectCountBySupTypeList" resultMap="BaseResultMap" parameterType="Map">
       <!-- SELECT
        <include refid="Base_Column_List" />
        FROM T_SES_SMS_SUPPLIER_ITEM T
        WHERE T.NODE_LEVEL = 3
        <if test="supplierId != null and supplierId != ''">
            AND T.SUPPLIER_ID = #{supplierId}
        </if>
        <if test="type != null and type != ''">
            AND T.SUPPLIER_TYPE_RELATE_ID = #{type}
        </if>-->

		SELECT
        T.ID, T.SUPPLIER_ID, T.CATEGORY_ID, T.SUPPLIER_TYPE_RELATE_ID,
        T.STATUS, T.CREATED_AT, T.UPDATED_AT, T.CATE_LEVEL,
        T.CERT_CODE, T.DIY_LEVEL, T.QUALIFICATION_TYPE,T.PROFESS_TYPE,T.NODE_LEVEL
		FROM
        (SELECT T.SUPPLIER_TYPE_ID FROM T_SES_SMS_SUPPLIER_TYPE_RELATE T
          WHERE T.SUPPLIER_ID = #{supplierId}) R
		LEFT JOIN T_SES_SMS_SUPPLIER_ITEM T
		ON R.SUPPLIER_TYPE_ID = T.SUPPLIER_TYPE_RELATE_ID
		WHERE T.NODE_LEVEL = 3
		<if test="supplierId != null and supplierId != ''">
			AND T.SUPPLIER_ID = #{supplierId}
		</if>
		<if test="type != null and type != ''">
			AND T.SUPPLIER_TYPE_RELATE_ID = #{type}
		</if>

	</select>
	
	<!--统计供应商品目-->
	<select id="countItemsBySuppIdAndCateIds" resultType="int">
		SELECT COUNT(*) FROM T_SES_SMS_SUPPLIER_ITEM
		WHERE SUPPLIER_ID = #{supplierId}
		AND SUPPLIER_TYPE_RELATE_ID = #{code}
		<if test="catIds != null and catIds.size != 0">
			AND CATEGORY_ID IN
			<foreach collection="catIds" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		AND IS_RETURNED != 1
	</select>

</mapper>