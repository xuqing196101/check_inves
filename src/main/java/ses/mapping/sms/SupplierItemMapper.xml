<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.sms.SupplierItemMapper">
	<resultMap id="BaseResultMap" type="ses.model.sms.SupplierItem">
		<id column="ID" property="id" />
		<result column="SUPPLIER_ID" property="supplierId" />
		<result column="CATEGORY_ID" property="categoryId" />
		<result column="SUPPLIER_TYPE_RELATE_ID" property="supplierTypeRelateId" />
		<result column="STATUS" property="status" />
		<result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP"/>
		<result column="UPDATED_AT" property="updatedAt" jdbcType="TIMESTAMP"/>
		<!-- <result column="CATEGORY_NAME" property="categoryName" /> -->
	</resultMap>
	<sql id="Base_Column_List">
		ID, SUPPLIER_ID, CATEGORY_ID, SUPPLIER_TYPE_RELATE_ID, STATUS, CREATED_AT, UPDATED_AT
	</sql>
	
	<select id="getSupplierItem" parameterType="java.lang.String" resultMap="BaseResultMap">
  	  select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER_ITEM
		where SUPPLIER_ID = #{supplierId}
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER_ITEM
		where ID = #{id}
	</select>  
	<!--获取所有的供应商id  -->
   <select id="getSupplierId"  resultType="java.lang.String">
		SELECT SUPPLIER_ID FROM T_SES_SMS_SUPPLIER_ITEM GROUP BY SUPPLIER_ID
	</select>
	<!--获取所有的品目和供应商id  -->
	<select id="getItemBySupplierId"  resultType="java.lang.String">
		SELECT wmsys.wm_concat(CATEGORY_ID) FROM T_SES_SMS_SUPPLIER_ITEM GROUP BY SUPPLIER_ID
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from T_SES_SMS_SUPPLIER_ITEM
		where ID = #{id}
	</delete>
	<insert id="insert" parameterType="ses.model.sms.SupplierItem">
		insert into T_SES_SMS_SUPPLIER_ITEM (ID, SUPPLIER_ID, CATEGORY_ID,
		SUPPLIER_TYPE_RELATE_ID, STATUS, CREATED_AT,
		UPDATED_AT)
		values (#{id}, #{supplierId}, #{categoryId},
		#{supplierTypeRelateId}, #{status}, #{createdAt,jdbcType=TIMESTAMP},
		#{updatedAt,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="ses.model.sms.SupplierItem">
		insert into T_SES_SMS_SUPPLIER_ITEM
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="categoryId != null">
				CATEGORY_ID,
			</if>
			<if test="supplierTypeRelateId != null">
				SUPPLIER_TYPE_RELATE_ID,
			</if>
			<if test="status != null">
				STATUS,
			</if>
			<if test="createdAt != null">
				CREATED_AT,
			</if>
			<if test="updatedAt != null">
				UPDATED_AT,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="supplierId != null">
				#{supplierId},
			</if>
			<if test="categoryId != null">
				#{categoryId},
			</if>
			<if test="supplierTypeRelateId != null">
				#{supplierTypeRelateId},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
		</trim>
	
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="ses.model.sms.SupplierItem">
		update T_SES_SMS_SUPPLIER_ITEM
		<set>
			<if test="supplierId != null">
				SUPPLIER_ID = #{supplierId},
			</if>
			<if test="categoryId != null">
				CATEGORY_ID = #{categoryId},
			</if>
			<if test="supplierTypeRelateId != null">
				SUPPLIER_TYPE_RELATE_ID = #{supplierTypeRelateId},
			</if>
			<if test="status != null">
				STATUS = #{status},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{id}
	</update>
	<update id="updateByPrimaryKey" parameterType="ses.model.sms.SupplierItem">
		update T_SES_SMS_SUPPLIER_ITEM
		set SUPPLIER_ID = #{supplierId},
		CATEGORY_ID = #{categoryId},
		SUPPLIER_TYPE_RELATE_ID = #{supplierTypeRelateId},
		STATUS = #{status},
		CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
		UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP}
		where ID = #{id}
	</update>
	
	<select id="findSupplierItemBySupplierId" parameterType="java.lang.String" resultMap="findSupplierItemBySupplierIdMap">
		select
			t1.*,
			t2.NAME as CATEGORY_NAME,
			t3.ID as ID_,
			t3.ITEM_ID,
			t3.SUPPLIER_ID as SUPPLIER_ID_,
			t3.NAME,
			t3.BRAND,
			t3.MODELS,
			t3.PRO_SIZE,
			t3.ORGIN,
			t3.EXPIRATION_DATE,
			t3.PRODUCER,
			t3.REFERENCE_PRICE,
			t3.PRODUCT_PIC,
			t3.QR_CODE,
			t3.CREATED_AT as CREATED_AT_,
			t3.UPDATED_AT as UPDATED_AT_
		from
			T_SES_SMS_SUPPLIER_ITEM t1
			left join T_SES_BMS_CATEGORY t2
			on t1.CATEGORY_ID = t2.ID
			left join T_SES_SMS_SUPPLIER_PRODUCTS t3
			on t1.ID = t3.ITEM_ID
		where t1.SUPPLIER_ID = #{supplierId}
	</select>
	<resultMap type="ses.model.sms.SupplierItem" id="findSupplierItemBySupplierIdMap" extends="BaseResultMap">
		<collection property="listSupplierProducts" ofType="ses.model.sms.SupplierProducts">
			<id column="ID_" property="id"/>
			<result column="ITEM_ID" property="itemId"/>
			<result column="SUPPLIER_ID_" property="supplierId"/>
			<result column="NAME" property="name"/>
			<result column="BRAND" property="brand"/>
			<result column="MODELS" property="models"/>
			<result column="PRO_SIZE" property="proSize"/>
			<result column="ORGIN" property="orgin"/>
			<result column="EXPIRATION_DATE" property="expirationDate"/>
			<result column="PRODUCER" property="producer"/>
			<result column="REFERENCE_PRICE" property="referencePrice"/>
			<result column="PRODUCT_PIC" property="productPic"/>
			<result column="QR_CODE" property="qrCode"/>
			<result column="CREATED_AT_" property="createdAt"/>
			<result column="UPDATED_AT_" property="updatedAt"/>
		</collection>
	</resultMap>
	<select id="findSupplierItemBySupplierIdAndType" parameterType="ses.model.sms.SupplierItem" resultMap="BaseResultMap">
		select
			t1.*,
			t2.NAME as CATEGORY_NAME
		from
			T_SES_SMS_SUPPLIER_ITEM t1
			join T_SES_BMS_CATEGORY t2
			on t1.CATEGORY_ID = t2.ID
		where t1.SUPPLIER_ID = #{supplierId}
		and t1.SUPPLIER_TYPE_RELATE_ID = #{supplierTypeRelateId}
	</select>
	
	<delete id="deleteBySupplierId" parameterType="java.lang.String">
		delete from T_SES_SMS_SUPPLIER_ITEM where SUPPLIER_ID = #{supplierId}
	</delete>
	
	<select id="findByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
		select * from T_SES_SMS_SUPPLIER_ITEM
		<where>
		1=1
			<if test="categoryId != null and categoryId != ''">
				and CATEGORY_ID = #{categoryId}
			</if>
			<if test="supplierId != null and supplierId != ''">
				and SUPPLIER_ID = #{supplierId}
			</if>
			<if test="type != null and type != ''">
				and SUPPLIER_TYPE_RELATE_ID = #{type}
			</if>
		</where>
	</select>
	
	<delete id="deleteByMap" parameterType="java.util.Map">
		delete from T_SES_SMS_SUPPLIER_ITEM
		<where>
			<if test="categoryId != null and categoryId != ''">
				and CATEGORY_ID = #{categoryId}
			</if>
			<if test="type != null and type != ''">
				and SUPPLIER_TYPE_RELATE_ID = #{type}
			</if>
			<if test="supplierId != null and supplierId != ''">
				and SUPPLIER_ID = #{supplierId}
			</if>
		</where>
	</delete>
	
	
	<delete id="deleteRelate" parameterType="String">
			delete from
				T_SES_SMS_SUPPLIER_ITEM
			where SUPPLIER_TYPE_RELATE_ID = #{relateId} and  SUPPLIER_ID = #{supplierId}
	</delete>
	<select id="getBySupplierIdCategoryId"  resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
				from
				T_SES_SMS_SUPPLIER_ITEM
				where CATEGORY_ID = #{categoryId}  and  SUPPLIER_ID = #{supplierId} and SUPPLIER_TYPE_RELATE_ID=#{type}
	</select> 
	
	
	
</mapper>