<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.sms.SupplierExtractsMapper">
	<resultMap id="BaseResultMap" type="ses.model.sms.SupplierExtracts">
		<!-- @mbggenerated -->
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="PROJECT_NAME" jdbcType="VARCHAR" property="projectName" />
		<result column="PROCUREMENT_DEP_ID" jdbcType="VARCHAR"
			property="procurementDepId" />
		<result column="EXTRACTION_TIME" jdbcType="DATE" property="extractionTime" />
		<result column="EXTRACTION_SITES" jdbcType="VARCHAR" property="extractionSites" />
		<result column="EXTRACT_THE_WAY" jdbcType="DECIMAL" property="extractTheWay" />
		<result column="EXTRACTING_CONDITIONS" jdbcType="VARCHAR"
			property="extractingConditions" />
		<result column="SUPPLIERS_ID" jdbcType="VARCHAR" property="suppliersId" />
		<result column="SUPERINTENDENT" jdbcType="VARCHAR" property="superintendent" />
		<result column="CREATED_AT" jdbcType="DATE" property="createdAt" />
		<result column="UPDATED_AT" jdbcType="DATE" property="updatedAt" />
<!-- 		抽取人员 -->
		<association column="EXTRACTS_PEOPLE" property="extractsPeopleUser"
			select="ses.dao.bms.UserMapper.selectByPrimaryKey" />
	</resultMap>
	<resultMap type="ses.model.sms.SupplierExtracts" id="BaseResultListMap"
		extends="BaseResultMap">
		<collection property="SupplierExtRelate" ofType="ses.model.sms.SupplierExtRelate">
			<id column="erid" jdbcType="VARCHAR" property="id" />
			<result column="EXTRACTS_ID" jdbcType="VARCHAR" property="extractsId" />
			<result column="CREATED_AT" jdbcType="DATE" property="createdAt" />
			<result column="OPERATING_TYPE" jdbcType="DECIMAL" property="operatingType" />
			<result column="IS_DELETED" jdbcType="DECIMAL" property="isDeleted" />
			<result column="REASON" jdbcType="VARCHAR" property="reason" />
			<!-- 供应商 -->
			<association column="SUPPLIER_ID" property="suppliers"
				select="ses.dao.sms.SupplierMapper.selectByPrimaryKey" />
		</collection>
		<collection property="superintendentuser" ofType="ses.model.sms.SupplierExtUser">
			<id column="EU_ID" jdbcType="VARCHAR" property="id" />
			<result column="EUEXT_ID" jdbcType="VARCHAR" property="extractsId" />
			<!-- 监督人员 -->
			<association column="euserid" property="user"
				select="ses.dao.bms.UserMapper.selectByPrimaryKey" />
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		<!-- @mbggenerated -->
		ID, PROJECT_NAME, PROCUREMENT_DEP_ID, EXTRACTION_TIME,
		EXTRACTION_SITES, EXTRACT_THE_WAY,
		EXTRACTING_CONDITIONS, SUPPLIERS_ID,
		EXTRACTS_PEOPLE, SUPERINTENDENT, CREATED_AT,
		UPDATED_AT
	</sql>
	<sql id="Example_Where_Clause">
		where ER.IS_DELETED = 0
		<if test="id!=null and id!=''">
			AND SE."ID"=#{id}
		</if>
		<if test="projectName != null and id != ''">
		  AND SE.PROJECT_NAME=#{projectName}
		</if>
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!-- @mbggenerated -->
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_SUPPLIER_EXTRACTS
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- @mbggenerated -->
		delete from T_SES_SMS_SUPPLIER_EXTRACTS
		where ID =
		#{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="ses.model.sms.SupplierExtracts">
		<!-- @mbggenerated -->
		insert into T_SES_SMS_SUPPLIER_EXTRACTS (PROJECT_NAME,
		PROCUREMENT_DEP_ID,
		EXTRACTION_TIME, EXTRACTION_SITES, EXTRACT_THE_WAY,
		EXTRACTING_CONDITIONS, SUPPLIERS_ID, EXTRACTS_PEOPLE,
		SUPERINTENDENT,
		CREATED_AT, UPDATED_AT
		)
		values ( #{projectName,jdbcType=VARCHAR},
		#{procurementDepId,jdbcType=VARCHAR},
		#{extractionTime,jdbcType=DATE},
		#{extractionSites,jdbcType=VARCHAR},
		#{extractTheWay,jdbcType=DECIMAL},
		#{extractingConditions,jdbcType=VARCHAR},
		#{suppliersId,jdbcType=VARCHAR}, #{extractsPeople,jdbcType=VARCHAR},
		#{superintendent,jdbcType=VARCHAR}, #{createdAt,jdbcType=DATE},
		#{updatedAt,jdbcType=DATE}
		)
	</insert>
	<insert id="insertSelective" parameterType="ses.model.sms.SupplierExtracts"
		keyProperty="id">
		insert into T_SES_SMS_SUPPLIER_EXTRACTS
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="projectName != null">
				PROJECT_NAME,
			</if>
			<if test="procurementDepId != null">
				PROCUREMENT_DEP_ID,
			</if>
			<if test="extractionTime != null">
				EXTRACTION_TIME,
			</if>
			<if test="extractionSites != null">
				EXTRACTION_SITES,
			</if>
			<if test="extractTheWay != null">
				EXTRACT_THE_WAY,
			</if>
			<if test="extractingConditions != null">
				EXTRACTING_CONDITIONS,
			</if>
			<if test="suppliersId != null">
				SUPPLIERS_ID,
			</if>
			<if test="extractsPeople != null">
				EXTRACTS_PEOPLE,
			</if>
			<if test="superintendent != null">
				SUPERINTENDENT,
			</if>
			<if test="createdAt != null">
				CREATED_AT,
			</if>
			<if test="updatedAt != null">
				UPDATED_AT,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="projectName != null">
				#{projectName,jdbcType=VARCHAR},
			</if>
			<if test="procurementDepId != null">
				#{procurementDepId,jdbcType=VARCHAR},
			</if>
			<if test="extractionTime != null">
				#{extractionTime,jdbcType=DATE},
			</if>
			<if test="extractionSites != null">
				#{extractionSites,jdbcType=VARCHAR},
			</if>
			<if test="extractTheWay != null">
				#{extractTheWay,jdbcType=DECIMAL},
			</if>
			<if test="extractingConditions != null">
				#{extractingConditions,jdbcType=VARCHAR},
			</if>
			<if test="suppliersId != null">
				#{suppliersId,jdbcType=VARCHAR},
			</if>
			<if test="extractsPeople != null">
				#{extractsPeople,jdbcType=VARCHAR},
			</if>
			<if test="superintendent != null">
				#{superintendent,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=DATE},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=DATE},
			</if>
		</trim>
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
			select sys_guid() from dual
		</selectKey>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="ses.model.sms.SupplierExtracts">
		<!-- @mbggenerated -->
		update T_SES_SMS_SUPPLIER_EXTRACTS
		<set>
			<if test="projectName != null">
				PROJECT_NAME = #{projectName,jdbcType=VARCHAR},
			</if>
			<if test="procurementDepId != null">
				PROCUREMENT_DEP_ID =
				#{procurementDepId,jdbcType=VARCHAR},
			</if>
			<if test="extractionTime != null">
				EXTRACTION_TIME = #{extractionTime,jdbcType=DATE},
			</if>
			<if test="extractionSites != null">
				EXTRACTION_SITES = #{extractionSites,jdbcType=VARCHAR},
			</if>
			<if test="extractTheWay != null">
				EXTRACT_THE_WAY = #{extractTheWay,jdbcType=DECIMAL},
			</if>
			<if test="extractingConditions != null">
				EXTRACTING_CONDITIONS =
				#{extractingConditions,jdbcType=VARCHAR},
			</if>
			<if test="suppliersId != null">
				SUPPLIERS_ID = #{suppliersId,jdbcType=VARCHAR},
			</if>
			<if test="extractsPeople != null">
				EXTRACTS_PEOPLE = #{extractsPeople,jdbcType=VARCHAR},
			</if>
			<if test="superintendent != null">
				SUPERINTENDENT = #{superintendent,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt,jdbcType=DATE},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt,jdbcType=DATE},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="ses.model.sms.SupplierExtracts">
		<!-- @mbggenerated -->
		update T_SES_SMS_SUPPLIER_EXTRACTS
		set PROJECT_NAME =
		#{projectName,jdbcType=VARCHAR},
		PROCUREMENT_DEP_ID =
		#{procurementDepId,jdbcType=VARCHAR},
		EXTRACTION_TIME =
		#{extractionTime,jdbcType=DATE},
		EXTRACTION_SITES =
		#{extractionSites,jdbcType=VARCHAR},
		EXTRACT_THE_WAY =
		#{extractTheWay,jdbcType=DECIMAL},
		EXTRACTING_CONDITIONS =
		#{extractingConditions,jdbcType=VARCHAR},
		SUPPLIERS_ID =
		#{suppliersId,jdbcType=VARCHAR},
		EXTRACTS_PEOPLE =
		#{extractsPeople,jdbcType=VARCHAR},
		SUPERINTENDENT =
		#{superintendent,jdbcType=VARCHAR},
		CREATED_AT =
		#{createdAt,jdbcType=DATE},
		UPDATED_AT = #{updatedAt,jdbcType=DATE}
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<select id="listExtracts" resultMap="BaseResultListMap">
		SELECT
		SE.*,
		ER."ID" AS erid,
		ER.REASON,
		ER.OPERATING_TYPE,
		ER.SUPPLIER_ID,
		ER.IS_DELETED,
		ER.CREATED_AT,
		ER.EXTRACTS_ID,
		EU."ID" AS
		EU_ID,
		EU.EXTRACTS_ID AS EUEXT_ID,
		EU.USER_ID AS euserid
		FROM
		T_SES_SMS_SUPPLIER_EXTRACTS se

		INNER JOIN T_SES_SMS_SUPPLIER_EXT_USER
		eu ON eu.EXTRACTS_ID=se."ID"

		INNER
		JOIN T_SES_SMS_SUPPLIER_EXT_RELATE er
		ON SE."ID" = ER.EXTRACTS_ID

		<include refid="Example_Where_Clause" />
	</select>
</mapper>