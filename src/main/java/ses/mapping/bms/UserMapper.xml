<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.bms.UserMapper">
  <resultMap id="UserBaseMap" type="ses.model.bms.User">
    <id column="ID" jdbcType="VARCHAR" property="id"/>
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName"/>
    <result column="PASSWORD" jdbcType="VARCHAR" property="password"/>
    <result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt"/>
    <result column="IS_DELETED" property="isDeleted"/>
    <result column="REL_NAME" jdbcType="VARCHAR" property="relName"/>
    <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt"/>
    <result column="MOBILE" jdbcType="VARCHAR" property="mobile"/>
    <result column="GENDER" jdbcType="VARCHAR" property="gender"/>
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone"/>
    <result column="EMAIL" jdbcType="VARCHAR" property="email"/>
    <result column="DUTIES" jdbcType="VARCHAR" property="duties"/>
    <result column="TYPE_NAME" property="typeName"/>
    <result column="TYPE_ID" jdbcType="VARCHAR" property="typeId"/>
    <result column="ADDRESS" jdbcType="VARCHAR" property="address"/>
    <result column="RANDOM_CODE" jdbcType="VARCHAR" property="randomCode"/>
    <result column="ORG_NAME" jdbcType="VARCHAR" property="orgName"/>
    <result column="PUBLISH_TYPE" property="publishType"/>
    <result column="ID_NUMBER" jdbcType="VARCHAR" property="idNumber"/>
    <result column="OFFICER_CERT_NO" jdbcType="VARCHAR" property="officerCertNo"/>
    <result column="NET_TYPE" property="netType"/>
    <result column="ERROR_NUM" property="errorNum"/>
    <result column="DATA_ACCESS" property="dataAccess"/>
    <result column="MOBILE2" jdbcType="VARCHAR" property="mobile2"/>
    <result column="TELEPHONE2" jdbcType="VARCHAR" property="telephone2"/>
    <!-- 查询机构 -->
    <association column="ORG_ID" property="org" select="ses.dao.oms.OrgnizationMapper.findOrgnizationById"/>
    <!-- 查询创建人 -->
    <association column="USER_ID" property="user" select="selectByPrimaryKey"/>
  </resultMap>

    <resultMap type="ses.model.bms.User" id="UserResultMap" extends="UserBaseMap">
        <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型-->
        <collection property="roles" ofType="ses.model.bms.Role">
            <id column="roleId" property="id"/>
            <result column="roleName" jdbcType="VARCHAR" property="name"/>
            <result column="roleCreatedAt" jdbcType="TIMESTAMP" property="createdAt"/>
            <result column="description" jdbcType="VARCHAR" property="description"/>
            <result column="roleIsDeleted" property="isDeleted"/>
            <result column="roleUpdatedAt" jdbcType="TIMESTAMP" property="updatedAt"/>
            <result column="roleStatus" property="status"/>
            <result column="roleCode" jdbcType="VARCHAR" property="code"/>
            <result column="roleKind" jdbcType="VARCHAR" property="kind"/>
            <result column="rolePosition" property="position"/>
        </collection>
        <collection property="menus" ofType="ses.model.bms.PreMenu">
            <id column="mid" property="id"/>
            <result column="mname" jdbcType="VARCHAR" property="name"/>
            <result column="mcreatedAt" jdbcType="TIMESTAMP" property="createdAt"/>
            <result column="mupdatedAt" jdbcType="TIMESTAMP" property="updatedAt"/>
            <result column="mtype" jdbcType="VARCHAR" property="type"/>
            <result column="misDeleted" property="isDeleted"/>
            <result column="mstatus" property="status"/>
            <result column="murl" jdbcType="VARCHAR" property="url"/>
            <result column="mposition" property="position"/>
            <result column="menulevel" jdbcType="VARCHAR" property="menulevel"/>
            <result column="mkind" property="kind"/>
            <result column="micon" jdbcType="VARCHAR" property="icon"/>
            <result column="permissionCode" jdbcType="VARCHAR" property="permissionCode"/>
            <!--查询上级菜单   -->
            <association column="mparent" property="parentId" select="ses.dao.bms.PreMenuMapper.selectByPrimaryKey"/>
        </collection>
    </resultMap>

    <!--查询供应商用户-->
    <resultMap id="SupplierMap" type="ses.model.bms.User" extends="UserBaseMap">
        <!-- 根据TYPE_ID查询供应商 -->
        <association column="TYPE_ID" property="supplier" select="ses.dao.sms.SupplierMapper.selectByPrimaryKey"/>
    </resultMap>

    <!-- 表名 -->
    <sql id="Tabel_Name">
    T_SES_BMS_USER
  </sql>
  
  <!-- 表中所有列 -->
  <sql id="Base_Column_List">
    ID, LOGIN_NAME, PASSWORD, CREATED_AT, IS_DELETED, REL_NAME, UPDATED_AT, USER_ID, 
    MOBILE, GENDER, TELEPHONE, EMAIL, ORG_ID, DUTIES, TYPE_NAME, TYPE_ID, ADDRESS, RANDOM_CODE, ORG_NAME,
    PUBLISH_TYPE, ID_NUMBER, OFFICER_CERT_NO, NET_TYPE, ERROR_NUM, DATA_ACCESS, MOBILE2, TELEPHONE2
  </sql>
  
  <!-- 表中所有列（带有别名） -->
  <sql id="Base_Column_List_Alias">
      U.ID, U.LOGIN_NAME, U.PASSWORD, U.CREATED_AT, U.UPDATED_AT, U.IS_DELETED, U.REL_NAME, U.UPDATED_AT,
      U.USER_ID, U.MOBILE, U.GENDER, U.TELEPHONE, U.EMAIL, U.ORG_ID, U.DUTIES, U.TYPE_NAME, U.TYPE_ID,
      U.ADDRESS, U.RANDOM_CODE, U.ORG_NAME, U.PUBLISH_TYPE, U.ID_NUMBER, U.OFFICER_CERT_NO, U.NET_TYPE,
      U.ERROR_NUM
  </sql>
    
  <!-- 查询条件 -->
  <sql id="Example_Where_Clause">
    where u.IS_DELETED = 0
    <trim suffixOverrides=",">
      <if test="id != null and id != ''">
        and u.ID = #{id}
      </if>
      <if test="loginName != null and loginName != ''">
        and u.LOGIN_NAME like CONCAT(CONCAT('%', #{loginName}), '%')
      </if>
      <if test="password != null and password != ''">
        and u.PASSWORD = #{password}
      </if>
      <if test="createdAt != null">
        and u.CREATED_AT = #{createdAt}
      </if>
      <if test="relName != null and relName != ''">
        and u.REL_NAME like CONCAT(CONCAT('%', #{relName}), '%')
      </if>
      <if test="orgName != null and orgName != ''">
        and u.ORG_NAME like CONCAT(CONCAT('%', #{orgName}), '%')
      </if>
      <if test="updatedAt != null">
        and u.UPDATED_AT = #{updatedAt}
      </if>
      <if test="user != null">
        and u.USER_ID = #{user.id}
      </if>
      <if test="gender != null and gender != ''">
        and u.GENDER = #{gender}
      </if>
      <if test="telephone != null and telephone != ''">
        and u.TELEPHONE = #{telephone}
      </if>
      <if test="email != null and email != ''">
        and u.EMAIL= #{email}
      </if>
      <if test="org != null">
        and u.ORG_ID = #{org.id}
      </if>
      <if test="duties != null and duties != ''">
        and u.DUTIES = #{duties}
      </if>
      <if test="mobile != null and mobile != ''">
        and u.MOBILE like CONCAT(CONCAT('%', #{mobile}), '%')
      </if>
      <if test="roleIdList != null and roleIdList != '' ">
        <foreach item="roleIdList" index="index" collection="roleIdList"
                 open="" separator="" close="">
          and "INSTR"(roleId, #{roleId})>0
        </foreach>
      </if>
      <if test="typeId != null and typeId != ''">
        and u.TYPE_ID = #{typeId}
      </if>
      <if test="address != null and address != ''">
        and u.ADDRESS = #{address}
      </if>
      <if test="netType != null">
        and u.NET_TYPE = #{netType}
      </if>
      <if test="typeName != null">
        and u.TYPE_NAME = #{typeName}
      </if>
      <if test="errorNum != null">
        and u.ERROR_NUM = #{errorNum}
      </if>
      <if test="dataAccess != null">
        and u.DATA_ACCESS = #{dataAccess}
      </if>
      <if test="mobile2 != null">
        and u.MOBILE2 = #{mobile2}
      </if>
      <if test="telephone2 != null">
        and u.TELEPHONE2 = #{telephone2}
      </if>
    </trim>
  </sql>

    <!-- 1.根据id查询(不带关联集合) -->
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="UserBaseMap">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER
        where IS_DELETED = 0
        and ID = #{id,jdbcType=VARCHAR}
    </select>

    <!-- 根据id判断是军队还是地方用户 -->
    <select id="selectByArmyLocal" parameterType="java.lang.String" resultMap="UserBaseMap">
	SELECT TSBU.ID as ID, TSBU.LOGIN_NAME as LOGIN_NAME
	  FROM T_SES_BMS_USER TSBU, T_SES_EMS_EXPERT TSEE
	 WHERE TSBU.TYPE_ID = TSEE.ID
	   AND TSEE.EXPERTS_FROM = (SELECT ID
	                              FROM T_SES_BMS_DICTIONARY_DATA DD
	                             WHERE DD.KIND = 12
	                               AND DD.NAME = '军队')
	   AND TSBU.ID = #{id,jdbcType=VARCHAR}
  </select>
    <!-- 根据 orgid 集合 获取用户id 集合 -->
    <select id="getUserId" resultType="String">
        select id from T_SES_BMS_USER where
        ORG_ID in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 2.根据id删除 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_SES_BMS_USER
    where ID = #{id,jdbcType=VARCHAR}
  </delete>

  <!-- 3.插入数据 -->
  <insert id="insert" parameterType="ses.model.bms.User">
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
      select sys_guid() from dual
    </selectKey>
    insert into T_SES_BMS_USER (ID, LOGIN_NAME, PASSWORD,
    CREATED_AT, IS_DELETED, REL_NAME,
    UPDATED_AT, USER_ID, MOBILE,
    GENDER, TELEPHONE, EMAIL,
    ORG_ID, DUTIES, TYPE_NAME,
    TYPE_ID, ADDRESS, RANDOM_CODE,
    ORG_NAME, PUBLISH_TYPE, ID_NUMBER, OFFICER_CERT_NO, NET_TYPE, ERROR_NUM, DATA_ACCESS, MOBILE2, TELEPHONE2)
    values (#{id,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{createdAt,jdbcType=TIMESTAMP}, #{isDeleted}, #{relName,jdbcType=VARCHAR},
    #{updatedAt,jdbcType=TIMESTAMP}, #{user.id,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
    #{gender}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
    #{org.id,jdbcType=VARCHAR}, #{duties,jdbcType=VARCHAR}, #{typeName},
    #{typeId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{randomCode,jdbcType=VARCHAR},
    #{orgName,jdbcType=VARCHAR},#{publishType}, #{idNumber,jdbcType=VARCHAR},
    #{officerCertNo,jdbcType=VARCHAR},#{netType},#{errorNum},#{dataAccess},#{mobile2},#{telephone2})
  </insert>
  <!-- 保存用户 -->
  <insert id="saveUser" parameterType="ses.model.bms.User">
    insert into T_SES_BMS_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        ID,
      </if>
      <if test="loginName != null and loginName != ''">
        LOGIN_NAME,
      </if>
      <if test="password != null and password != ''">
        PASSWORD,
      </if>
      <if test="createdAt != null">
        CREATED_AT,
      </if>
      <if test="isDeleted != null">
        IS_DELETED,
      </if>
      <if test="relName != null and relName != ''">
        REL_NAME,
      </if>
      <if test="updatedAt != null">
        UPDATED_AT,
      </if>
      <if test="user != null">
        USER_ID,
      </if>
      <if test="mobile != null and mobile != ''">
        MOBILE,
      </if>
      <if test="gender != null  and gender != ''">
        GENDER,
      </if>
      <if test="telephone != null and telephone != ''">
        TELEPHONE,
      </if>
      <if test="email != null and email != ''">
        EMAIL,
      </if>
      <if test="org != null">
        ORG_ID,
      </if>
      <if test="duties != null and duties != ''">
        DUTIES,
      </if>
      <if test="typeName != null">
        TYPE_NAME,
      </if>
      <if test="typeId != null and typeId != ''">
        TYPE_ID,
      </if>
      <if test="address != null and address != ''">
        ADDRESS,
      </if>
      <if test="randomCode != null and randomCode != ''">
        RANDOM_CODE,
      </if>
      <if test="orgName != null and orgName != ''">
        ORG_NAME,
      </if>
      <if test="publishType != null">
        PUBLISH_TYPE,
      </if>
      <if test="idNumber != null and idNumber != ''">
        ID_NUMBER,
      </if>
      <if test="officerCertNo != null and officerCertNo != ''">
        OFFICER_CERT_NO,
      </if>
      <if test="netType != null">
        NET_TYPE,
      </if>
      <if test="errorNum != null">
        ERROR_NUM,
      </if>
      <if test="dataAccess != null">
        DATA_ACCESS,
      </if>
      <if test="mobile2 != null and mobile2 != ''">
        MOBILE2,
      </if>
      <if test="telephone2 != null and telephone2 != ''">
        TELEPHONE2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null and loginName != ''">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted},
      </if>
      <if test="relName != null and relName != ''">
        #{relName,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null">
        #{user.id,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null and mobile != ''">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null and gender != ''">
        #{gender},
      </if>
      <if test="telephone != null and telephone != ''">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        #{org.id,jdbcType=VARCHAR},
      </if>
      <if test="duties != null and duties != ''">
        #{duties,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        #{typeName},
      </if>
      <if test="typeId != null and typeId != ''">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null and randomCode != ''">
        #{randomCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null and orgName != ''">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="publishType != null">
        #{publishType},
      </if>
      <if test="idNumber != null and idNumber != ''">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="officerCertNo != null and officerCertNo != ''">
        #{officerCertNo,jdbcType=VARCHAR},
      </if>
      <if test="netType != null">
        #{netType},
      </if>
      <if test="errorNum != null">
        #{errorNum},
      </if>
      <if test="dataAccess != null">
        #{dataAccess},
      </if>
      <if test="mobile2 != null and mobile2 != ''">
        #{mobile2},
      </if>
      <if test="telephone2 != null and telephone2 != ''">
        #{telephone2},
      </if>
    </trim>
  </insert>

  <!-- 4.插入不为空数据 -->
  <insert id="insertSelective" parameterType="ses.model.bms.User" useGeneratedKeys="true" keyProperty="id">
    <selectKey keyProperty="id" resultType="String" order="BEFORE">
      select sys_guid() from dual
    </selectKey>
    insert into T_SES_BMS_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        ID,
      </if>
      <if test="loginName != null and loginName != ''">
        LOGIN_NAME,
      </if>
      <if test="password != null and password != ''">
        PASSWORD,
      </if>
      <if test="createdAt != null">
        CREATED_AT,
      </if>
      <if test="isDeleted != null">
        IS_DELETED,
      </if>
      <if test="relName != null and relName != ''">
        REL_NAME,
      </if>
      <if test="updatedAt != null">
        UPDATED_AT,
      </if>
      <if test="user != null">
        USER_ID,
      </if>
      <if test="mobile != null and mobile != ''">
        MOBILE,
      </if>
      <if test="gender != null  and gender != ''">
        GENDER,
      </if>
      <if test="telephone != null and telephone != ''">
        TELEPHONE,
      </if>
      <if test="email != null and email != ''">
        EMAIL,
      </if>
      <if test="org != null">
        ORG_ID,
      </if>
      <if test="duties != null and duties != ''">
        DUTIES,
      </if>
      <if test="typeName != null">
        TYPE_NAME,
      </if>
      <if test="typeId != null and typeId != ''">
        TYPE_ID,
      </if>
      <if test="address != null and address != ''">
        ADDRESS,
      </if>
      <if test="randomCode != null and randomCode != ''">
        RANDOM_CODE,
      </if>
      <if test="orgName != null">
        ORG_NAME,
      </if>
      <if test="publishType != null">
        PUBLISH_TYPE,
      </if>
      <if test="idNumber != null and idNumber != ''">
        ID_NUMBER,
      </if>
      <if test="officerCertNo != null and officerCertNo != ''">
        OFFICER_CERT_NO,
      </if>
      <if test="netType != null">
        NET_TYPE,
      </if>
      <if test="errorNum != null">
        ERROR_NUM,
      </if>
      <if test="dataAccess != null">
        DATA_ACCESS,
      </if>
      <if test="mobile2 != null and mobile2 != ''">
        MOBILE2,
      </if>
      <if test="telephone2 != null and telephone2 != ''">
        TELEPHONE2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null and loginName != ''">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted},
      </if>
      <if test="relName != null and relName != ''">
        #{relName,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null">
        #{user.id,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null and mobile != ''">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null and gender != ''">
        #{gender},
      </if>
      <if test="telephone != null and telephone != ''">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        #{org.id,jdbcType=VARCHAR},
      </if>
      <if test="duties != null and duties != ''">
        #{duties,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        #{typeName},
      </if>
      <if test="typeId != null and typeId != ''">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null and randomCode != ''">
        #{randomCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null and orgName != ''">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="publishType != null">
        #{publishType},
      </if>
      <if test="idNumber != null and idNumber != ''">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="officerCertNo != null and officerCertNo != ''">
        #{officerCertNo,jdbcType=VARCHAR},
      </if>
      <if test="netType != null">
        #{netType},
      </if>
      <if test="errorNum != null">
        #{errorNum},
      </if>
      <if test="dataAccess != null">
        #{dataAccess},
      </if>
      <if test="mobile2 != null and mobile2 != ''">
        #{mobile2,jdbcType=VARCHAR},
      </if>
      <if test="telephone2 != null and telephone2 != ''">
        #{telephone2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!-- 5.根据更新不为空数据 -->
  <update id="updateByPrimaryKeySelective" parameterType="ses.model.bms.User">
    update T_SES_BMS_USER
    <set>
      <if test="loginName != null and loginName != ''">
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        IS_DELETED = #{isDeleted},
      </if>
      <if test="relName != null and relName != ''">
        REL_NAME = #{relName,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null ">
        USER_ID = #{user.id,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null and mobile != ''">
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null and gender != ''">
        GENDER = #{gender},
      </if>
      <if test="telephone != null and telephone != ''">
        TELEPHONE = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        ORG_ID = #{org.id,jdbcType=VARCHAR},
      </if>
      <if test="(typeName == 3 or typeName == 4 or typeName == 5) and org == null">
        ORG_ID = null,
      </if>
      <if test="duties != null and duties != ''">
        DUTIES = #{duties,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        TYPE_NAME = #{typeName},
      </if>
      <if test="typeId != null and typeId != ''">
        TYPE_ID = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null and randomCode != ''">
        RANDOM_CODE = #{randomCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="publishType != null">
        PUBLISH_TYPE = #{publishType},
      </if>
      <if test="idNumber != null and idNumber != ''">
        ID_NUMBER = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="officerCertNo != null and officerCertNo != ''">
        OFFICER_CERT_NO = #{officerCertNo,jdbcType=VARCHAR},
      </if>
      <if test="netType != null">
        NET_TYPE = #{netType},
      </if>
      <if test="errorNum != null">
        ERROR_NUM = #{errorNum},
      </if>
      <if test="dataAccess != null">
        DATA_ACCESS = #{dataAccess},
      </if>
      <if test="mobile2 != null and mobile2 != ''">
        MOBILE2 = #{mobile2,jdbcType=VARCHAR},
      </if>
      <if test="telephone2 != null and telephone2 != ''">
        TELEPHONE2 = #{telephone2,jdbcType=VARCHAR}
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>

    <!-- 6.更新数据 -->
    <update id="updateByPrimaryKey" parameterType="ses.model.bms.User">
    update T_SES_BMS_USER
    set LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      IS_DELETED = #{isDeleted},
      REL_NAME = #{relName,jdbcType=VARCHAR},
      UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      USER_ID = #{user.id,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      GENDER = #{gender},
      TELEPHONE = #{telephone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      ORG_ID = #{org.id,jdbcType=VARCHAR},
      DUTIES = #{duties,jdbcType=VARCHAR},
      TYPE_NAME = #{typeName},
      TYPE_ID = #{typeId,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      RANDOM_CODE = #{randomCode,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      PUBLISH_TYPE = #{publishType},
      ID_NUMBER = #{idNumber,jdbcType=VARCHAR},
      OFFICER_CERT_NO = #{officerCertNo,jdbcType=VARCHAR},
      NET_TYPE = #{netType},
      ERROR_NUM = #{errorNum},
      DATA_ACCESS = #{dataAccess},
      MOBILE2 = #{mobile2,jdbcType=VARCHAR},
      TELEPHONE2 = #{telephone2,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

    <!-- 7.列表总数 -->
    <select id="queryByCount" resultType="java.lang.Integer" parameterType="Object">
    select count(1) 
    from T_SES_BMS_USER
    where IS_DELETED = 0
  </select>

  <!-- 8.查询列表(查询不为空的字段，不带关联集合) -->
  <select id="queryByList" resultMap="UserBaseMap" parameterType="Object">
    select
    <include refid="Base_Column_List"/>
    from T_SES_BMS_USER u
    <include refid="Example_Where_Clause"/>
    ORDER BY u.CREATED_AT DESC
  </select>
  
  <!-- 8.1.查询后台用户列表(不带关联集合,不包括专家和供应商) -->
  <select id="queryBackendUser" resultMap="UserBaseMap" parameterType="Object">
    select
    <include refid="Base_Column_List"/>
    from T_SES_BMS_USER u
    <include refid="Example_Where_Clause"/>
    and u.TYPE_NAME IS NOT NULL and u.TYPE_NAME!='6'
    ORDER BY u.CREATED_AT DESC
  </select>


    <!-- 查询用户（关联角色） -->
    <select id="findUserRole" resultMap="UserBaseMap" parameterType="Object">
        SELECT
        *
        FROM
        T_SES_BMS_USER u
        INNER JOIN (
        SELECT
        ID,
        wm_concat (DISTINCT(roleName)) AS roleNames ,wm_concat (DISTINCT(roleId)) AS roleId
        FROM
        (
        SELECT
        u. ID,
        T2.ROLE_ID as roleId,
        t3.NAME AS roleName
        FROM
        T_SES_BMS_USER u
        LEFT JOIN T_SES_BMS_USER_ROLE T2 ON u. ID = T2.USER_ID
        LEFT JOIN T_SES_BMS_ROLE t3 on T2.ROLE_ID = t3.ID
        WHERE
        u.TYPE_NAME IS NOT NULL
        AND u.TYPE_NAME != '6'
        <!-- t3.CODE != 'SUPPLIER_R'
        AND t3.CODE != 'EXPERT_R'
        AND t3.CODE != 'IMPORT_AGENT_R' -->
        )
        GROUP BY ID
        ) t4 ON u. ID = t4. ID
        <include refid="Example_Where_Clause"/>
        ORDER BY CREATED_AT DESC
    </select>

    <!-- 查询用户（关联角色）所有角色 -->
    <select id="findUserRoleOther" resultMap="UserBaseMap" parameterType="Object">
        SELECT
        *
        FROM
        T_SES_BMS_USER u
        INNER JOIN (
        SELECT
        ID,
        wm_concat (DISTINCT(roleName)) AS roleNames ,wm_concat (DISTINCT(roleId)) AS roleId
        FROM
        (
        SELECT
        u. ID,
        T2.ROLE_ID as roleId,
        t3.NAME AS roleName
        FROM
        T_SES_BMS_USER u
        LEFT JOIN T_SES_BMS_USER_ROLE T2 ON u. ID = T2.USER_ID
        LEFT JOIN T_SES_BMS_ROLE t3 on T2.ROLE_ID = t3.ID
        )
        GROUP BY ID
        ) t4 ON u. ID = t4. ID
        <include refid="Example_Where_Clause"/>
        ORDER BY CREATED_AT DESC
    </select>

    <!-- 9.根据不为空的条件查询用户信息（包含角色信息） -->
    <select id="selectUser" parameterType="Object" resultMap="UserResultMap">
        SELECT
        U .*,
        r. ID AS roleId,
        r. NAME AS roleName,
        r.CREATED_AT AS roleCreatedAt,
        r.DESCRIPTION AS description,
        r.IS_DELETED AS roleIsDeleted,
        r.UPDATED_AT AS roleUpdatedAt,
        r.STATUS AS roleStatus,
        r.CODE AS roleCode,
        r.KIND AS roleKind,
        r.POSITION AS rolePosition,
        pm. ID AS mid,
        pm. NAME AS mname,
        pm.MENU_TYPE AS mtype,
        pm.IS_DELETED AS misDeleted,
        pm.STATUS AS mstatus,
        pm.URL AS murl,
        pm.CREATED_AT AS mcreatedAt,
        pm.UPDATED_AT AS mupdatedAt,
        pm.POSITION AS mposition,
        pm.MENU_LEVEL AS menulevel,
        pm.PARENT_ID AS mparent,
        pm.KIND AS mkind,
        pm.ICON AS micon,
        pm.PERMISSION_CODE AS permissionCode
        FROM
        T_SES_BMS_USER U
        LEFT JOIN T_SES_BMS_USER_ROLE ur ON U . ID = ur."USER_ID"
        LEFT JOIN T_SES_BMS_ROLE r ON ur."ROLE_ID" = r. ID
        LEFT JOIN T_SES_BMS_USER_PERMISSION up ON U . ID = up.USER_ID
        LEFT JOIN T_SES_BMS_PERMISSION pm ON up.PERMENU_ID = pm. ID
        <include refid="Example_Where_Clause"/>
        ORDER BY u.CREATED_AT DESC,pm.MENU_LEVEL ,pm.POSITION ASC
    </select>

    <!-- 10.保存用户和角色之间的关系信息 -->
    <insert id="saveRelativity" parameterType="Object">
      insert into T_SES_BMS_USER_ROLE("USER_ID","ROLE_ID")  	
      values(#{userId.id},#{roleId.id})  
  </insert>

    <!-- 11.保存用户和菜单之间的关系信息 -->
    <insert id="saveUserMenu" parameterType="Object">
        insert into T_SES_BMS_USER_PERMISSION
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="user != null">
                USER_ID,
            </if>
            <if test="preMenu != null">
                PERMENU_ID,
            </if>
            <if test="kind != null">
                KIND,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="user != null">
                #{user.id,jdbcType=VARCHAR},
            </if>
            <if test="preMenu != null">
                #{preMenu.id,jdbcType=VARCHAR},
            </if>
            <if test="kind != null">
                #{kind},
            </if>
        </trim>
    </insert>

    <!-- 12.删除用户和菜单之间的关系信息 -->
    <delete id="deleteUserMenu" parameterType="Object">
        delete from T_SES_BMS_USER_PERMISSION
        <where>
            <if test="user != null">"USER_ID" = #{user.id}</if>
            <if test="preMenu != null">and "PERMENU_ID" = #{preMenu.id}</if>
        </where>
    </delete>

    <!-- 13.根据用户名查询 -->
    <select id="queryByLoginName" resultMap="UserBaseMap" parameterType="Object">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER u
        where u.IS_DELETED=0 and
        u.LOGIN_NAME = #{loginName}
    </select>

    <!-- 根据手机号查询,仅校验后台用户 -->
    <select id="ajaxMoblie" resultMap="UserBaseMap" parameterType="Object">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER u
        where u.IS_DELETED=0
        and u.MOBILE = #{mobile}
        and u.TYPE_NAME IS NOT NULL
        <if test="id != null and id != ''">
            and u.ID != #{id}
        </if>
    </select>

    <!-- 根据身份证号查询,仅校验后台用户 -->
    <select id="ajaxIdNumber" resultMap="UserBaseMap" parameterType="Object">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER u
        where u.IS_DELETED=0
        and (u.ID_NUMBER = lower(#{idNumber})
        or u.ID_NUMBER = Upper(#{idNumber}))
        and u.TYPE_NAME IS NOT NULL
        <if test="id != null and id != ''">
            and u.ID != #{id}
        </if>
    </select>


    <!-- 根据typeId查询用户 -->
    <select id="findUserByTypeId" resultMap="UserBaseMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM T_SES_BMS_USER
        WHERE TYPE_ID = #{typeId}
    </select>

    <!-- 14.用户名、密码登录查询（包含角色等关联信息） -->
    <select id="queryByLogin" parameterType="Object" resultMap="UserResultMap">
      SELECT
			U .*,
			r. ID AS roleId,
			r. NAME AS roleName,
			r.CREATED_AT AS roleCreatedAt,
			r.DESCRIPTION AS description,
			r.IS_DELETED AS roleIsDeleted,
			r.UPDATED_AT AS roleUpdatedAt,
			r.STATUS AS roleStatus,
			r.CODE AS roleCode,
			r.KIND AS roleKind,
			r.POSITION AS rolePosition,
			pm. ID AS mid,
			pm. NAME AS mname,
			pm.MENU_TYPE AS mtype,
			pm.IS_DELETED AS misDeleted,
			pm.STATUS AS mstatus,
			pm.URL AS murl,
			pm.CREATED_AT AS mcreatedAt,
			pm.UPDATED_AT AS mupdatedAt,
			pm.POSITION AS mposition,
			pm.MENU_LEVEL AS menulevel,
			pm.PARENT_ID AS mparent,
			pm.KIND AS mkind,
			pm.ICON AS micon,
			pm.PERMISSION_CODE AS permissionCode
		FROM
			T_SES_BMS_USER U
		LEFT JOIN T_SES_BMS_USER_ROLE ur ON U . ID = ur."USER_ID"
		LEFT JOIN T_SES_BMS_ROLE r ON ur."ROLE_ID" = r. ID
		LEFT JOIN T_SES_BMS_USER_PERMISSION up ON U . ID = up.USER_ID
		LEFT JOIN T_SES_BMS_PERMISSION pm ON up.PERMENU_ID = pm. ID
      	where
      		U .IS_DELETED = 0
			AND U .LOGIN_NAME = #{loginName}
			AND U . PASSWORD = #{password}
		ORDER BY pm.MENU_LEVEL ,pm.POSITION ASC
  </select>
    <!-- 15.查询所有采购后台的角色 （彭仲俊）-->
    <select id="queryParkManagers" parameterType="java.util.Map" resultMap="UserBaseMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM T_SES_BMS_USER
        WHERE IS_DELETED =0
        AND ID IN (
        SELECT USER_ID FROM T_SES_BMS_USER_ROLE
        WHERE ROLE_ID IN (
        SELECT ID FROM T_SES_BMS_ROLE
        WHERE STATUS = 0
        AND IS_DELETED =0
        AND KIND = #{kind}
        )
        )
        ORDER BY CREATED_AT DESC
    </select>

  <!-- 16.根据角色编码查询用户 -->
  <select id="findByRole" parameterType="java.util.Map" resultMap="UserBaseMap">
    SELECT
    DISTINCT(u.ID),
    u.ID AS ID,
    u.LOGIN_NAME AS LOGIN_NAME,
    u.PASSWORD AS PASSWORD,
    u.CREATED_AT AS CREATED_AT,
    u.IS_DELETED AS IS_DELETED,
    u.REL_NAME AS REL_NAME,
    u.UPDATED_AT AS UPDATED_AT,
    u.USER_ID AS USER_ID,
    u.MOBILE AS MOBILE,
    u.GENDER AS GENDER,
    u.TELEPHONE AS TELEPHONE,
    u.EMAIL AS EMAIL,
    u.ORG_ID AS ORG_ID,
    u.DUTIES AS DUTIES,
    u.TYPE_NAME AS TYPE_NAME,
    u.TYPE_ID AS TYPE_ID,
    u.ADDRESS AS ADDRESS,
    u.RANDOM_CODE AS RANDOM_CODE,
    u.ORG_NAME AS ORG_NAME,
    u.PUBLISH_TYPE AS PUBLISH_TYPE,
    u.ID_NUMBER AS ID_NUMBER,
    u.OFFICER_CERT_NO AS OFFICER_CERT_NO,
    u.NET_TYPE AS NET_TYPE,
    u.ERROR_NUM AS ERROR_NUM,
    u.DATA_ACCESS AS DATA_ACCESS,
    u.MOBILE2 AS MOBILE2,
    u.TELEPHONE2 AS TELEPHONE2
    FROM
    T_SES_BMS_USER u
    LEFT JOIN T_SES_BMS_USER_ROLE ur ON u. ID = ur.USER_ID
    LEFT JOIN T_SES_BMS_ROLE r ON ur.ROLE_ID = r . ID
    WHERE
    u.IS_DELETED = 0
    <if test="code != null and code != ''">
      AND r.CODE = #{code}
    </if>
    <if test="id != null and id != ''">
      AND r.ID = #{id}
    </if>
  </select>

    <!-- 根据组织机构Id查询用户数量 -->
    <select id="getUserCountByOrgId" resultType="java.lang.Long">
      SELECT COUNT(1)
  	  FROM T_SES_BMS_USER
 	  WHERE ORG_ID = #{orgId}
      AND IS_DELETED = '0'
    </select>

    <!-- 8.查询列表(查询不为空的字段，不带关联集合) -->
    <select id="listWithoutSupplier" resultMap="UserBaseMap">
        SELECT 
           u.*
        FROM
            T_SES_BMS_USER u
			LEFT JOIN T_SES_BMS_USER_ROLE ur ON u. ID = ur.USER_ID
			LEFT JOIN T_SES_BMS_ROLE r ON ur.ROLE_ID = r . ID
		WHERE
		    u.IS_DELETED = 0
		    AND
		    r.CODE != 'SUPPLIER_R'
    </select>


    <select id="queryByUserId" resultType="ses.model.bms.RoleUser">
        select ur.USER_ID as userId ,ur.ROLE_ID as roleId from T_SES_BMS_USER_ROLE ur
        where 1=1
        <if test="userId !=null">
            and ur.USER_ID =#{userId}
        </if>
        <if test="roleId !=null">
            and ur.ROLE_ID =#{roleId}
        </if>
    </select>

    <select id="queryById" resultMap="UserBaseMap">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER
        where ID=#{id}
    </select>
    <select id="queryNameAndNote" resultMap="UserBaseMap">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER
        where LOGIN_NAME=#{loginName} and NET_TYPE=#{note,jdbcType=VARCHAR}
    </select>


    <select id="queryByNameAndPw" resultMap="UserBaseMap">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER
        where LOGIN_NAME=#{loginName} and PASSWORD=#{password}
    </select>


    <!-- 根据名称集合判断是否已有名称存在 -->
    <select id="ajaxUserName" resultType="java.lang.Integer">
        select
        count(u.id)
        from T_SES_BMS_USER u
        where u.LOGIN_NAME in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <insert id="saveUserRole" parameterType="ses.model.bms.RoleUser">
	      insert into T_SES_BMS_USER_ROLE(USER_ID,ROLE_ID)  	
	      values(#{userId},#{roleId})  
	  </insert>


    <select id="findById" resultMap="UserBaseMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER
        where ID = #{id}
    </select>


    <select id="selectByTypeId" parameterType="java.lang.String" resultMap="UserBaseMap">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER
        where <!-- IS_DELETED = 0 and  -->
        TYPE_ID = #{typeId}
    </select>
    <select id="findByTypeName" parameterType="java.lang.String" resultType="String">
	    select id  from T_SES_BMS_USER 
	    where 
	    TYPE_NAME = #{typeId}
	  </select>
    <!-- 根据机构id查询该机构下用户集合 -->
    <select id="findByOrgId" parameterType="java.lang.String" resultType="String">
	    select id  from T_SES_BMS_USER 
	    where 
	    ORG_ID = #{orgId}
	  </select>

    <!-- 假删除用户 -->
    <update id="updateByTypeId" parameterType="java.lang.String">
			update
				T_SES_BMS_USER
			SET
				IS_DELETED = 1
			WHERE TYPE_ID = #{typeId}
		</update>

    <!-- 查询删除的用户 -->
    <select id="getDleUserByTypeId" resultType="java.lang.String">
	    SELECT
	    	*
	    from 
	    	T_SES_BMS_USER
	    WHERE 
	    	TYPE_ID = #{typeId}
	    and IS_DELETED = 1
		</select>

    <!-- 更新删除的用户 -->
    <update id="updateDelUserByTypeId" parameterType="ses.model.bms.User">
			update
				T_SES_BMS_USER
			SET
	      LOGIN_NAME = #{loginName},
	      ID_NUMBER = #{idNumber},
	      MOBILE = #{mobile},
	      UPDATED_AT = #{updatedAt},
	      IS_DELETED = 1
			WHERE TYPE_ID = #{typeId}
			AND IS_DELETED = 0
		</update>

    <!-- 统计注册用户注册总数量 -->
    <select id="getRegisterTenderCountByEmp" resultType="java.lang.Long" parameterType="Map">
		     SELECT COUNT(ID)
	        	FROM T_SES_BMS_USER U
	       		WHERE TO_CHAR(U.CREATED_AT, 'yyyy-MM-dd') = #{createdAt}
		</select>

    <!-- 查询 是否 是2017-06-05 之前修改的用户-->
    <select id="isUpdateUser" resultType="Integer" parameterType="String">
		SELECT COUNT(ID) from T_SES_BMS_USER WHERE 
		TO_CHAR(DECODE(UPDATED_AT,'',CREATED_AT,UPDATED_AT),'YYYY-MM-DD') &gt; #{date}
		AND LOGIN_NAME=#{loginName}
		</select>


    <!-- 用户名重复验证 -->
    <select id="yzLoginName" resultMap="UserBaseMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM T_SES_BMS_USER
        WHERE IS_DELETED = 0 and
        LOGIN_NAME = #{loginName}
        <if test="typeId != null and typeId != ''">
            AND TYPE_ID &lt;&gt; #{typeId}
        </if>
    </select>

    <!-- 根据军官证号查询,仅校验后台用户 -->
    <select id="ajaxOfficerCertNo" resultMap="UserBaseMap" parameterType="Object">
        select
        <include refid="Base_Column_List"/>
        from T_SES_BMS_USER u
        where u.IS_DELETED=0
        and u.OFFICER_CERT_NO = #{officerCertNo}
        and u.TYPE_NAME IS NOT NULL
        <if test="id != null and id != ''">
            and u.ID != #{id}
        </if>
    </select>

    <!-- 获取权限关联用户 -->
    <select id="findByPermenuId" resultMap="UserBaseMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM T_SES_BMS_USER
        WHERE ID IN (
        SELECT USER_ID ID FROM (
        SELECT DISTINCT USER_ID
        FROM T_SES_BMS_USER_ROLE
        WHERE
        ROLE_ID IN (
        SELECT DISTINCT ROLE_ID
        FROM T_SES_BMS_ROLE_PERMISSION
        WHERE PERMENU_ID = #{permenuId})
        UNION
        SELECT DISTINCT USER_ID
        FROM T_SES_BMS_USER_PERMISSION
        WHERE PERMENU_ID = #{permenuId} AND KIND = 0)
        MINUS
        SELECT DISTINCT USER_ID
        FROM T_SES_BMS_USER_PERMISSION
        WHERE PERMENU_ID = #{permenuId} AND KIND = 1
        )
        AND IS_DELETED = 0
        ORDER BY CREATED_AT DESC
    </select>

    <!--查询注销的供应商-->
    <select id="selectLogoutSupplier" parameterType="map" resultMap="SupplierMap">
        SELECT
        <include refid="Base_Column_List_Alias"/>
        FROM T_SES_BMS_USER U
        INNER JOIN T_SES_SMS_SUPPLIER T
        ON U.TYPE_ID = T.ID
        WHERE U.IS_DELETED = #{isDeleted}
        AND U.UPDATED_AT &gt;=
        TO_DATE(#{startTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
        AND
        U.UPDATED_AT &lt;= TO_DATE(#{endTime,jdbcType=TIMESTAMP},'yyyy-MM-dd hh24:mi:ss')
    </select>
</mapper>