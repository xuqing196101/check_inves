<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ses.dao.bms.UserMapper">
  <resultMap id="UserBaseMap" type="ses.model.bms.User">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="IS_DELETED"  property="isDeleted" />
    <result column="REL_NAME" jdbcType="VARCHAR" property="relName" />
    <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
    <result column="GENDER" jdbcType="VARCHAR" property="gender" />
    <result column="TELEPHONE" jdbcType="VARCHAR" property="telephone" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="DUTIES" jdbcType="VARCHAR" property="duties" />
    <result column="TYPE_NAME"  property="typeName" />
    <result column="TYPE_ID" jdbcType="VARCHAR" property="typeId" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="RANDOM_CODE" jdbcType="VARCHAR" property="randomCode" />
    <!-- 查询机构 -->  
    <association column="ORG_ID"  property="org" select="ses.dao.oms.OrgnizationMapper.findOrgnizationById" />
    <!-- 查询创建人 -->  
    <association column="USER_ID"  property="user" select="selectByPrimaryKey" />  
  </resultMap>
  
  <resultMap type="ses.model.bms.User" id="UserResultMap" extends="UserBaseMap">  
    <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型-->
	<collection property="roles" ofType="ses.model.bms.Role">
		<id column="roleId"  property="id" />
	    <result column="roleName" jdbcType="VARCHAR" property="name" />
	    <result column="roleCreatedAt" jdbcType="TIMESTAMP" property="createdAt" />
	    <result column="description" jdbcType="VARCHAR" property="description" />
	    <result column="roleIsDeleted" property="isDeleted" />
	    <result column="roleUpdatedAt" jdbcType="TIMESTAMP" property="updatedAt" />
	    <result column="roleStatus" property="status" />
	    <result column="roleCode" jdbcType="VARCHAR" property="code" />
	    <result column="roleKind" jdbcType="VARCHAR" property="kind" />
	</collection> 
	<collection property="menus" ofType="ses.model.bms.PreMenu">
		<id column="mid"  property="id" />
	    <result column="mname" jdbcType="VARCHAR" property="name" />
	    <result column="mcreatedAt" jdbcType="TIMESTAMP" property="createdAt" />
	    <result column="mupdatedAt" jdbcType="TIMESTAMP" property="updatedAt" />
	    <result column="mtype" jdbcType="VARCHAR" property="type" />
	    <result column="misDeleted" property="isDeleted" />
	    <result column="mstatus" property="status" />
	    <result column="murl" jdbcType="VARCHAR" property="url" />
	    <result column="mposition" property="position" />
	    <result column="menulevel" jdbcType="VARCHAR" property="menulevel" />
	    <result column="mkind" property="kind" />
	    <result column="micon" jdbcType="VARCHAR" property="icon" />
	    <result column="permissionCode" jdbcType="VARCHAR" property="permissionCode" />
	    <!--查询上级菜单   -->
		<association column="mparent"  property="parentId" select="ses.dao.bms.PreMenuMapper.selectByPrimaryKey" /> 
	</collection>  
  </resultMap>
  
  <!-- 表名 -->
  <sql id="Tabel_Name">
    T_SES_BMS_USERINFO
  </sql>
  
  <!-- 表中所有列 -->
  <sql id="Base_Column_List">
    ID, LOGIN_NAME, PASSWORD, CREATED_AT, IS_DELETED, REL_NAME, UPDATED_AT, USER_ID, 
    MOBILE, GENDER, TELEPHONE, EMAIL, ORG_ID, DUTIES, TYPE_NAME, TYPE_ID, ADDRESS, RANDOM_CODE 
  </sql>
  
  <!-- 查询条件 -->
  <sql id="Example_Where_Clause">
    where u.IS_DELETED = 0 
    <trim suffixOverrides=",">
      <if test="id != null and id != ''">
        and u.ID = #{id} 
      </if>
      <if test="loginName != null and loginName != ''">
        and u.LOGIN_NAME like CONCAT(CONCAT('%', #{loginName}), '%')
      </if>
      <if test="password != null and password != ''">
        and u.PASSWORD = #{password} 
      </if>
      <if test="createdAt != null">
        and u.CREATED_AT = #{createdAt} 
      </if>
      <if test="relName != null and relName != ''">
        and u.REL_NAME like CONCAT(CONCAT('%', #{relName}), '%')
      </if>
      <if test="updatedAt != null">
        and u.UPDATED_AT = #{updatedAt} 
      </if>
      <if test="user != null">
        and u.USER_ID = #{user.id}
      </if> 
      <if test="mobile != null and mobile != ''">
        and u.MOBILE = #{mobile}
      </if>
      <if test="gender != null and gender != ''">
        and u.GENDER = #{gender}
      </if>
      <if test="telephone != null and telephone != ''">
        and u.TELEPHONE = #{telephone}
      </if>
      <if test="email != null and email != ''">
        and u.EMAIL= #{email}
      </if>
      <if test="org != null">
        and u.ORG_ID = #{org.id} 
      </if>
      <if test="duties != null and duties != ''">
        and u.DUTIES = #{duties} 
      </if>
      <if test="roleIdList != null and roleIdList != '' ">
            <foreach item="roleIdList" index="index" collection="roleIdList"
				open="" separator="" close="">
				and "INSTR"(roleId, #{roleId})>0
			</foreach>
      </if>
      <if test="typeId != null and typeId != ''">
        and u.TYPE_ID = #{typeId}
      </if>
      <if test="address != null and address != ''">
        and u.ADDRESS = #{address}
      </if>
    </trim>
  </sql>
  
  <!-- 1.根据id查询(不带关联集合) -->
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="UserBaseMap">
    select 
    <include refid="Base_Column_List" />
    from T_SES_BMS_USER 
    where IS_DELETED = 0 
    and ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <!-- 2.根据id删除 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_SES_BMS_USER
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  
  <!-- 3.插入数据 -->
  <insert id="insert" parameterType="ses.model.bms.User">
  	<selectKey keyProperty="id" resultType="String" order="BEFORE">
        select sys_guid() from dual
    </selectKey>
    insert into T_SES_BMS_USER (ID, LOGIN_NAME, PASSWORD, 
      CREATED_AT, IS_DELETED, REL_NAME, 
      UPDATED_AT, USER_ID, MOBILE, 
      GENDER, TELEPHONE, EMAIL, 
      ORG_ID, DUTIES, TYPE_NAME, 
      TYPE_ID, ADDRESS, RANDOM_CODE)
    values (#{id,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{isDeleted}, #{relName,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{user.id,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{gender}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{org.id,jdbcType=VARCHAR}, #{duties,jdbcType=VARCHAR}, #{typeName}, 
      #{typeId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{randomCode,jdbcType=VARCHAR})
  </insert>
  
  <!-- 4.插入不为空数据 -->
  <insert id="insertSelective" parameterType="ses.model.bms.User">
  	<selectKey keyProperty="id" resultType="String" order="BEFORE">
        select sys_guid() from dual
    </selectKey>
    insert into T_SES_BMS_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        ID,
      </if>
      <if test="loginName != null and loginName != ''">
        LOGIN_NAME,
      </if>
      <if test="password != null and password != ''">
        PASSWORD,
      </if>
      <if test="createdAt != null">
        CREATED_AT,
      </if>
      <if test="isDeleted != null">
        IS_DELETED,
      </if>
      <if test="relName != null and relName != ''">
        REL_NAME,
      </if>
      <if test="updatedAt != null">
        UPDATED_AT,
      </if>
      <if test="user != null">
        USER_ID,
      </if>
      <if test="mobile != null and mobile != ''">
        MOBILE,
      </if>
      <if test="gender != null  and gender != ''">
        GENDER,
      </if>
      <if test="telephone != null and telephone != ''">
        TELEPHONE,
      </if>
      <if test="email != null and email != ''">
        EMAIL,
      </if>
      <if test="org != null">
        ORG_ID,
      </if>
      <if test="duties != null and duties != ''">
        DUTIES,
      </if>
      <if test="typeName != null">
        TYPE_NAME,
      </if>
      <if test="typeId != null and typeId != ''">
        TYPE_ID,
      </if>
      <if test="address != null and address != ''">
        ADDRESS,
      </if>
      <if test="randomCode != null and randomCode != ''">
        RANDOM_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null and id != ''">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null and loginName != ''">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted},
      </if>
      <if test="relName != null and relName != ''">
        #{relName,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null">
        #{user.id,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null and mobile != ''">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null and gender != ''">
        #{gender},
      </if>
      <if test="telephone != null and telephone != ''">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        #{org.id,jdbcType=VARCHAR},
      </if>
      <if test="duties != null and duties != ''">
        #{duties,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        #{typeName},
      </if>
      <if test="typeId != null and typeId != ''">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null and randomCode != ''">
        #{randomCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <!-- 5.根据更新不为空数据 -->
  <update id="updateByPrimaryKeySelective" parameterType="ses.model.bms.User">
    update T_SES_BMS_USER
    <set>
      <if test="loginName != null and loginName != ''">
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null and password != ''">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        IS_DELETED = #{isDeleted},
      </if>
      <if test="relName != null and relName != ''">
        REL_NAME = #{relName,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null ">
        USER_ID = #{user.id,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null and mobile != ''">
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null and gender != ''">
        GENDER = #{gender},
      </if>
      <if test="telephone != null and telephone != ''">
        TELEPHONE = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email != ''">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="org != null">
        ORG_ID = #{org.id,jdbcType=VARCHAR},
      </if>
      <if test="duties != null and duties != ''">
        DUTIES = #{duties,jdbcType=VARCHAR},
      </if>
      <if test="typeName != null">
        TYPE_NAME = #{typeName},
      </if>
      <if test="typeId != null and typeId != ''">
        TYPE_ID = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="randomCode != null and randomCode != ''">
        RANDOM_CODE = #{randomCode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 6.更新数据 -->
  <update id="updateByPrimaryKey" parameterType="ses.model.bms.User">
    update T_SES_BMS_USER
    set LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      IS_DELETED = #{isDeleted},
      REL_NAME = #{relName,jdbcType=VARCHAR},
      UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      USER_ID = #{user.id,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      GENDER = #{gender},
      TELEPHONE = #{telephone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      ORG_ID = #{org.id,jdbcType=VARCHAR},
      DUTIES = #{duties,jdbcType=VARCHAR},
      TYPE_NAME = #{typeName},
      TYPE_ID = #{typeId,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      RANDOM_CODE = #{randomCode,jdbcType=VARCHAR} 
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 7.列表总数 -->
  <select id="queryByCount" resultType="java.lang.Integer" parameterType="Object">
    select count(1) 
    from T_SES_BMS_USERINFO
    where IS_DELETED = 0
  </select>
  
  <!-- 8.查询列表(查询不为空的字段，不带关联集合) -->
<!--   <select id="queryByList" resultMap="UserBaseMap" parameterType="Object">
    select
    <include refid="Base_Column_List" />
    from T_SES_BMS_USER u
    <include refid="Example_Where_Clause"/>
    ORDER BY u.CREATED_AT DESC
  </select> -->
  
  <select id="queryByList" resultMap="UserBaseMap" parameterType="Object">
	SELECT
		*
		FROM
			"JDCG"."T_SES_BMS_USER" u
		LEFT JOIN (
			SELECT
				ID,
				wm_concat (DISTINCT(roleName)) AS roleNames ,wm_concat (DISTINCT(roleId)) AS roleId
			FROM
				(
					SELECT
						u. ID,
	          t2.role_id as roleId,
						T3.name AS roleName
					FROM
						"JDCG"."T_SES_BMS_USER" u
					LEFT JOIN T_SES_BMS_USER_ROLE T2 ON u. ID = T2.USER_ID
		      LEFT JOIN T_SES_BMS_ROLE t3 on T2.ROLE_ID = t3.id
				)
			GROUP BY
				ID
		) t2 ON u. ID = t2. ID
		 <include refid="Example_Where_Clause"/>
	    ORDER BY CREATED_AT DESC
  </select>
  
  <!-- 9.根据不为空的条件查询用户信息（包含角色信息） -->  
  <select id="selectUser" parameterType="Object" resultMap="UserResultMap">  
      SELECT
			U .*,
			r. ID AS roleId,
			r. NAME AS roleName,
			r.CREATED_AT AS roleCreatedAt,
			r.DESCRIPTION AS description,
			r.IS_DELETED AS roleIsDeleted,
			r.UPDATED_AT AS roleUpdatedAt,
			r.STATUS AS roleStatus,
			r.CODE AS roleCode,
			r.KIND AS roleKind,
			pm. ID AS mid,
			pm. NAME AS mname,
			pm.MENU_TYPE AS mtype,
			pm.IS_DELETED AS misDeleted,
			pm.STATUS AS mstatus,
			pm.URL AS murl,
			pm.CREATED_AT AS mcreatedAt,
			pm.UPDATED_AT AS mupdatedAt,
			pm.POSITION AS mposition,
			pm.MENU_LEVEL AS menulevel,
			pm.PARENT_ID AS mparent,
			pm.KIND AS mkind,
			pm.ICON AS micon,
			pm.PERMISSION_CODE AS permissionCode
		FROM
			T_SES_BMS_USER U
		LEFT JOIN T_SES_BMS_USER_ROLE ur ON U . ID = ur."USER_ID"
		LEFT JOIN T_SES_BMS_ROLE r ON ur."ROLE_ID" = r. ID
		LEFT JOIN T_SES_BMS_USER_PERMISSION up ON U . ID = up.USER_ID
		LEFT JOIN T_SES_BMS_PERMISSION pm ON up.PERMENU_ID = pm. ID
      	<include refid="Example_Where_Clause"/>
      	ORDER BY u.CREATED_AT DESC,pm.MENU_LEVEL ,pm.POSITION ASC
  </select>
  
  <!-- 10.保存用户和角色之间的关系信息 -->  
  <insert id="saveRelativity" parameterType="Object">  
      insert into T_SES_BMS_USER_ROLE("USER_ID","ROLE_ID")  	
      values(#{userId.id},#{roleId.id})  
  </insert>
  
  <!-- 11.保存用户和菜单之间的关系信息 -->  
  <insert id="saveUserMenu" parameterType="Object">  
      insert into T_SES_BMS_USER_PERMISSION	
	  <trim prefix="(" suffix=")" suffixOverrides=",">
	      <if test="user != null">
	        USER_ID,
	      </if>
	      <if test="preMenu != null">
	        PERMENU_ID,
	      </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="user != null">
        	#{user.id,jdbcType=VARCHAR},
          </if>
          <if test="preMenu != null">
        	#{preMenu.id,jdbcType=VARCHAR},
          </if>
      </trim>
  </insert>
  
  <!-- 12.删除用户和菜单之间的关系信息 -->  
  <delete id="deleteUserMenu" parameterType="Object">  
      delete from T_SES_BMS_USER_PERMISSION  
      <where>  
          <if test="user != null">"USER_ID" = #{user.id}</if>  
          <if test="preMenu != null">and "PERMENU_ID" = #{preMenu.id}</if>  
      </where>  
  </delete>  
  
  <!-- 13.根据用户名查询 -->
  <select id="queryByLoginName" resultMap="UserBaseMap" parameterType="Object">
    select
    <include refid="Base_Column_List" />
    from T_SES_BMS_USER u
    where u.IS_DELETED=0 and
    u.LOGIN_NAME = #{loginName}
  </select>
  
  <!-- 根据typeId查询用户 -->
  <select id="findUserByTypeId" resultMap="UserBaseMap" >
      SELECT 
       <include refid="Base_Column_List" />
      FROM T_SES_BMS_USER 
      WHERE  TYPE_ID = #{typeId}
  </select>
  
  <!-- 14.用户名、密码登录查询（包含角色等关联信息） -->  
  <select id="queryByLogin" parameterType="Object" resultMap="UserResultMap">  
      SELECT
			U .*,
			r. ID AS roleId,
			r. NAME AS roleName,
			r.CREATED_AT AS roleCreatedAt,
			r.DESCRIPTION AS description,
			r.IS_DELETED AS roleIsDeleted,
			r.UPDATED_AT AS roleUpdatedAt,
			r.STATUS AS roleStatus,
			r.CODE AS roleCode,
			r.KIND AS roleKind,
			pm. ID AS mid,
			pm. NAME AS mname,
			pm.MENU_TYPE AS mtype,
			pm.IS_DELETED AS misDeleted,
			pm.STATUS AS mstatus,
			pm.URL AS murl,
			pm.CREATED_AT AS mcreatedAt,
			pm.UPDATED_AT AS mupdatedAt,
			pm.POSITION AS mposition,
			pm.MENU_LEVEL AS menulevel,
			pm.PARENT_ID AS mparent,
			pm.KIND AS mkind,
			pm.ICON AS micon,
			pm.PERMISSION_CODE AS permissionCode
		FROM
			T_SES_BMS_USER U
		LEFT JOIN T_SES_BMS_USER_ROLE ur ON U . ID = ur."USER_ID"
		LEFT JOIN T_SES_BMS_ROLE r ON ur."ROLE_ID" = r. ID
		LEFT JOIN T_SES_BMS_USER_PERMISSION up ON U . ID = up.USER_ID
		LEFT JOIN T_SES_BMS_PERMISSION pm ON up.PERMENU_ID = pm. ID
      	where
      		U .IS_DELETED = 0
			AND U .LOGIN_NAME = #{loginName}
			AND U . PASSWORD = #{password}
		ORDER BY pm.MENU_LEVEL ,pm.POSITION ASC
  </select>
           <!-- 15.查询拥有版主权限的角色 （彭仲俊）-->
     <select id="queryParkManagers" parameterType="java.util.Map" resultMap="UserBaseMap">
          SELECT   
          <include refid="Base_Column_List" />
          FROM T_SES_BMS_USER 
          WHERE IS_DELETED =0 
          AND ID IN (
                    SELECT USER_ID FROM T_SES_BMS_USER_ROLE
                    WHERE ROLE_ID = (
                            SELECT ID FROM T_SES_BMS_ROLE
                            WHERE STATUS = 0 
                            AND CODE = #{code}
                            )
                     )
           ORDER BY CREATED_AT DESC
    </select> 
</mapper>