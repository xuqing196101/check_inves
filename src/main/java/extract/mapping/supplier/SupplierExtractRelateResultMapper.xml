<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="extract.dao.supplier.SupplierExtractRelateResultMapper">
	<resultMap id="BaseResultMap" type="extract.model.supplier.SupplierExtractResult">
		<!-- @mbggenerated -->
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="CONDITION_ID" jdbcType="VARCHAR"
			property="supplierConditionId" />
		<result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
		<result column="IS_DELETED" jdbcType="DECIMAL" property="isDeleted" />
		<result column="REASON" jdbcType="VARCHAR" property="reason" />
		<result column="PROJECT_ID" jdbcType="VARCHAR" property="projectId" />
		<result column="UPDATED_AT" jdbcType="VARCHAR" property="updatedAt" />
		<result column="CON_TYPE_ID" jdbcType="VARCHAR" property="conTypeId" />
		<result column="STATUS_COUNT" jdbcType="DECIMAL" property="statusCount" />
		<result column="MOBILE" property="mobile" />
		<result column="JOIN" property="join" />
		<result column="SUPPLIER_NAME" property="supplierName" />
		<result column="ARMY_BUSINESS_NAME" property="armyBusinessName" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="armyBuinessTelephone" />
		<!-- 供应商 -->
		<!-- <association column="SUPPLIER_ID" property="supplier"
			select="ses.dao.sms.SupplierMapper.selectByPrimaryKeyItem" /> -->
	</resultMap>
	<resultMap id="findSupplierMap" type="ses.model.sms.Supplier">
		<id column="ID" property="id" />
		<result column="MOBILE" property="mobile" />
		<result column="SUPPLIER_NAME" property="supplierName" />
		<result column="SUPPLIER_TYPE_ID" property="supplierTypeId" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="BUSINESS_CERT" property="businessCert" />
		<result column="CONTACT_NAME" property="contactName" />
		<result column="CONTACT_TELEPHONE" property="contactTelephone" />
		<result column="CONTACT_MOBILE" property="contactMobile" />
		<result column="CONTACT_EMAIL" property="contactEmail" />
		<result column="CONTACT_ADDRESS" property="contactAddress" />
		<result column="ARMY_BUSINESS_NAME" property="armyBusinessName" />
		<result column="ARMY_BUSINESS_MOBILE" property="armyBuinessMobile" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="armyBuinessTelephone" />
	</resultMap>
	
	<resultMap type="extract.autoVoiceExtract.PeopleYytz" id="resultForVoiceExtract">
		<result column="SUPPLIER_NAME" property="username" />
		<result column="ARMY_BUSINESS_NAME" property="contactname" />
		<result column="ARMY_BUSINESS_MOBILE" property="mobile" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="contactmobile" />
	</resultMap>
	
	<sql id="Base_Column_List">
		<!-- @mbggenerated -->
		ID, SUPPLIER_ID, SUPPLIER_CONDITION_ID, CREATED_AT, OPERATING_TYPE,
		IS_DELETED, REASON,
		PROJECT_ID, UPDATED_AT, CON_TYPE_ID,
		STATUS_COUNT,REVIEW_TYPE
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!-- @mbggenerated -->
		select
		<include refid="Base_Column_List" />
		from T_SES_SMS_EXTRACT_RESULT
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- @mbggenerated -->
		delete from T_SES_SMS_EXTRACT_RESULT
		where ID =
		#{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="extract.model.supplier.SupplierExtractResult">
		<!-- @mbggenerated -->
		insert into T_SES_SMS_EXTRACT_RESULT (ID, SUPPLIER_ID,
		SUPPLIER_CONDITION_ID,
		CREATED_AT, OPERATING_TYPE, IS_DELETED,
		REASON,
		PROJECT_ID, UPDATED_AT,
		CON_TYPE_ID, STATUS_COUNT,REVIEW_TYPE)
		values
		(#{id,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR},
		#{supplierConditionId,jdbcType=VARCHAR},
		#{createdAt,jdbcType=TIMESTAMP},
		#{operatingType,jdbcType=DECIMAL},
		#{isDeleted,jdbcType=DECIMAL},
		#{reason,jdbcType=VARCHAR},
		#{projectId,jdbcType=VARCHAR},
		#{updatedAt,jdbcType=VARCHAR},
		#{conTypeId,jdbcType=VARCHAR},
		#{statusCount,jdbcType=DECIMAL},#{reviewType,jdbc=VARCHAR})
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">
		 INSERT ALL
        <foreach item="t" index="index" collection="list">
       		insert into T_SES_SMS_EXTRACT_RESULT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="conditionId != null">
				CONDITION_ID,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="join != null">
				JOIN,
			</if>
			<if test="reason != null">
				REASON,
			</if>
			<if test="supplierType != null">
				SUPPLIER_TYPE,
			</if>
			<if test="recordId != null">
				RECORD_ID
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="conditionId != null">
				#{conditionId,jdbcType=VARCHAR},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="join != null">
				#{join,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="supplierType != null">
				#{supplierType,jdbcType=VARCHAR},
			</if>
			<if test="recordId != null">
				#{recordId,jdbcType=VARCHAR}
			</if>
		</trim>
        </foreach>
        SELECT 1 FROM DUAL
	
	</insert>
	
	<insert id="insertSelective" parameterType="extract.model.supplier.SupplierExtractResult">
		<!-- @mbggenerated -->
		insert into T_SES_SMS_EXTRACT_RESULT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="conditionId != null">
				CONDITION_ID,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="join != null">
				JOIN,
			</if>
			<if test="reason != null">
				REASON,
			</if>
			<if test="supplierType != null">
				SUPPLIER_TYPE,
			</if>
			<if test="recordId != null">
				RECORD_ID
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="conditionId != null">
				#{conditionId,jdbcType=VARCHAR},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="join != null">
				#{join,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="supplierType != null">
				#{supplierType,jdbcType=VARCHAR},
			</if>
			<if test="recordId != null">
				#{recordId,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	
	
	<update id="updateByPrimaryKeySelective" parameterType="extract.model.supplier.SupplierExtractResult">
		<!-- @mbggenerated -->
		update T_SES_SMS_EXTRACT_RESULT
		<set>
			<if test="supplierId != null">
				SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="supplierConditionId != null">
				SUPPLIER_CONDITION_ID =
				#{supplierConditionId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="operatingType != null">
				OPERATING_TYPE = #{operatingType,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="projectId != null">
				PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="statusCount != null">
				STATUS_COUNT = #{statusCount,jdbcType=DECIMAL},
			</if>
			<if test="reviewType != null">
				REVIEW_TYPE = #{reviewType,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="extract.model.supplier.SupplierExtractResult">
		<!-- @mbggenerated -->
		update T_SES_SMS_EXTRACT_RESULT
		set SUPPLIER_ID =
		#{supplierId,jdbcType=VARCHAR},
		SUPPLIER_CONDITION_ID =
		#{supplierConditionId,jdbcType=VARCHAR},
		CREATED_AT =
		#{createdAt,jdbcType=TIMESTAMP},
		OPERATING_TYPE =
		#{operatingType,jdbcType=DECIMAL},
		IS_DELETED =
		#{isDeleted,jdbcType=DECIMAL},
		REASON = #{reason,jdbcType=VARCHAR},
		PROJECT_ID = #{projectId,jdbcType=VARCHAR},
		UPDATED_AT =
		#{updatedAt,jdbcType=VARCHAR},
		CON_TYPE_ID =
		#{conTypeId,jdbcType=VARCHAR},
		STATUS_COUNT =
		#{statusCount,jdbcType=DECIMAL},
		REVIEW_TYPE =
		#{reviewType,jdbcType=VARCHAR},
		where ID = #{id,jdbcType=VARCHAR}
	</update>

	<!-- 关联抽取表 -->
	<select id="getById" parameterType="java.lang.String" resultMap="BaseResultMap">

		SELECT
		<include refid="Base_Column_List" />
		FROM
		T_SES_SMS_EXTRACT_RESULT WHERE PROJECT_ID =#{id} AND
		OPERATING_TYPE =1

	</select>

	<select id="list" parameterType="extract.model.supplier.SupplierExtractResult"
		resultMap="BaseResultMap">
		SELECT
		pe.*
		FROM
		T_SES_SMS_EXTRACT_RESULT pe
		INNER JOIN
		T_SES_SMS_SUPPLIER ss ON PE.SUPPLIER_ID = ss."ID"
		Where STATUS_COUNT=0
		<if test="id != null and id != ''">
			AND pe.ID =#{id}
		</if>
		<if test="supplierConditionId != null and supplierConditionId != ''">
			AND pe.SUPPLIER_CONDITION_ID =#{supplierConditionId}
		</if>
		<if test="reason != null and reason != ''">
			AND pe.OPERATING_TYPE in (${reason})
		</if>
		<if test="reviewType != null and reviewType != ''">
			AND pe.REVIEW_TYPE = #{reviewType}
		</if>
		<if test="supplierId != null and supplierId != '' ">
			AND pe.SUPPLIER_ID = #{supplierId}
		</if>
		<if test="projectId != null and projectId != ''">
			AND pe.PROJECT_ID =#{projectId}
			ORDER BY
			SUPPLIER_CONDITION_ID
		</if>
		<if test="supplier!=null">
			<if test="supplier.supplierName!=null and supplier.supplierName !='' ">
				AND SS.SUPPLIER_NAME LIKE CONCAT(CONCAT('%', #{supplier.supplierName}), '%')
			</if>
		</if>
	</select>
	<!-- 删除重复数据 -->
	<delete id="deleteData" parameterType="Map">
		delete from
		T_SES_SMS_EXTRACT_RESULT

		where SUPPLIER_ID in (select SUPPLIER_ID
		from
		T_SES_SMS_EXTRACT_RESULT group
		by SUPPLIER_ID having
		count(SUPPLIER_ID) >
		1)

		and rowid not in (select min(rowid) from
		T_SES_SMS_EXTRACT_RESULT
		group
		by SUPPLIER_ID having
		count(SUPPLIER_ID )>1)
		AND
		PROJECT_ID=#{projectId}
		AND
		SUPPLIER_CONDITION_ID=#{expertConditionId}
	</delete>
	<!-- 当抽取数量满足时修改还未抽取的专家状态为1 -->
	<update id="updateStatusCount" parameterType="map">
		UPDATE
		T_SES_SMS_EXTRACT_RESULT
		SET STATUS_COUNT = #{type}
		WHERE
		CON_TYPE_ID =
		#{conTypeId}
		AND OPERATING_TYPE = 0
	</update>
	<!-- 包下是否已存在供应商 -->
	<select id="getSupplierId" parameterType="Map" resultType="java.lang.Integer">
		SELECT "COUNT"(SUPPLIER_ID) as count FROM
		T_SES_SMS_EXTRACT_RESULT WHERE
		SUPPLIER_ID=#{supplierId}
		AND
		PROJECT_ID=#{projectId}
	</select>
	<insert id="insertList" parameterType="java.util.List">
		INSERT INTO T_SES_SMS_EXTRACT_RESULT
		(SUPPLIER_ID,SUPPLIER_CONDITION_ID,PROJECT_ID,CON_TYPE_ID)
		<foreach collection="list" item="item" index="index"
			separator="union" close=")" open="(">
			select
			#{item.supplierId,jdbcType=VARCHAR},
			#{item.supplierConditionId,jdbcType=VARCHAR},
			#{item.projectId,jdbcType=VARCHAR},
			#{item.conTypeId,jdbcType=VARCHAR}
			from dual
		</foreach>
	</insert>
	<!-- 关联 -->
	<select id="getBuyConId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		T_SES_SMS_EXTRACT_RESULT WHERE
		SUPPLIER_CONDITION_ID=#{supplierId} AND (OPERATING_TYPE =1 OR
		OPERATING_TYPE =2 OR OPERATING_TYPE =3)
	</select>

	<!-- 删除未抽取的的数据 -->
	<select id="del" parameterType="Map">
		DELETE FROM ( SELECT
		*
		FROM
		T_SES_SMS_EXTRACT_RESULT
		WHERE PROJECT_ID
		IN (SELECT "ID" FROM
		T_BSS_PPMS_PACKAGE WHERE PROJECT_ID =
		#{projectId}) AND
		SUPPLIER_ID =
		#{supplierId}
		AND OPERATING_TYPE = 0 )
	</select>

	<!-- 删除未抽取的的数据 -->
	<select id="delPe" parameterType="java.lang.String">
		DELETE FROM (
		SELECT T1.* FROM
		T_SES_SMS_EXTRACT_RESULT t1 LEFT JOIN
		T_BSS_PPMS_PACKAGE t2 ON
		T1.PROJECT_ID=t2."ID" WHERE t2.PROJECT_ID
		=#{projectId} AND
		t1.OPERATING_TYPE = 0 )
	</select>

	<resultMap id="BaseMap" type="extract.model.supplier.SupplierExtractResult">
		<result column="SUPPLIER_ID" jdbcType="VARCHAR" property="supplierId" />
		<result column="SUPPLIER_TYPE_ID" jdbcType="VARCHAR" property="supplierTypeId" />
	</resultMap>

	<select id="selectSupplierType" parameterType="java.lang.String"
		resultMap="BaseMap">
		SELECT
		wm_concat(t1.SUPPLIER_TYPE_ID) as
		SUPPLIER_TYPE_ID,t1.SUPPLIER_ID
		FROM
		T_SES_SMS_SUPPLIER_TYPE_RELATE t1
		INNER JOIN
		T_SES_SMS_EXTRACT_RESULT t2 ON t1.SUPPLIER_ID =
		T2.SUPPLIER_ID
		WHERE T2.SUPPLIER_CONDITION_ID =#{conditionId}
		GROUP BY
		t1.SUPPLIER_ID
	</select>
	
	
	<!-- 查询已经抽取到的供应商 -->
	<select id="selectSupplierIdListByRecordId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT SUPPLIER_ID supplierIds FROM T_SES_SMS_EXTRACT_RESULT WHERE RECORD_ID = #{value}
	</select>
	<!-- 查询本项目已经抽取到的供应商 -->
	<select id="selectSupplierIdListByProjectId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT DISTINCT R.SUPPLIER_ID supplierIds FROM T_SES_SMS_EXTRACT_RESULT R LEFT JOIN T_SES_SMS_EXTRACT_RECORD E ON R.RECORD_ID = E.ID  WHERE E.PROJECT_ID = #{value}
	</select>

	<!-- 供应商个数 -->
	<select id="listExtractionExpertCount" parameterType="extract.model.supplier.SupplierExtractCondition" resultType="int">
		SELECT COUNT(DISTINCT S.ID) FROM T_SES_SMS_SUPPLIER S
		<if test="supplierTypeCode !=null and supplierTypeCode !='' ">
			LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE T ON T.SUPPLIER_ID = S.ID
			LEFT JOIN T_SES_SMS_SUPPLIER_ITEM I ON I.SUPPLIER_ID = S.ID
			LEFT JOIN T_SES_BMS_CATEGORY_QUA QUA ON I.CATEGORY_ID = QUA.CATEGORY_ID
			
			<choose>
				<when test="supplierTypeCode == 'PROJECT'.toString()">
					LEFT JOIN T_SES_SMS_SUPPLIER_MAT_ENG E ON E.SUPPLIER_ID = S.ID
					LEFT JOIN T_SES_SMS_SUPPLIER_APTITUTE A ON A.MAT_ENG_ID = E.ID
				</when>
				<otherwise>
					LEFT JOIN T_SES_SMS_SUPPLIER_ITEM_LEVEL L ON S.ID = L.SUPPLIER_ID
				</otherwise>
			</choose>
		</if>
		WHERE S.IS_PROVISIONAL = 0 AND S.IS_DELETED = 0 AND S.SUPPLIER_STATUS in ( 1,5,7) 
		<!-- 查询地址 -->
		<!-- <if test="province != null and province != '' ">
			AND S.ADDRESS in (SELECT AREA.ID from T_SES_BMS_AREA AREA WHERE AREA.PARENT_ID IN	<foreach collection="provinces"  open="(" item="index" close=")" separator=",">	#{index}	</foreach>)
		</if> -->
		<if test="addressId != null and addressId != '' ">
			AND S.ADDRESS in 	<foreach collection="addressIds"  open="(" item="index" close=")" separator=",">	#{index}	</foreach>
		</if>
		<!-- 查询类型 -->
		<if test="supplierTypeCode !=null and supplierTypeCode != '' ">
			<!--  AND I.Supplier_Type_Relate_Id  IN  <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach>  -->
			 AND T.SUPPLIER_TYPE_ID  IN  <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach> 
		</if>	 
		<!-- 查询品目 -->
		<if test="isMulticondition !=null and isMulticondition != ''">
			<if test="isMulticondition == 1 and categoryId !=null and categoryId != '' ">
				 AND I.CATEGORY_ID IN 
				 (select distinct TEM.id from (
				  select CATE.* from T_SES_BMS_CATEGORY CATE START WITH  CATE.id in 
					<foreach collection="categoryIds" open="(" close=")" separator="," index="index" item="item">
						#{item}
					</foreach>
					CONNECT BY PRIOR CATE.id=CATE.PARENT_ID order by level desc ) TEM where TEM.is_publish = 0 and (TEM.is_parent is null or TEM.is_parent = 'false'))
				
					<!--  <foreach collection="categoryIds" open="(" separator="," item="cid" close=")"> #{cid} </foreach> -->
			</if>
			
			
			<if test="isMulticondition == 2 and categoryId !=null and categoryId != '' ">
				AND S.ID IN (SELECT  IT.SUPPLIER_ID FROM T_SES_SMS_SUPPLIER_ITEM IT WHERE IT.CATEGORY_ID IN 
				
				 (select distinct TEM.id from (
				  select CATE.* from T_SES_BMS_CATEGORY CATE START WITH  CATE.id in 
					<foreach collection="categoryIds" open="(" close=")" separator="," index="index" item="item">
						#{item}
					</foreach>
					CONNECT BY PRIOR CATE.id=CATE.PARENT_ID order by level desc ) TEM where TEM.is_publish = 0 and (TEM.is_parent is null or TEM.is_parent = 'false'))
				
				<!-- <foreach collection="categoryIds" open="(" separator="," item="cid" close=")"> #{cid} </foreach> -->
				 GROUP BY IT.SUPPLIER_ID  HAVING COUNT(1) = #{csize})
				<!--  AND
				 <trim prefix="(" suffixOverrides="AND" suffix=")">
				 	 <foreach collection="categoryIds" item="cid" > I.CATEGORY_ID = #{cid} AND </foreach>
				 </trim> -->
			</if>
		</if>
		<!-- 查询资质 -->
		<if test="quaId !=null and quaId != '' ">
			<if test="supplierTypeCode == 'PROJECT'.toString()">
				AND  A.CERT_TYPE IN  <foreach collection="quaIds" item="qid" open="(" close=")" separator=","> #{qid}  </foreach>
			</if>
			<if test="supplierTypeCode != 'PROJECT'.toString()">
				AND  QUA.QUA_ID IN  <foreach collection="quaIds" item="qid" open="(" close=")" separator=","> #{qid}  </foreach>
			</if>
		</if>
		<!-- 查询等级 -->
		<if test="levelTypeId !=null and levelTypeId != '' ">
			<choose>
				<when test="supplierTypeCode == 'PROJECT'.toString()">
					AND  A."APTITUTE_ LEVEL" IN  <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
				</when>
				<otherwise>
					AND L.SUPPLIER_LEVEL IN <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
				</otherwise>
			</choose>
		</if>
		<!-- 保密要求 -->
		<if test="isHavingConCert !=null and isHavingConCert != '' ">
			AND S.IS_HAVING_CON_CERT = #{isHavingConCert}
		</if>
		<!-- 企业性质 -->
		<if test="businessNature !=null and businessNature != '' ">
			AND S.BUSINESS_NATURE = #{businessNature}
		</if>
		<!-- 境外分支 -->
		<if test="overseasBranch !=null and overseasBranch != '' ">
			AND S.OVERSEAS_BRANCH = #{overseasBranch}
		</if>
		<if test="supplierIds != null and supplierIds.size>0 ">
			AND S.ID NOT IN
			<foreach collection="supplierIds" open="(" item="sid" separator="," close=")">
				#{sid}	
			</foreach>
		</if>
	</select>
	<!-- 供应商抽取集合 -->
	<select id="listExtractionExpert" parameterType="extract.model.supplier.SupplierExtractCondition"
		resultMap="findSupplierMap">
		SELECT SP.* FROM 
		(SELECT DISTINCT S.ID,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_MOBILE,S.ARMY_BUSINESS_TELEPHONE,T.SUPPLIER_TYPE_ID  FROM T_SES_SMS_SUPPLIER S
		<if test="supplierTypeCode !=null and supplierTypeCode !='' ">
			LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE T ON T.SUPPLIER_ID = S.ID
			LEFT JOIN T_SES_SMS_SUPPLIER_ITEM I ON I.SUPPLIER_ID = S.ID
			LEFT JOIN T_SES_BMS_CATEGORY_QUA QUA ON I.CATEGORY_ID = QUA.CATEGORY_ID
			<choose>
				<when test="supplierTypeCode == 'PROJECT'.toString()">
					LEFT JOIN T_SES_SMS_SUPPLIER_MAT_ENG E ON E.SUPPLIER_ID = S.ID
					LEFT JOIN T_SES_SMS_SUPPLIER_APTITUTE A ON A.MAT_ENG_ID = E.ID
				</when>
				<otherwise>
					LEFT JOIN T_SES_SMS_SUPPLIER_ITEM_LEVEL L ON S.ID = L.SUPPLIER_ID
				</otherwise>
			</choose>
		</if>
		WHERE S.IS_PROVISIONAL = 0 AND S.IS_DELETED = 0 AND S.SUPPLIER_STATUS in ( 1,5,7) 
		<!-- 查询地址 -->
		<if test="addressId != null and addressId != '' ">
			AND S.ADDRESS in 	<foreach collection="addressIds"  open="(" item="index" close=")" separator=",">	#{index}	</foreach>
		</if>
		<!-- 查询类型 -->
		<if test="supplierTypeCode !=null and supplierTypeCode != '' ">
			<!--  AND I.Supplier_Type_Relate_Id  IN  <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach>  -->
			 AND T.SUPPLIER_TYPE_ID  IN  <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach> 
		</if>	 
		<!-- 查询品目 -->
		<if test="isMulticondition !=null and isMulticondition != ''">
			<if test="isMulticondition == 1 and categoryId !=null and categoryId != '' ">
				 AND I.CATEGORY_ID IN 
				  (select distinct TEM.id from (
				  select CATE.* from T_SES_BMS_CATEGORY CATE START WITH  CATE.id in 
					<foreach collection="categoryIds" open="(" close=")" separator="," index="index" item="item">
						#{item}
					</foreach>
					CONNECT BY PRIOR CATE.id=CATE.PARENT_ID order by level desc ) TEM where TEM.is_publish = 0 and (TEM.is_parent is null or TEM.is_parent = 'false'))
				 
				<!--  <foreach collection="categoryIds" open="(" separator="," item="cid" close=")"> #{cid} </foreach> -->
			</if>
			<if test="isMulticondition == 2 and categoryId !=null and categoryId != '' ">
				AND S.ID IN (SELECT  I.SUPPLIER_ID FROM T_SES_SMS_SUPPLIER_ITEM I WHERE I.CATEGORY_ID IN 
				
				 (select distinct TEM.id from (
				  select CATE.* from T_SES_BMS_CATEGORY CATE START WITH  CATE.id in 
					<foreach collection="categoryIds" open="(" close=")" separator="," index="index" item="item">
						#{item}
					</foreach>
					CONNECT BY PRIOR CATE.id=CATE.PARENT_ID order by level desc ) TEM where TEM.is_publish = 0 and (TEM.is_parent is null or TEM.is_parent = 'false'))
				
				<!-- <foreach collection="categoryIds" open="(" separator="," item="cid" close=")"> #{cid} </foreach> -->
				 GROUP BY I.SUPPLIER_ID  HAVING COUNT(1) = #{csize})
				<!--  AND
				 <trim prefix="(" suffixOverrides="AND" suffix=")">
				 	 <foreach collection="categoryIds" item="cid" > I.CATEGORY_ID = #{cid} AND </foreach>
				 </trim> -->
			</if>
		</if>
		<!-- 查询资质 -->
		<if test="quaId !=null and quaId != '' ">
			<if test="supplierTypeCode == 'PROJECT'.toString()">
				AND  A.CERT_TYPE IN  <foreach collection="quaIds" item="qid" open="(" close=")" separator=","> #{qid}  </foreach>
			</if>
			<if test="supplierTypeCode != 'PROJECT'.toString()">
				AND  QUA.QUA_ID IN  <foreach collection="quaIds" item="qid" open="(" close=")" separator=","> #{qid}  </foreach>
			</if>
		</if>
		<!-- 查询等级 -->
		<if test="levelTypeId !=null and levelTypeId != '' ">
			<choose>
				<when test="supplierTypeCode == 'PROJECT'.toString()">
					AND  A."APTITUTE_ LEVEL" IN  <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
				</when>
				<otherwise>
					AND L.SUPPLIER_LEVEL IN <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
				</otherwise>
			</choose>
		</if>
		<!-- 保密要求 -->
		<if test="isHavingConCert !=null and isHavingConCert != '' ">
			AND S.IS_HAVING_CON_CERT = #{isHavingConCert}
		</if>
		<!-- 企业性质 -->
		<if test="businessNature !=null and businessNature != '' ">
			AND S.BUSINESS_NATURE = #{businessNature}
		</if>
		<!-- 境外分支 -->
		<if test="overseasBranch !=null and overseasBranch != '' ">
			AND S.OVERSEAS_BRANCH = #{overseasBranch}
		</if>
		<if test="supplierIds != null and supplierIds.size>0 ">
			AND S.ID NOT IN
			<foreach collection="supplierIds" open="(" item="sid" separator="," close=")">
				#{sid}	
			</foreach>
		</if>
		ORDER BY dbms_random.random) SP WHERE ROWNUM = 1
	</select>
	
	<!-- 详细抽取结果 -->
	<!-- 0 不能参加，1能参加 -->
	<select id="getSupplierListByRid" parameterType="map" resultMap="BaseResultMap">
		SELECT DISTINCT R.JOIN,R.REASON,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_TELEPHONE FROM T_SES_SMS_EXTRACT_RESULT R LEFT JOIN T_SES_SMS_SUPPLIER S ON R.SUPPLIER_ID = S.ID 
		WHERE R.RECORD_ID = #{recordId} AND R.SUPPLIER_TYPE = #{supplierType}  AND R.JOIN IN (0,1) ORDER BY R.JOIN DESC
	</select>
	
	
	<!-- 真实抽取结果 -->
	<!-- 0 不能参加，1能参加 -->
	<select id="getSupplierListByRidForRel" parameterType="map" resultMap="BaseResultMap">
		SELECT DISTINCT R.OPERATING_TYPE JOIN,R.REASON,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_TELEPHONE FROM T_SES_SMS_SUPPLIER_EXT_RELATE R LEFT JOIN T_SES_SMS_SUPPLIER S ON R.SUPPLIER_ID = S.ID 
		WHERE R.RECORD_ID = #{recordId}  <!--AND R.SUPPLIER_TYPE = #{supplierType}  --> AND R.OPERATING_TYPE IN (0,1) ORDER BY R.OPERATING_TYPE DESC
	</select>
	
	
	<!-- 预研抽取结果 -->
	<!-- 0 不能参加，1能参加 -->
	<select id="getSupplierListByRidForAdv" parameterType="map" resultMap="BaseResultMap">
		SELECT DISTINCT R.OPERATING_TYPE JOIN,R.REASON,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_TELEPHONE FROM T_SES_SMS_SUPPLIER_EXT_RELATE R LEFT JOIN T_SES_SMS_SUPPLIER S ON R.SUPPLIER_ID = S.ID 
		WHERE R.RECORD_ID = #{recordId} <!-- AND R.SUPPLIER_TYPE = #{supplierType} -->  AND R.OPERATING_TYPE IN (0,1) ORDER BY R.OPERATING_TYPE DESC
	</select>
	
	
	<!-- 查询供应商类型 -->
	<select id="selectTypeCodeBySid" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT I.SUPPLIER_TYPE_RELATE_ID  FROM T_SES_SMS_SUPPLIER_ITEM I WHERE I.SUPPLIER_ID = #{value}  GROUP BY I.SUPPLIER_TYPE_RELATE_ID
	</select>
	
	<!-- 存储进预研项目 -->
	<insert id="insertAdv" parameterType="java.util.List" useGeneratedKeys="false">
        INSERT ALL
        <foreach item="t" index="index" collection="list">
        INTO T_SES_SMS_SUPPLIER_EXT_RELATE
           <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="t.id != null">
				ID,
			</if>
			<if test="t.supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="t.conditionId != null">
				SUPPLIER_CONDITION_ID,
			</if>
			<if test="t.recordId != null">
				RECORD_ID,
			</if>
			<if test="t.createdAt != null">
				CREATED_AT,
			</if>
			<if test="t.join != null">
				OPERATING_TYPE,
			</if>
			<if test="t.isDeleted != null">
				IS_DELETED,
			</if>
			<if test="t.reason != null">
				REASON,
			</if>
			<if test="t.packageId != null">
				PROJECT_ID,
			</if>
			<if test="t.updatedAt != null">
				UPDATED_AT,
			</if>
			<!-- <if test="conTypeId != null">
				CON_TYPE_ID,
			</if> -->
			<if test="t.status != null">
				STATUS_COUNT,
			</if>
			<if test="t.projectType != null">
				REVIEW_TYPE,
			</if>

		</trim>
       <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="t.id != null">
				#{t.id,jdbcType=VARCHAR},
			</if>
			<if test="t.supplierId != null">
				#{t.supplierId,jdbcType=VARCHAR},
			</if>
			<if test="t.conditionId != null">
				#{t.conditionId,jdbcType=VARCHAR},
			</if>
			<if test="t.recordId != null">
				#{t.t.recordId,jdbcType=VARCHAR},
			</if>
			<if test="t.createdAt != null">
				#{t.createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="t.join != null">
				#{t.join,jdbcType=DECIMAL},
			</if>
			<if test="t.isDeleted != null">
				#{t.isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="t.reason != null">
				#{t.reason,jdbcType=VARCHAR},
			</if>
			<if test="t.packageId != null">
				#{t.packageId,jdbcType=VARCHAR},
			</if>
			<if test="t.updatedAt != null">
				#{t.updatedAt,jdbcType=VARCHAR},
			</if>
			<!-- <if test="conTypeId != null">
				#{conTypeId,jdbcType=VARCHAR},
			</if> -->
			<if test="t.status != null">
				#{t.status,jdbcType=DECIMAL},
			</if>
			<if test="t.projectType != null">
				#{t.projectType,jdbcType=VARCHAR},
			</if>
		</trim>
        </foreach>
        SELECT 1 FROM DUAL
	</insert>
	
	<update id="updateSupplierJoin" parameterType="extract.model.supplier.SupplierExtractResult">
		update 
		(select t.* from  T_SES_SMS_EXTRACT_RESULT t left join t_ses_sms_supplier s on t.supplier_id = s.id  where s.army_business_telephone = #{armyBuinessTelephone})
		re
		<set>
			<if test="supplierId != null">
				re.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="operatingType != null">
				re.OPERATING_TYPE = #{operatingType,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="projectId != null">
				re.PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="statusCount != null">
				re.STATUS_COUNT = #{statusCount,jdbcType=DECIMAL},
			</if>
			<if test="reviewType != null">
				re.REVIEW_TYPE = #{reviewType,jdbcType=VARCHAR},
			</if>
		</set>
		where re.SUPPLIER_CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateRelSupplierJoin" parameterType="extract.model.supplier.SupplierExtractResult">
		update 
		(select t.* from  T_SES_SMS_SUPPLIER_EXT_RELATE t left join t_ses_sms_supplier s on t.supplier_id = s.id  where s.army_business_telephone = #{armyBuinessTelephone})
		re
		<set>
			<if test="supplierId != null">
				re.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				re.OPERATING_TYPE = #{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<!-- 包名不应会被修改 -->
			<!-- <if test="projectId != null">
				PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if> -->
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				re.STATUS_COUNT = #{status,jdbcType=DECIMAL},
			</if>
			<if test="projectType != null">
				re.REVIEW_TYPE = #{projectType,jdbcType=VARCHAR},
			</if>
		</set>
		where re.SUPPLIER_CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updateAdvSupplierJoin" parameterType="extract.model.supplier.SupplierExtractResult">
		update 
		(select t.* from  T_SES_SMS_SUPPLIER_EXT_RELATE t left join t_ses_sms_supplier s on t.supplier_id = s.id  where s.army_business_telephone = #{armyBuinessTelephone})	
		
		<if test="supplierId != null">
				re.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				re.OPERATING_TYPE = #{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<!-- 包名不应会被修改 -->
			<!-- <if test="projectId != null">
				PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if> -->
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				re.STATUS_COUNT = #{status,jdbcType=DECIMAL},
			</if>
			<if test="projectType != null">
				re.REVIEW_TYPE = #{projectType,jdbcType=VARCHAR},
			</if>
		where re.SUPPLIER_CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR}
	</update>
	
	<!-- 存储进真实项目 -->
	<insert id="insertRel" parameterType="java.util.List" useGeneratedKeys="false">
        INSERT ALL
        <foreach item="t" index="index" collection="list">
        INTO T_SES_SMS_SUPPLIER_EXT_RELATE
           <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="t.id != null">
				ID,
			</if>
			<if test="t.supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="t.conditionId != null">
				SUPPLIER_CONDITION_ID,
			</if>
			<if test="t.recordId != null">
				RECORD_ID,
			</if>
			<if test="t.createdAt != null">
				CREATED_AT,
			</if>
			<if test="t.join != null">
				OPERATING_TYPE,
			</if>
			<if test="t.isDeleted != null">
				IS_DELETED,
			</if>
			<if test="t.reason != null">
				REASON,
			</if>
			<if test="t.packageId != null">
				PROJECT_ID,
			</if>
			<if test="t.updatedAt != null">
				UPDATED_AT,
			</if>
			<if test="t.status != null">
				STATUS_COUNT,
			</if>
			<if test="t.projectType != null">
				REVIEW_TYPE,
			</if>

		</trim>
       <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="t.id != null">
				#{t.id,jdbcType=VARCHAR},
			</if>
			<if test="t.supplierId != null">
				#{t.supplierId,jdbcType=VARCHAR},
			</if>
			<if test="t.conditionId != null">
				#{t.conditionId,jdbcType=VARCHAR},
			</if>
			<if test="t.recordId != null">
				#{t.recordId,jdbcType=VARCHAR},
			</if>
			<if test="t.createdAt != null">
				#{t.createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="t.join != null">
				#{t.join,jdbcType=DECIMAL},
			</if>
			<if test="t.isDeleted != null">
				#{t.isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="t.reason != null">
				#{t.reason,jdbcType=VARCHAR},
			</if>
			<if test="t.packageId != null">
				#{t.packageId,jdbcType=VARCHAR},
			</if>
			<if test="t.updatedAt != null">
				#{t.updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="t.status != null">
				#{t.status,jdbcType=DECIMAL},
			</if>
			<if test="t.projectType != null">
				#{t.projectType,jdbcType=VARCHAR},
			</if>
		</trim>
        </foreach>
        SELECT 1 FROM DUAL
	</insert>
	
	<!-- 自动抽取供应商列表 -->
	<select id="autoExtractSupplierList" parameterType="extract.model.supplier.SupplierExtractCondition" resultMap="findSupplierMap">
		SELECT SP.* FROM 
		(SELECT DISTINCT S.ID,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_MOBILE,S.ARMY_BUSINESS_TELEPHONE,T.SUPPLIER_TYPE_ID  FROM T_SES_SMS_SUPPLIER S
		<if test="supplierTypeCode !=null and supplierTypeCode !='' ">
			LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE T ON T.SUPPLIER_ID = S.ID
			LEFT JOIN T_SES_SMS_SUPPLIER_ITEM I ON I.SUPPLIER_ID = S.ID
			LEFT JOIN T_SES_BMS_CATEGORY_QUA QUA ON I.CATEGORY_ID = QUA.CATEGORY_ID
			<choose>
				<when test="supplierTypeCode == 'PROJECT'.toString()">
					LEFT JOIN T_SES_SMS_SUPPLIER_MAT_ENG E ON E.SUPPLIER_ID = S.ID
					LEFT JOIN T_SES_SMS_SUPPLIER_APTITUTE A ON A.MAT_ENG_ID = E.ID
				</when>
				<otherwise>
					LEFT JOIN T_SES_SMS_SUPPLIER_ITEM_LEVEL L ON S.ID = L.SUPPLIER_ID
				</otherwise>
			</choose>
		</if>
		WHERE S.IS_PROVISIONAL = 0 AND S.IS_DELETED = 0 AND S.SUPPLIER_STATUS in ( 1,5,7) 
		<!-- 查询地址 -->
		<if test="addressId != null and addressId != '' ">
			AND S.ADDRESS in 	<foreach collection="addressIds"  open="(" item="index" close=")" separator=",">	#{index}	</foreach>
		</if>
		<!-- 查询类型 -->
		<if test="supplierTypeCode !=null and supplierTypeCode != '' ">
			<!--  AND I.Supplier_Type_Relate_Id  IN  <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach>  -->
			 AND T.SUPPLIER_TYPE_ID  IN  <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach> 
		</if>	 
		<!-- 查询品目 -->
		<if test="isMulticondition !=null and isMulticondition != ''">
			<if test="isMulticondition == 1 and categoryId !=null and categoryId != '' ">
				 AND I.CATEGORY_ID IN 
				  (select distinct TEM.id from (
				  select CATE.* from T_SES_BMS_CATEGORY CATE START WITH  CATE.id in 
					<foreach collection="categoryIds" open="(" close=")" separator="," index="index" item="item">
						#{item}
					</foreach>
					CONNECT BY PRIOR CATE.id=CATE.PARENT_ID order by level desc ) TEM where TEM.is_publish = 0 and (TEM.is_parent is null or TEM.is_parent = 'false'))
				 
				<!--  <foreach collection="categoryIds" open="(" separator="," item="cid" close=")"> #{cid} </foreach> -->
			</if>
			<if test="isMulticondition == 2 and categoryId !=null and categoryId != '' ">
				AND S.ID IN (SELECT  I.SUPPLIER_ID FROM T_SES_SMS_SUPPLIER_ITEM I WHERE I.CATEGORY_ID IN 
				
				 (select distinct TEM.id from (
				  select CATE.* from T_SES_BMS_CATEGORY CATE START WITH  CATE.id in 
					<foreach collection="categoryIds" open="(" close=")" separator="," index="index" item="item">
						#{item}
					</foreach>
					CONNECT BY PRIOR CATE.id=CATE.PARENT_ID order by level desc ) TEM where TEM.is_publish = 0 and (TEM.is_parent is null or TEM.is_parent = 'false'))
				
				<!-- <foreach collection="categoryIds" open="(" separator="," item="cid" close=")"> #{cid} </foreach> -->
				 GROUP BY I.SUPPLIER_ID  HAVING COUNT(1) = #{csize})
				<!--  AND
				 <trim prefix="(" suffixOverrides="AND" suffix=")">
				 	 <foreach collection="categoryIds" item="cid" > I.CATEGORY_ID = #{cid} AND </foreach>
				 </trim> -->
			</if>
		</if>
		<!-- 查询资质 -->
		<if test="quaId !=null and quaId != '' ">
			<if test="supplierTypeCode == 'PROJECT'.toString()">
				AND  A.CERT_TYPE IN  <foreach collection="quaIds" item="qid" open="(" close=")" separator=","> #{qid}  </foreach>
			</if>
			<if test="supplierTypeCode != 'PROJECT'.toString()">
				AND  QUA.QUA_ID IN  <foreach collection="quaIds" item="qid" open="(" close=")" separator=","> #{qid}  </foreach>
			</if>
		</if>
		<!-- 查询等级 -->
		<if test="levelTypeId !=null and levelTypeId != '' ">
			<choose>
				<when test="supplierTypeCode == 'PROJECT'.toString()">
					AND  A."APTITUTE_ LEVEL" IN  <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
				</when>
				<otherwise>
					AND L.SUPPLIER_LEVEL IN <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
				</otherwise>
			</choose>
		</if>
		<!-- 保密要求 -->
		<if test="isHavingConCert !=null and isHavingConCert != '' ">
			AND S.IS_HAVING_CON_CERT = #{isHavingConCert}
		</if>
		<!-- 企业性质 -->
		<if test="businessNature !=null and businessNature != '' ">
			AND S.BUSINESS_NATURE = #{businessNature}
		</if>
		<!-- 境外分支 -->
		<if test="overseasBranch !=null and overseasBranch != '' ">
			AND S.OVERSEAS_BRANCH = #{overseasBranch}
		</if>
		<if test="supplierIds != null and supplierIds.size>0 ">
			AND S.ID NOT IN
			<foreach collection="supplierIds" open="(" item="sid" separator="," close=")">
				#{sid}	
			</foreach>
		</if>
		ORDER BY dbms_random.random) SP WHERE ROWNUM &lt;= #{extractNum}
	</select>
	
</mapper>