<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="extract.dao.supplier.SupplierExtractRelateResultMapper">
	<resultMap id="BaseResultMap" type="extract.model.supplier.SupplierExtractResult">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="CONDITION_ID" jdbcType="VARCHAR" property="conditionId" />
		<result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
		<result column="JOIN" property="join" />
		<result column="IS_DELETED" jdbcType="DECIMAL" property="isDeleted" />
		<result column="REASON" jdbcType="VARCHAR" property="reason" />
		<result column="SUPPLIER_ID" jdbcType="VARCHAR" property="supplierId" />
		<result column="RECORD_ID" jdbcType="VARCHAR" property="recordId" />
		<result column="SUPPLIER_TYPE" jdbcType="VARCHAR" property="supplierType" />
		<result column="SUPPLIER_LEVEL" jdbcType="VARCHAR" property="supplierLevel" />
		<result column="PROJECT_ID" jdbcType="VARCHAR" property="projectId" />
		<result column="UPDATED_AT" jdbcType="VARCHAR" property="updatedAt" />
		<result column="CON_TYPE_ID" jdbcType="VARCHAR" property="conTypeId" />
		<result column="STATUS_COUNT" jdbcType="DECIMAL" property="statusCount" />
		<result column="MOBILE" property="mobile" />
		<result column="SUPPLIER_NAME" property="supplierName" />
		<result column="ARMY_BUSINESS_NAME" property="armyBusinessName" />
		<result column="ARMY_BUSINESS_MOBILE" property="armyBusinessMobile" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="armyBuinessTelephone" />
	</resultMap>
	<resultMap id="findSupplierMap" type="ses.model.sms.Supplier">
		<id column="ID" property="id" />
		<result column="MOBILE" property="mobile" />
		<result column="SUPPLIER_NAME" property="supplierName" />
		<result column="SUPPLIER_TYPE_ID" property="supplierTypeId" />
		<result column="SUPPLIER_TYPE" property="supplierType" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="BUSINESS_CERT" property="businessCert" />
		<result column="SUPPLIER_LEVEL" property="supplierLevel" />
		<result column="CONTACT_NAME" property="contactName" />
		<result column="CONTACT_TELEPHONE" property="contactTelephone" />
		<result column="CONTACT_MOBILE" property="contactMobile" />
		<result column="CONTACT_EMAIL" property="contactEmail" />
		<result column="CONTACT_ADDRESS" property="contactAddress" />
		<result column="ARMY_BUSINESS_NAME" property="armyBusinessName" />
		<result column="ARMY_BUSINESS_MOBILE" property="armyBuinessMobile" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="armyBuinessTelephone" />
	</resultMap>
	
	<resultMap type="extract.autoVoiceExtract.PeopleYytz" id="resultForVoiceExtract">
		<result column="SUPPLIER_NAME" property="username" />
		<result column="ARMY_BUSINESS_NAME" property="contactname" />
		<result column="ARMY_BUSINESS_MOBILE" property="mobile" />
		<result column="ARMY_BUSINESS_TELEPHONE" property="contactmobile" />
	</resultMap>
	
	<resultMap id="advResult" type="extract.model.supplier.SupplierExtractResult">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="SUPPLIER_CONDITION_ID" jdbcType="VARCHAR"	property="conditionId" />
		<result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
		<result column="OPERATING_TYPE" jdbcType="DECIMAL" property="join" />
		<result column="IS_DELETED" jdbcType="DECIMAL" property="isDeleted" />
		<result column="REASON" jdbcType="VARCHAR" property="reason" />
		<result column="PROJECT_ID" jdbcType="VARCHAR" property="projectId" />
		<result column="UPDATED_AT" jdbcType="VARCHAR" property="updatedAt" />
		<result column="CON_TYPE_ID" jdbcType="VARCHAR" property="conTypeId" />
		<result column="STATUS_COUNT" jdbcType="DECIMAL" property="status" />
		<result column="REVIEW_TYPE" jdbcType="VARCHAR" property="supplierType" />
		<result column="SUPPLIER_ID" jdbcType="VARCHAR" property="supplierId" />
		<result column="RECORD_ID" jdbcType="VARCHAR" property="recordId" />
	</resultMap>	
	
	<sql id="Base_Column_List">
		ID, SUPPLIER_ID, SUPPLIER_CONDITION_ID, CREATED_AT, OPERATING_TYPE,
		IS_DELETED, REASON,
		PROJECT_ID, UPDATED_AT, CON_TYPE_ID,
		STATUS_COUNT,REVIEW_TYPE
	</sql>
	
	<sql id="extractResult">
		 R.JOIN,R.REASON,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_TELEPHONE,S.ARMY_BUSINESS_MOBILE,R.SUPPLIER_LEVEL
	</sql>
	<sql id="extractResultAdv">
		 R.OPERATING_TYPE JOIN,R.REASON,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_TELEPHONE,S.ARMY_BUSINESS_MOBILE,R.SUPPLIER_LEVEL
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select *
		from T_SES_SMS_EXTRACT_RESULT
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="selectAdvByPrimaryKey" parameterType="java.lang.String"
		resultMap="advResult">
		select * from t_ses_sms_supplier_ext_relate
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	
	<!-- 批量添加抽取结果 -->
	<insert id="insertBatch" parameterType="java.util.List">
		 INSERT ALL
        <foreach item="t" index="index" collection="list">
       		insert into T_SES_SMS_EXTRACT_RESULT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="conditionId != null">
				CONDITION_ID,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="updatedAt">
				UPDATED_AT,
			</if>
			<if test="createdAt">
				CREATED_AT,
			</if>
			<if test="join != null">
				JOIN,
			</if>
			<if test="reason != null">
				REASON,
			</if>
			<if test="supplierType != null">
				SUPPLIER_TYPE,
			</if>
			<if test="recordId != null">
				RECORD_ID,
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="conditionId != null">
				#{conditionId,jdbcType=VARCHAR},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				#{join,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="supplierType != null">
				#{supplierType,jdbcType=VARCHAR},
			</if>
			<if test="recordId != null">
				#{recordId,jdbcType=VARCHAR},
			</if>
			<if test="supplierLevel != null">
				#{supplierLevel,jdbcType=VARCHAR},
			</if>
		</trim>
        </foreach>
         SELECT 1 FROM DUAL
	</insert>
	
	<insert id="insertSelective" parameterType="extract.model.supplier.SupplierExtractResult">
		insert into T_SES_SMS_EXTRACT_RESULT
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="conditionId != null">
				CONDITION_ID,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="updatedAt">
				UPDATED_AT,
			</if>
			<if test="createdAt">
				CREATED_AT,
			</if>
			<if test="join != null">
				JOIN,
			</if>
			<if test="reason != null">
				REASON,
			</if>
			<if test="supplierType != null">
				SUPPLIER_TYPE,
			</if>
			<if test="recordId != null">
				RECORD_ID,
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="conditionId != null">
				#{conditionId,jdbcType=VARCHAR},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				#{join,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="supplierType != null">
				#{supplierType,jdbcType=VARCHAR},
			</if>
			<if test="recordId != null">
				#{recordId,jdbcType=VARCHAR},
			</if>
			<if test="supplierLevel != null">
				#{supplierLevel,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<!-- 修改抽取结果 -->
	<update id="updateByPrimaryKeySelective" parameterType="extract.model.supplier.SupplierExtractResult">
		
		update T_SES_SMS_EXTRACT_RESULT
		<set>
			<if test="supplierId != null">
				SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="conditionId != null">
				CONDITION_ID =	#{conditionId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				join = #{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="supplierType != null">
				SUPPLIER_TYPE = #{supplierType,jdbcType=VARCHAR},
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL = #{supplierLevel,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>

	<select id="list" parameterType="extract.model.supplier.SupplierExtractResult"
		resultMap="BaseResultMap">
		SELECT
		pe.*
		FROM
		T_SES_SMS_EXTRACT_RESULT pe
		INNER JOIN
		T_SES_SMS_SUPPLIER ss ON PE.SUPPLIER_ID = ss."ID"
		Where STATUS_COUNT=0
		<if test="id != null and id != ''">
			AND pe.ID =#{id}
		</if>
		<if test="supplierConditionId != null and supplierConditionId != ''">
			AND pe.SUPPLIER_CONDITION_ID =#{supplierConditionId}
		</if>
		<if test="reason != null and reason != ''">
			AND pe.OPERATING_TYPE in (${reason})
		</if>
		<if test="reviewType != null and reviewType != ''">
			AND pe.REVIEW_TYPE = #{reviewType}
		</if>
		<if test="supplierId != null and supplierId != '' ">
			AND pe.SUPPLIER_ID = #{supplierId}
		</if>
		<if test="projectId != null and projectId != ''">
			AND pe.PROJECT_ID =#{projectId}
			ORDER BY
			SUPPLIER_CONDITION_ID
		</if>
		<if test="supplier!=null">
			<if test="supplier.supplierName!=null and supplier.supplierName !='' ">
				AND SS.SUPPLIER_NAME LIKE CONCAT(CONCAT('%', #{supplier.supplierName}), '%')
			</if>
		</if>
	</select>
	

	<!-- 查询已经抽取到的供应商 -->
	<select id="selectSupplierIdListByRecordId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT SUPPLIER_ID supplierIds FROM T_SES_SMS_EXTRACT_RESULT WHERE RECORD_ID = #{value}
	</select>
	<!-- 查询本项目已经抽取到的供应商 -->
	<select id="selectSupplierIdListByProjectId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT DISTINCT R.SUPPLIER_ID supplierIds FROM T_SES_SMS_SUPPLIER_EXT_RELATE R LEFT JOIN T_SES_SMS_EXTRACT_RECORD N ON N.ID = R.RECORD_ID  WHERE N.PROJECT_ID = #{value}
	</select>

	<sql id="item_temp">
		WITH T_ITEM AS (
			SELECT
				*
			FROM
				T_SES_SMS_SUPPLIER_ITEM
			MINUS
				SELECT
					I.*
				FROM
					T_SES_SMS_SUPPLIER_ITEM I
				LEFT JOIN T_SES_SMS_SUPPLIER_AUDIT AU ON I.CATEGORY_ID = AU.AUDIT_FIELD
				WHERE
					AU.SUPPLIER_ID = I.SUPPLIER_ID
				AND AUDIT_TYPE = CONCAT (
					CONCAT (
						'items_',
						LOWER (I.SUPPLIER_TYPE_RELATE_ID)
					),
					'_page'
				)
				AND AU.RETURN_STATUS IN (0, 1, 2, 4)
		) 
	</sql>
	<sql id="extractSql">
		<if test="supplierTypeCode !=null and supplierTypeCode !='' ">
			LEFT JOIN T_SES_SMS_SUPPLIER_TYPE_RELATE T ON T.SUPPLIER_ID = S.ID
			LEFT JOIN T_ITEM I ON I.SUPPLIER_ID = S.ID
			<choose>
				<when test="supplierTypeCode == 'PROJECT'.toString()">
					LEFT JOIN T_SES_SMS_SUPPLIER_MAT_ENG E ON E.SUPPLIER_ID = S.ID
					LEFT JOIN T_SES_SMS_SUPPLIER_APTITUTE AP ON AP.MAT_ENG_ID = E.ID
					LEFT JOIN T_SES_BMS_DICTIONARY_DATA DA ON I.SUPPLIER_TYPE_RELATE_ID = DA.CODE
					LEFT JOIN T_SES_BMS_DICTIONARY_DATA DD ON AP."APTITUTE_ LEVEL" = DD.ID
				</when>
				<otherwise>
					LEFT JOIN T_SES_SMS_SUPPLIER_ITEM_LEVEL L ON S.ID = L.SUPPLIER_ID
					LEFT JOIN T_SES_BMS_DICTIONARY_DATA DA ON L.SUPPLIER_TYPE_ID = DA.CODE
				</otherwise>
			</choose>
		</if>
		<if test="branchCountry !=null and branchCountry != '' ">
			LEFT JOIN T_SES_SMS_SUPPLIER_BRANCH B ON S.ID = B.SUPPLIER_ID
		</if>
			WHERE S.IS_PROVISIONAL = 0 AND S.IS_DELETED = 0 AND S.SUPPLIER_STATUS in ( 1,5,7) 
		<!-- 查询地址 -->
		<if test="addressId != null and addressId != '' ">
			AND S.ADDRESS in 	<foreach collection="addressIds"  open="(" item="index" close=")" separator=",">	#{index}	</foreach>
		</if>
		<!-- 保密要求 -->
		<if test="isHavingConCert !=null and isHavingConCert != '' ">
			AND S.IS_HAVING_CON_CERT = #{isHavingConCert}
		</if>
		<!-- 企业性质 -->
		<if test="businessNature !=null and businessNature != '' ">
			AND S.BUSINESS_NATURE = #{businessNature}
		</if>
		<!-- 境外分支 -->
		<if test="overseasBranch !=null and overseasBranch != '' ">
			AND S.OVERSEAS_BRANCH = #{overseasBranch}
		</if>
		<if test="branchCountry !=null and branchCountry != '' ">
			AND B.COUNTRY IN (
			  WITH TEMP AS (
				SELECT
					D . ID,
					D . NAME,
					'0' PARENT_ID,
					'true' IS_PARENT
				FROM
					T_SES_BMS_DICTIONARY_DATA D
				WHERE
					D .KIND = 66
			  UNION
				SELECT
					CN.NATION_ID ID,
					CN.NATION_NAME NAME,
					CN.CONTINENT_ID PARENT_ID,
					'false' IS_PARENT
				FROM
					T_SES_BMS_CONTINENT_NATION_REL CN
				) SELECT
					ID
				FROM
					TEMP
				WHERE
					TEMP.PARENT_ID <![CDATA[ <> ]]> '0' START WITH TEMP. ID IN (
						<foreach collection="branchCountry" index="in" item="it" separator=",">
							#{it}
						</foreach>
					) CONNECT BY PRIOR TEMP. ID = TEMP.PARENT_ID
			)
		</if>
		<!-- 查询类型 -->
		<if test="supplierTypeCode !=null and supplierTypeCode != '' ">
			 AND T.SUPPLIER_TYPE_ID  IN  <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach> 
			 AND I.SUPPLIER_TYPE_RELATE_ID  IN  <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach> 
			<if test="supplierTypeCode != 'PROJECT'.toString()">
				AND L.SUPPLIER_TYPE_ID IN <foreach collection="supplierTypeCodes" open="(" separator="," item="code" close=")"> #{code} </foreach> 
			</if>			
			<if test="supplierTypeCode == 'PROJECT'.toString()">
				AND AP."APTITUTE_ LEVEL" IS NOT NULL
				AND AP.CERT_TYPE IS NOT NULL
			</if>			
			 AND I.NODE_LEVEL = 3
			 <!-- 去除审核不通过类别 -->
			AND S.ID NOT IN (
				SELECT AU.SUPPLIER_ID from T_SES_SMS_SUPPLIER_AUDIT AU LEFT JOIN T_SES_BMS_DICTIONARY_DATA DD ON AU.AUDIT_FIELD = DD.ID 
				WHERE AUDIT_TYPE = 'supplierType_page' AND AU.RETURN_STATUS IN (0, 1, 2, 4) AND DD.CODE IN 
					<foreach collection="supplierTypeCodes" open="(" item="sid" separator="," close=")">
						#{sid}	
					</foreach>
			)
		</if>	 
		<!-- 查询品目 -->
		<if test="isMulticondition !=null and isMulticondition != ''">
			<if test="isMulticondition == 1 and categoryId !=null and categoryId != '' ">
				 AND I.CATEGORY_ID IN 
				 (select distinct TEM.id from (
				  select CATE.* from T_SES_BMS_CATEGORY CATE START WITH  CATE.id in 
					<foreach collection="categoryIds" open="(" close=")" separator="," index="index" item="item">
						#{item}
					</foreach>
					CONNECT BY PRIOR CATE.id=CATE.PARENT_ID order by level desc ) TEM where TEM.is_publish = 0 )
			</if>
			<if test="isMulticondition == 2 and categoryId !=null and categoryId != '' ">
				AND S.ID IN 
				(SELECT IT.SUPPLIER_ID
		          FROM T_SES_SMS_SUPPLIER_ITEM IT
		         inner join (select TEM.id
		                      from (select CATE.*
		                              from T_SES_BMS_CATEGORY CATE
		                             START WITH CATE.id in
		                                        <foreach collection="categoryIds" open="(" close=")" separator="," index="index" item="item">
													#{item}
												</foreach>
		                            CONNECT BY PRIOR CATE.id = CATE.PARENT_ID
		                             order by level desc) TEM
		                     where TEM.is_publish = 0
		                     group by TEM.id) ts
		            on ts.id = IT.Category_Id
		            WHERE IT.SUPPLIER_TYPE_RELATE_ID  IN  
		            <foreach collection="supplierTypeCodes" open="(" item="sid" separator="," close=")">
						#{sid}	
					</foreach>
		         GROUP BY IT.SUPPLIER_ID
		        HAVING COUNT(IT.SUPPLIER_ID)  &gt;= #{csize})
			</if>
		</if>
		<!-- 查询资质 -->
		<if test="quaId !=null and quaId != '' ">
			<if test="supplierTypeCode == 'PROJECT'.toString() and isMulticondition == 1">
				AND  E.ID IN (
					SELECT A.MAT_ENG_ID FROM T_SES_SMS_SUPPLIER_APTITUTE A 
					WHERE A.CERT_TYPE IN <foreach collection="quaIds" item="qid" open="(" close=")" separator=","> #{qid}  </foreach>
					<!-- 等级 -->
					<if test="levelTypeId !=null and levelTypeId != '' ">
						AND  A."APTITUTE_ LEVEL" IN  <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
					</if>
				)
			</if>
			<if test="supplierTypeCode == 'PROJECT'.toString() and isMulticondition == 2">
				AND  E.ID IN (
					SELECT A.MAT_ENG_ID FROM T_SES_SMS_SUPPLIER_APTITUTE A 
					WHERE A.CERT_TYPE IN <foreach collection="quaIds" item="qid" open="(" close=")" separator=","> #{qid}  </foreach>
					<!-- 等级 -->
					<if test="levelTypeId !=null and levelTypeId != '' ">
						AND  A."APTITUTE_ LEVEL" IN  <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
					</if>
					GROUP BY A.MAT_ENG_ID
					HAVING COUNT(A.MAT_ENG_ID) = #{quaSize}
				)
			</if>
		</if>
		<!-- 查询等级 -->
		<if test="categoryIds !=null and categoryIds != ''">
			<!-- 查询等级 或关系 -->
			<if test="supplierTypeCode != 'PROJECT'.toString() and supplierTypeCodes.length == 1">
				<if test="null != supplierItemId and isMulticondition == 1">
					AND L.CATEGORY_ID  IN <foreach collection="supplierItemId" item="sid" open="(" close=")" separator=","> #{sid}  </foreach>
				</if>
				AND L.SUPPLIER_TYPE_ID = #{supplierTypeCode}
				<if test="levelTypeId !=null and levelTypeId != '' ">
					AND L.SUPPLIER_LEVEL IN <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
				</if>
			</if>
			
			<if test="supplierTypeCodes.length == 2">
				<!-- 或关系 -->
				<if test="isMulticondition == 1">
					<if test="null != supplierItemId">
						AND L.CATEGORY_ID  IN <foreach collection="supplierItemId" item="sid" open="(" close=")" separator=","> #{sid}  </foreach>
						AND ( L.SUPPLIER_TYPE_ID = 'PRODUCT'               
					</if>
					<if test="levelTypeId !=null and levelTypeId != '' ">
						AND  L.SUPPLIER_LEVEL IN <foreach collection="levelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
					</if>
					OR
					<if test="salesLevelTypeId !=null and salesLevelTypeId != '' ">
						 L.SUPPLIER_LEVEL IN <foreach collection="salesLevelTypeIds" item="lid" open="(" close=")" separator=","> #{lid}  </foreach>
						 AND 
					</if>
						L.SUPPLIER_TYPE_ID ='SALES')
				</if>
			</if>
		</if>
		<if test="businessScope !=null and businessScope != '' and supplierTypeCode == 'PROJECT'.toString()">
			AND E.BUSINESS_SCOPE LIKE CONCAT(CONCAT('%', #{businessScope}), '%')
		</if>
		<if test="supplierIds != null ">
			AND S.ID NOT IN
			<foreach collection="supplierIds" open="(" item="sid" separator="," close=")">
				#{sid}	
			</foreach>
		</if>
	</sql>
	
	<!-- 供应商个数 -->
	<select id="listExtractionSupplierCount" parameterType="extract.model.supplier.SupplierExtractCondition" resultType="int">
		<include refid="item_temp"/>
		SELECT COUNT(DISTINCT S.ID) FROM T_SES_SMS_SUPPLIER S
		<include refid="extractSql"/>
	</select>
	
	<!-- 供应商抽取集合 -->
	<select id="listExtractionSupplier" parameterType="extract.model.supplier.SupplierExtractCondition" resultMap="findSupplierMap">
		<include refid="item_temp"/>
		SELECT SP.* FROM 
		(SELECT DISTINCT S.ID,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_MOBILE,S.ARMY_BUSINESS_TELEPHONE,DA.NAME SUPPLIER_TYPE  FROM T_SES_SMS_SUPPLIER S
		<include refid="extractSql"/>
		ORDER BY dbms_random.random) SP WHERE ROWNUM = 1
	</select>
	
	
	<!-- 与关系查询返回供应商 -->
	<select id="listExtractionSupplierOfLogicIsAnd" parameterType="extract.model.supplier.SupplierExtractCondition" resultMap="findSupplierMap">
		<include refid="item_temp"/>
		SELECT SP.* FROM 
		(SELECT DISTINCT S.ID,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_MOBILE,S.ARMY_BUSINESS_TELEPHONE,DA.NAME SUPPLIER_TYPE
		<if test="supplierTypeCode == 'PROJECT'.toString() ">
			,DD.NAME SUPPLIER_LEVEL
		</if>
		<if test="supplierTypeCode != 'PROJECT'.toString()" >
			,L.SUPPLIER_LEVEL
		</if>
		 FROM T_SES_SMS_SUPPLIER S
		<include refid="extractSql"/>
		ORDER BY dbms_random.random) SP 
	</select>
	
	<!--  -->
	<select id="selectSuppleir" parameterType="extract.model.supplier.SupplierExtractCondition" resultMap="findSupplierMap">
		<include refid="item_temp"/>
		SELECT DISTINCT S.ID,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_MOBILE,S.ARMY_BUSINESS_TELEPHONE,DA.NAME SUPPLIER_TYPE,L.SUPPLIER_LEVEL  
		FROM T_SES_SMS_SUPPLIER S
		<include refid="extractSql"/>
	</select>
	
	
	<!-- 自动抽取供应商列表 -->
	<select id="autoExtractSupplierList" parameterType="extract.model.supplier.SupplierExtractCondition" resultMap="findSupplierMap">
		<include refid="item_temp"/>
		SELECT SP.* FROM 
		(SELECT DISTINCT S.ID,S.SUPPLIER_NAME,S.ARMY_BUSINESS_NAME,S.ARMY_BUSINESS_MOBILE,S.ARMY_BUSINESS_TELEPHONE,T.SUPPLIER_TYPE_ID  FROM T_SES_SMS_SUPPLIER S
			<include refid="extractSql"></include>
		ORDER BY dbms_random.random) SP WHERE ROWNUM &lt;= #{extractNum}
	</select>
	
	<!-- 详细抽取结果 -->
	<!-- 0 不能参加，1能参加 -->
	<select id="getSupplierListByRid" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="extractResult"></include> FROM T_SES_SMS_EXTRACT_RESULT R LEFT JOIN T_SES_SMS_SUPPLIER S ON R.SUPPLIER_ID = S.ID 
		WHERE R.RECORD_ID = #{recordId} 
		<if test="supplierId!=null and supplierId!=''">
			AND R.SUPPLIER_ID = #{supplierId}
		</if>
		<if test="supplierType != null and supplierType !='' ">
			AND R.SUPPLIER_TYPE = #{supplierType} 
		</if>
		<if test="joins != null">
			AND R.JOIN IN  <foreach collection="joins" open="(" item="it" index="in" separator="," close=")">
				#{it}
			</foreach>
		</if>
		ORDER BY R.CREATED_AT ASC
	</select>
	
	
	<!-- 真实抽取结果 -->
	<!-- 0 不能参加，1能参加 -->
	<select id="getSupplierListByRidForRel" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="extractResultAdv"/> FROM T_SES_SMS_SUPPLIER_EXT_RELATE R LEFT JOIN T_SES_SMS_SUPPLIER S ON R.SUPPLIER_ID = S.ID 
		WHERE R.RECORD_ID in (SELECT ID FROM T_SES_SMS_EXTRACT_RECORD WHERE PROJECT_ID = (SELECT PROJECT_ID FROM T_SES_SMS_EXTRACT_RECORD WHERE ID = #{recordId}))
		<if test="supplierId!=null and supplierId!=''">
			AND R.SUPPLIER_ID = #{supplierId}
		</if>
		<if test="joins != null">
			AND R.OPERATING_TYPE IN  <foreach collection="joins" open="(" item="it" index="in" separator="," close=")">
				#{it}
			</foreach>
		</if>
		ORDER BY R.CREATED_AT ASC
	</select>
	
	
	<!-- 预研抽取结果 -->
	<!-- 0 不能参加，1能参加 -->
	<select id="getSupplierListByRidForAdv" parameterType="map" resultMap="BaseResultMap">
		SELECT<include refid="extractResultAdv"/> FROM T_SES_SMS_SUPPLIER_EXT_RELATE R LEFT JOIN T_SES_SMS_SUPPLIER S ON R.SUPPLIER_ID = S.ID 
		WHERE R.RECORD_ID in (SELECT ID FROM T_SES_SMS_EXTRACT_RECORD WHERE PROJECT_ID = (SELECT PROJECT_ID FROM T_SES_SMS_EXTRACT_RECORD WHERE ID = #{recordId}))
		<if test="supplierId!=null and supplierId!=''">
			AND R.SUPPLIER_ID = #{supplierId}
		</if>
		<if test="joins != null">
			AND R.OPERATING_TYPE IN  <foreach collection="joins" open="(" item="it" index="in" separator="," close=")">
				#{it}
			</foreach>
		</if>
		ORDER BY R.CREATED_AT ASC
	</select>
	
	<!-- 查询供应商类型 -->
	<select id="selectTypeCodeBySid" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT I.SUPPLIER_TYPE_RELATE_ID  FROM T_SES_SMS_SUPPLIER_ITEM I WHERE I.SUPPLIER_ID = #{value}  GROUP BY I.SUPPLIER_TYPE_RELATE_ID
	</select>
	
	<!-- 存储进预研项目 -->
	<insert id="insertAdv" parameterType="java.util.List" useGeneratedKeys="false">
        INSERT ALL
        <foreach item="t" index="index" collection="list">
        INTO T_SES_SMS_SUPPLIER_EXT_RELATE
           <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="t.id != null">
				ID,
			</if>
			<if test="t.supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="t.conditionId != null">
				SUPPLIER_CONDITION_ID,
			</if>
			<if test="t.recordId != null">
				RECORD_ID,
			</if>
			<if test="t.createdAt != null">
				CREATED_AT,
			</if>
			<if test="t.join != null">
				OPERATING_TYPE,
			</if>
			<if test="t.isDeleted != null">
				IS_DELETED,
			</if>
			<if test="t.reason != null">
				REASON,
			</if>
			<if test="t.pid != null">
				PROJECT_ID,
			</if>
			<if test="t.updatedAt != null">
				UPDATED_AT,
			</if>
			<if test="t.status != null">
				STATUS_COUNT,
			</if>
			<if test="t.supplierType != null">
				REVIEW_TYPE,
			</if>
			<if test="t.supplierLevel != null">
				SUPPLIER_LEVEL,
			</if>
		</trim>
       <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="t.id != null">
				#{t.id,jdbcType=VARCHAR},
			</if>
			<if test="t.supplierId != null">
				#{t.supplierId,jdbcType=VARCHAR},
			</if>
			<if test="t.conditionId != null">
				#{t.conditionId,jdbcType=VARCHAR},
			</if>
			<if test="t.recordId != null">
				#{t.t.recordId,jdbcType=VARCHAR},
			</if>
			<if test="t.createdAt != null">
				#{t.createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="t.join != null">
				#{t.join,jdbcType=DECIMAL},
			</if>
			<if test="t.isDeleted != null">
				#{t.isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="t.reason != null">
				#{t.reason,jdbcType=VARCHAR},
			</if>
			<if test="t.pid != null">
				#{t.pid,jdbcType=VARCHAR},
			</if>
			<if test="t.updatedAt != null">
				#{t.updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="t.status != null">
				#{t.status,jdbcType=DECIMAL},
			</if>
			<if test="t.supplierType != null">
				#{t.supplierType,jdbcType=VARCHAR},
			</if>
			<if test="t.supplierLevel != null">
				#{t.supplierLevel,jdbcType=VARCHAR},
			</if>
		</trim>
        </foreach>
         SELECT 1 FROM DUAL
	</insert>

	<update id="updateSupplierJoinBySupplierMobile" parameterType="extract.model.supplier.SupplierExtractResult">
		update T_SES_SMS_EXTRACT_RESULT re
		<set>
			<if test="supplierId != null">
				re.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="operatingType != null">
				re.OPERATING_TYPE = #{operatingType,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="projectId != null">
				re.PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="statusCount != null">
				re.STATUS_COUNT = #{statusCount,jdbcType=DECIMAL},
			</if>
			<if test="join != null">
				re.JOIN = #{join,jdbcType=DECIMAL},
			</if>
			<if test="reviewType != null">
				re.REVIEW_TYPE = #{reviewType,jdbcType=VARCHAR},
			</if>
		</set>
		where re.CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR}
		AND RE.SUPPLIER_ID = (select S.ID t_ses_sms_supplier s  where s.army_business_telephone = #{armyBuinessTelephone})	
	</update>
	
	<update id="updateRelSupplierJoinBySupplierMobile" parameterType="extract.model.supplier.SupplierExtractResult">
		update T_SES_SMS_SUPPLIER_EXT_RELATE re
		<set>
			<if test="supplierId != null">
				re.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				re.OPERATING_TYPE = #{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				re.STATUS_COUNT = #{status,jdbcType=DECIMAL},
			</if>
			<if test="projectType != null">
				re.REVIEW_TYPE = #{projectType,jdbcType=VARCHAR},
			</if>
		</set>
		where re.SUPPLIER_CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR}
		AND RE.SUPPLIER_ID = (select S.ID t_ses_sms_supplier s  where s.army_business_telephone = #{armyBuinessTelephone})	
	</update>
	
	
	<update id="updateAdvSupplierJoinBySupplierMobile" parameterType="extract.model.supplier.SupplierExtractResult">
		update T_SES_SMS_SUPPLIER_EXT_RELATE re
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				re.OPERATING_TYPE = #{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<!-- 包名不应会被修改 -->
			<!-- <if test="projectId != null">
				PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if> -->
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				re.STATUS_COUNT = #{status,jdbcType=DECIMAL},
			</if>
			<if test="projectType != null">
				re.REVIEW_TYPE = #{projectType,jdbcType=VARCHAR},
			</if>
		where re.SUPPLIER_CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR} 
		AND RE.SUPPLIER_ID = (select S.ID t_ses_sms_supplier s  where s.army_business_telephone = #{armyBuinessTelephone})	
	</update>
	
	<update id="updateSupplierJoin" parameterType="extract.model.supplier.SupplierExtractResult">
		update T_SES_SMS_EXTRACT_RESULT re
		<set>
			<if test="supplierId != null">
				re.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="operatingType != null">
				re.OPERATING_TYPE = #{operatingType,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="projectId != null">
				re.PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="statusCount != null">
				re.STATUS_COUNT = #{statusCount,jdbcType=DECIMAL},
			</if>
			<if test="join != null">
				re.JOIN = #{join,jdbcType=DECIMAL},
			</if>
			<if test="reviewType != null">
				re.REVIEW_TYPE = #{reviewType,jdbcType=VARCHAR},
			</if>
		</set>
		where re.CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR} AND RE.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateRelSupplierJoin" parameterType="extract.model.supplier.SupplierExtractResult">
		update T_SES_SMS_SUPPLIER_EXT_RELATE re
		<set>
			<if test="supplierId != null">
				re.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				re.OPERATING_TYPE = #{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				re.STATUS_COUNT = #{status,jdbcType=DECIMAL},
			</if>
			<if test="projectType != null">
				re.REVIEW_TYPE = #{projectType,jdbcType=VARCHAR},
			</if>
		</set>
		where re.SUPPLIER_CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR} AND RE.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR}
	</update>
	
	
	<update id="updateAdvSupplierJoin" parameterType="extract.model.supplier.SupplierExtractResult">
		update T_SES_SMS_SUPPLIER_EXT_RELATE re
			<if test="createdAt != null">
				re.CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="join != null">
				re.OPERATING_TYPE = #{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				re.IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				re.REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<!-- 包名不应会被修改 -->
			<!-- <if test="projectId != null">
				PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if> -->
			<if test="updatedAt != null">
				re.UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="conTypeId != null">
				re.CON_TYPE_ID = #{conTypeId,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				re.STATUS_COUNT = #{status,jdbcType=DECIMAL},
			</if>
			<if test="projectType != null">
				re.REVIEW_TYPE = #{projectType,jdbcType=VARCHAR},
			</if>
		where re.SUPPLIER_CONDITION_ID = #{conditionId,jdbcType=VARCHAR} AND re.RECORD_ID = #{recordId,jdbcType=VARCHAR} AND RE.SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR}
	</update>
	
	<!-- 存储进真实项目 -->
	<insert id="insertRel" parameterType="java.util.List">
        INSERT ALL
        <foreach item="t" index="index" collection="list">
        INTO T_SES_SMS_SUPPLIER_EXT_RELATE
           <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="t.id != null">
				ID,
			</if>
			<if test="t.supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="t.conditionId != null">
				SUPPLIER_CONDITION_ID,
			</if>
			<if test="t.recordId != null">
				RECORD_ID,
			</if>
			<if test="t.createdAt != null">
				CREATED_AT,
			</if>
			<if test="t.join != null">
				OPERATING_TYPE,
			</if>
			<if test="t.isDeleted != null">
				IS_DELETED,
			</if>
			<if test="t.reason != null">
				REASON,
			</if>
			<if test="t.pid != null">
				PROJECT_ID,
			</if>
			<if test="t.updatedAt != null">
				UPDATED_AT,
			</if>
			<if test="t.status != null">
				STATUS_COUNT,
			</if>
			<if test="t.supplierType != null">
				REVIEW_TYPE,
			</if>
			<if test="t.supplierLevel != null">
				SUPPLIER_LEVEL,
			</if>

		</trim>
       <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="t.id != null">
				#{t.id,jdbcType=VARCHAR},
			</if>
			<if test="t.supplierId != null">
				#{t.supplierId,jdbcType=VARCHAR},
			</if>
			<if test="t.conditionId != null">
				#{t.conditionId,jdbcType=VARCHAR},
			</if>
			<if test="t.recordId != null">
				#{t.recordId,jdbcType=VARCHAR},
			</if>
			<if test="t.createdAt != null">
				#{t.createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="t.join != null">
				#{t.join,jdbcType=DECIMAL},
			</if>
			<if test="t.isDeleted != null">
				#{t.isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="t.reason != null">
				#{t.reason,jdbcType=VARCHAR},
			</if>
			<if test="t.pid != null">
				#{t.pid,jdbcType=VARCHAR},
			</if>
			<if test="t.updatedAt != null">
				#{t.updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="t.status != null">
				#{t.status,jdbcType=DECIMAL},
			</if>
			<if test="t.supplierType != null">
				#{t.supplierType,jdbcType=VARCHAR},
			</if>
			<if test="t.supplierLevel != null">
				#{t.supplierLevel,jdbcType=VARCHAR},
			</if>
		</trim>
        </foreach>
        SELECT 1 FROM DUAL
	</insert>
	
	<!-- 支撑系统进入 -->
	<select id="selectByUpdateDate" parameterType="map" resultMap="BaseResultMap">
		SELECT * FROM T_SES_SMS_EXTRACT_RESULT WHERE 
	    UPDATED_AT  &gt;= #{start,jdbcType=VARCHAR}
	    and UPDATED_AT &lt;= #{end,jdbcType=VARCHAR} 
	</select>
	
	<!-- 预研 -->
	<select id="selectAdvByUpdateDate" parameterType="map" resultMap="advResult">
		SELECT * FROM T_SES_SMS_SUPPLIER_EXT_RELATE WHERE 
	    UPDATED_AT  &gt;= #{start,jdbcType=VARCHAR}
	    and UPDATED_AT &lt;= #{end,jdbcType=VARCHAR} 
	</select>
	
	
	<insert id="insertAdvSelective" parameterType="extract.model.supplier.SupplierExtractResult">
		
		insert into T_SES_SMS_SUPPLIER_EXT_RELATE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="supplierId != null">
				SUPPLIER_ID,
			</if>
			<if test="conditionId != null">
				SUPPLIER_CONDITION_ID,
			</if>
			<if test="join != null">
				OPERATING_TYPE,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="reason != null">
				REASON,
			</if>
			<if test="pid != null">
				PROJECT_ID,
			</if>
			<if test="updatedAt != null">
				UPDATED_AT,
			</if>
			<if test="createdAt != null">
				CREATED_AT,
			</if>
			<if test="status != null">
				STATUS_COUNT,
			</if>
			<if test="supplierType != null">
				REVIEW_TYPE,
			</if>
			<if test="recordId != null">
				RECORD_ID,
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL,
			</if>

		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="conditionId != null">
				#{conditionId,jdbcType=VARCHAR},
			</if>
			<if test="join != null">
				#{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=DECIMAL},
			</if>
			<if test="supplierType != null">
				#{supplierType,jdbcType=VARCHAR},
			</if>
			<if test="recordId != null">
				#{recordId,jdbcType=VARCHAR},
			</if>
			<if test="supplierLevel != null">
				#{SUPPLIER_LEVEL,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<!-- 修改预研项目抽取结果 -->
	<update id="updateAdvByPrimaryKeySelective" parameterType="extract.model.supplier.SupplierExtractResult">
		
		update T_SES_SMS_SUPPLIER_EXT_RELATE
		<set>
			<if test="supplierId != null">
				SUPPLIER_ID = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="conditionId != null">
				SUPPLIER_CONDITION_ID =	#{conditionId,jdbcType=VARCHAR},
			</if>
			<if test="join != null">
				OPERATING_TYPE = #{join,jdbcType=DECIMAL},
			</if>
			<if test="isDeleted != null">
				IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
			</if>
			<if test="reason != null">
				REASON = #{reason,jdbcType=VARCHAR},
			</if>
			<if test="projectId != null">
				PROJECT_ID = #{projectId,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				UPDATED_AT = #{updatedAt,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				STATUS_COUNT = #{status,jdbcType=DECIMAL},
			</if>
			<if test="supplierType != null">
				REVIEW_TYPE = #{supplierType,jdbcType=VARCHAR},
			</if>
			<if test="recordId != null">
				RECORD_ID = #{recordId,jdbcType=VARCHAR},
			</if>
			<if test="supplierLevel != null">
				SUPPLIER_LEVEL = #{supplierLevel,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	
	
	<select id="selectFirstSupplierToBeExtract"  resultMap="BaseResultMap">
		SELECT
			SUPPLIER_ID,UPDATED_AT
		FROM
			T_SES_SMS_EXTRACT_RESULT
		WHERE
			JOIN = 1
		AND	RECORD_ID = #{value}
		AND SUPPLIER_ID NOT IN (
			SELECT
				RS.SUPPLIER_ID
			FROM
				T_SES_SMS_EXTRACT_RECORD R
			LEFT JOIN T_SES_SMS_EXTRACT_RESULT RS ON R. ID = RS.RECORD_ID
			WHERE
				R.STATUS = 1
			AND RS.
			JOIN = 1
			AND R.IS_DELETE = 0
			GROUP BY
				SUPPLIER_ID
		)
	</select>
	
	
	<select id="selectFirstSupplierToBeExtractOfRel" resultMap="advResult">
		SELECT
			SUPPLIER_ID,UPDATED_AT
		FROM
			T_SES_SMS_SUPPLIER_EXT_RELATE
		WHERE
			OPERATING_TYPE = 1
		AND	RECORD_ID IN (
				SELECT
					ID
				FROM
					T_SES_SMS_EXTRACT_RECORD
				WHERE
					PROJECT_ID = #{value}
			)
		AND SUPPLIER_ID NOT IN (
			SELECT
				RS.SUPPLIER_ID
			FROM
				T_SES_SMS_EXTRACT_RECORD R
			LEFT JOIN T_SES_SMS_EXTRACT_RESULT RS ON R. ID = RS.RECORD_ID
			WHERE
				R.STATUS = 1
			AND RS.
			OPERATING_TYPE = 1
			AND R.IS_DELETE = 0
			GROUP BY
				SUPPLIER_ID
		)
	</select>
	
</mapper>