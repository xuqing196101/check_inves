<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="iss.dao.fs.TopicMapper">
		  <resultMap id="TopicResultMap" type="iss.model.fs.Topic">
		    <id column="ID" property="id" />
		    <result column="NAME"  property="name" />
		    <result column="CREATED_AT"  property="createdAt" jdbcType="TIMESTAMP"/>
		    <result column="UPDATED_AT"  property="updatedAt" jdbcType="TIMESTAMP"/>
		    <result column="IS_DELETED"  property="isDeleted" />  
		     <result column="CONTENT" jdbcType="CLOB" property="content" />		     
		    <association  column="PARK_ID"  property="park"  select="iss.dao.fs.ParkMapper.selectByPrimaryKey"/>  
		    <association  column="USER_ID"  property="user" select="ses.dao.bms.UserMapper.selectByPrimaryKey"/>
		  </resultMap>
		  
		  	<resultMap type="iss.model.fs.Topic" id="TopicPostMap" extends="TopicResultMap">
		  		<collection property="posts" ofType="iss.model.fs.Post" resultMap="iss.dao.fs.PostMapper.PostResultMap"/> 
		 	</resultMap>
		    
		   <sql id="Tabel_Name">
		    T_ISS_FS_TOPIC
		  </sql>
	  
		  <!-- 表中所有列 -->
		  <sql id="Base_Column_List">
		    ID, NAME,CONTENT,PARK_ID, USER_ID,CREATED_AT, UPDATED_AT,IS_DELETED	    
		  </sql>
	  	
		  <!-- 查询条件 -->
		  <sql id="Example_Where_Clause">

		  </sql>
	    
		  <!-- 1.根据Id查询 -->
		  <select id="selectByPrimaryKey" parameterType="Object" resultMap="TopicPostMap">
			    select 
			    <include refid="Base_Column_List" />
			    from T_ISS_FS_TOPIC
			    where ID = #{id} AND IS_DELETED = 0
		  </select>
	    
		    <!-- 2.1查询列表 -->
		   <select id="queryByList" parameterType="Map" resultMap="TopicPostMap">
			    select 
			    <include refid="Base_Column_List" />
			    from T_ISS_FS_TOPIC T
			    WHERE T.IS_DELETED = 0
			    <if test="userId!= null">
			    AND T.PARK_ID IN (
			    SELECT P.ID from T_ISS_FS_PARK P
			    WHERE P.IS_DELETED = 0 AND P.USER_ID = #{userId})
			    </if>
                <if test="parkId!= null">
                    and T.PARK_ID = #{parkId}
                </if> 
                <if test="content!= null">
                    and T.CONTENT Like concat(concat('%', #{content}), '%')
                </if>  
			    ORDER BY T.CREATED_AT DESC
		  	</select>
		  	
		  	 <!-- 2.2查询列表 -->
		   <select id="getAll" parameterType="Object" resultMap="TopicPostMap">
			    select 
			    <include refid="Base_Column_List" />
			    from T_ISS_FS_TOPIC
			    AND IS_DELETED = 0
			    ORDER BY CREATED_AT DESC
		  	</select>
	  	
	  	  <!-- 3.查询列表总数 -->
		  <select id="queryByCount" resultType="Object" parameterType="Object">
		    select count(1) from T_ISS_FS_TOPIC
		    where IS_DELETED = 0
            <if test="park!= null">
             and PARK_ID = #{park.id}
             </if>         
		  </select>
	  
		  <!-- 4根据ID删除 -->
		  <update id="deleteByPrimaryKey" parameterType="Object">
			    update T_ISS_FS_TOPIC
                SET IS_DELETED = 1
			    where ID = #{id}
		  </update>
		  
		  <!-- 5插入一条数据 -->
		  <insert id="insertSelective" parameterType="iss.model.fs.Topic">
		    <selectKey keyProperty="id" resultType="String" order="BEFORE">
		        select sys_guid() from dual
		    </selectKey>
		    insert into T_ISS_FS_TOPIC
		    <trim prefix="(" suffix=")" suffixOverrides=",">
		      <if test="id != null">
		        ID,
		      </if>
		      <if test="name != null">
		        NAME,
		      </if>
		      <if test="createdAt != null">
		        CREATED_AT,
		      </if>
		      <if test="updatedAt != null">
		        UPDATED_AT,
		      </if>
		      <if test="content != null">
		        CONTENT,
		      </if>
		      <if test="user != null">
		        USER_ID,
		      </if>
		      <if test="park != null">
		        PARK_ID,
		      </if>
		      IS_DELETED,
		    </trim>
		    <trim prefix="values (" suffix=")" suffixOverrides=",">
		      <if test="id != null">
		        #{id},
		      </if>
		      <if test="name != null">
		        #{name},
		      </if>
		      <if test="createdAt != null">
		        #{createdAt,jdbcType=TIMESTAMP},
		      </if>
		      <if test="updatedAt != null">
		        #{updatedAt,jdbcType=TIMESTAMP},
		      </if>
		      <if test="content != null">
		        #{content},
		      </if>
		      <if test="user != null">
		        #{user.id},
		      </if>
		      <if test="park != null">
		        #{park.id},
		      </if>	
		      0,	      
		    </trim>
		  </insert>
	  
		  <!-- 6根据ID更新数据 -->
		  <update id="updateByPrimaryKeySelective" parameterType="iss.model.fs.Topic">
		    update T_ISS_FS_TOPIC
		    <set>
		      <if test="name != null">
		        NAME = #{name},
		      </if>
		      <if test="updatedAt != null">
		        UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
		      </if>
		      CONTENT = #{content},
		      <if test="park != null">
		        PARK_ID = #{park.id},
		      </if>		      
		    </set>
		    where ID = #{id}
		  </update>
		  
		  <!-- 7.根据parkId查询 -->
		  <select id="selectByParkID" parameterType="Object" resultMap="TopicResultMap">
			    select 
			    <include refid="Base_Column_List" />
			    from T_ISS_FS_TOPIC
			    where PARK_ID = #{parkID} 
			    AND IS_DELETED = 0
			    ORDER BY CREATED_AT DESC
		  </select>
           <!-- 校验 -->
           <select id="checkTopicName" parameterType="Map" resultType="Object">
              SELECT count(1) FROM T_ISS_FS_TOPIC
              WHERE NAME = #{name} 
              AND IS_DELETED = 0
              AND PARK_ID = #{parkId}
          </select> 
          
           <!-- 8.根据parkId和主题名称查询 -->
		  <select id="selectByParkIdAndName" parameterType="Map" resultMap="TopicResultMap">
			    select 
			    <include refid="Base_Column_List" />
			    from T_ISS_FS_TOPIC
			    where PARK_ID = #{parkId} 
			    <if test="name != null and name != ''">
		        	AND NAME LIKE  CONCAT(CONCAT('%', #{name}), '%')
		      	</if>
		      	<if test="content != null and content != ''">
		        	AND CONTENT LIKE  CONCAT(CONCAT('%', #{content}), '%')
		      	</if>	
			    AND IS_DELETED = 0
			    ORDER BY CREATED_AT DESC
		  </select>
</mapper>